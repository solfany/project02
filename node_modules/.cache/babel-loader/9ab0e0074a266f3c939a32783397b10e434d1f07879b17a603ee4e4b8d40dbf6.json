{"ast":null,"code":"// import React from \"react\";\n// import { Route, Switch, useLocation } from \"react-router-dom\";\n// // javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from \"perfect-scrollbar\";\n\n// // // core components\n// // import RTLNavbar from \"components/Navbars/RTLNavbar.js\";\n// // import Footer from \"components/Footer/Footer.js\";\n// // import Sidebar from \"components/Sidebar/Sidebar.js\";\n\n// // import routes from \"routes.js\";\n\n// // import logo from \"assets/img/react-logo.png\";\n// // import { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\n// var ps;\n\n// function RTL(props) {\n//   const location = useLocation();\n//   const mainPanelRef = React.useRef(null);\n//   const [sidebarOpened, setsidebarOpened] = React.useState(\n//     document.documentElement.className.indexOf(\"nav-open\") !== -1\n//   );\n//   React.useEffect(() => {\n//     if (navigator.platform.indexOf(\"Win\") > -1) {\n//       document.documentElement.className += \" perfect-scrollbar-on\";\n//       document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n//       ps = new PerfectScrollbar(mainPanelRef.current, {\n//         suppressScrollX: true,\n//       });\n//       let tables = document.querySelectorAll(\".table-responsive\");\n//       for (let i = 0; i < tables.length; i++) {\n//         ps = new PerfectScrollbar(tables[i]);\n//       }\n//     }\n//     // on this page, we need on the body tag the classes .rtl and .menu-on-right\n//     document.body.classList.add(\"rtl\", \"menu-on-right\");\n//     // we also need the rtl bootstrap\n//     // so we add it dynamically to the head\n//     let head = document.head;\n//     let link = document.createElement(\"link\");\n//     link.type = \"text/css\";\n//     link.rel = \"stylesheet\";\n//     link.id = \"rtl-id\";\n//     link.href =\n//       \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-rtl/3.4.0/css/bootstrap-rtl.css\";\n//     head.appendChild(link);\n//     // Specify how to clean up after this effect:\n//     return function cleanup() {\n//       if (navigator.platform.indexOf(\"Win\") > -1) {\n//         ps.destroy();\n//         document.documentElement.classList.add(\"perfect-scrollbar-off\");\n//         document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n//       }\n//       // when we exit this page, we need to delete the classes .rtl and .menu-on-right\n//       // from the body tag\n//       document.body.classList.remove(\"rtl\", \"menu-on-right\");\n//       // we also need to delete the rtl bootstrap, so it does not break the other pages\n//       // that do not make use of rtl\n//       document.getElementById(\"rtl-id\").remove();\n//     };\n//   });\n//   React.useEffect(() => {\n//     if (navigator.platform.indexOf(\"Win\") > -1) {\n//       let tables = document.querySelectorAll(\".table-responsive\");\n//       for (let i = 0; i < tables.length; i++) {\n//         ps = new PerfectScrollbar(tables[i]);\n//       }\n//     }\n//     document.documentElement.scrollTop = 0;\n//     document.scrollingElement.scrollTop = 0;\n//     if (mainPanelRef.current) {\n//       mainPanelRef.current.scrollTop = 0;\n//     }\n//   }, [location]);\n//   // this function opens and closes the sidebar on small devices\n//   const toggleSidebar = () => {\n//     document.documentElement.classList.toggle(\"nav-open\");\n//     setsidebarOpened(!sidebarOpened);\n//   };\n//   const getRoutes = (routes) => {\n//     return routes.map((prop, key) => {\n//       if (prop.layout === \"/rtl\") {\n//         return (\n//           <Route\n//             path={prop.layout + prop.path}\n//             component={prop.component}\n//             key={key}\n//           />\n//         );\n//       } else {\n//         return null;\n//       }\n//     });\n//   };\n//   // const getBrandText = (path) => {\n//   //   for (let i = 0; i < routes.length; i++) {\n//   //     if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n//   //       return routes[i].name;\n//   //     }\n//   //   }\n//   return \"Brand\";\n// }\n\n// export default RTL;","map":{"version":3,"names":[],"sources":["/Users/kimsoulbee/Desktop/black-dashboard-react-master/src/layouts/RTL/RTL.js"],"sourcesContent":["// import React from \"react\";\n// import { Route, Switch, useLocation } from \"react-router-dom\";\n// // javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from \"perfect-scrollbar\";\n\n// // // core components\n// // import RTLNavbar from \"components/Navbars/RTLNavbar.js\";\n// // import Footer from \"components/Footer/Footer.js\";\n// // import Sidebar from \"components/Sidebar/Sidebar.js\";\n\n// // import routes from \"routes.js\";\n\n// // import logo from \"assets/img/react-logo.png\";\n// // import { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\n\n// var ps;\n\n// function RTL(props) {\n//   const location = useLocation();\n//   const mainPanelRef = React.useRef(null);\n//   const [sidebarOpened, setsidebarOpened] = React.useState(\n//     document.documentElement.className.indexOf(\"nav-open\") !== -1\n//   );\n//   React.useEffect(() => {\n//     if (navigator.platform.indexOf(\"Win\") > -1) {\n//       document.documentElement.className += \" perfect-scrollbar-on\";\n//       document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n//       ps = new PerfectScrollbar(mainPanelRef.current, {\n//         suppressScrollX: true,\n//       });\n//       let tables = document.querySelectorAll(\".table-responsive\");\n//       for (let i = 0; i < tables.length; i++) {\n//         ps = new PerfectScrollbar(tables[i]);\n//       }\n//     }\n//     // on this page, we need on the body tag the classes .rtl and .menu-on-right\n//     document.body.classList.add(\"rtl\", \"menu-on-right\");\n//     // we also need the rtl bootstrap\n//     // so we add it dynamically to the head\n//     let head = document.head;\n//     let link = document.createElement(\"link\");\n//     link.type = \"text/css\";\n//     link.rel = \"stylesheet\";\n//     link.id = \"rtl-id\";\n//     link.href =\n//       \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-rtl/3.4.0/css/bootstrap-rtl.css\";\n//     head.appendChild(link);\n//     // Specify how to clean up after this effect:\n//     return function cleanup() {\n//       if (navigator.platform.indexOf(\"Win\") > -1) {\n//         ps.destroy();\n//         document.documentElement.classList.add(\"perfect-scrollbar-off\");\n//         document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n//       }\n//       // when we exit this page, we need to delete the classes .rtl and .menu-on-right\n//       // from the body tag\n//       document.body.classList.remove(\"rtl\", \"menu-on-right\");\n//       // we also need to delete the rtl bootstrap, so it does not break the other pages\n//       // that do not make use of rtl\n//       document.getElementById(\"rtl-id\").remove();\n//     };\n//   });\n//   React.useEffect(() => {\n//     if (navigator.platform.indexOf(\"Win\") > -1) {\n//       let tables = document.querySelectorAll(\".table-responsive\");\n//       for (let i = 0; i < tables.length; i++) {\n//         ps = new PerfectScrollbar(tables[i]);\n//       }\n//     }\n//     document.documentElement.scrollTop = 0;\n//     document.scrollingElement.scrollTop = 0;\n//     if (mainPanelRef.current) {\n//       mainPanelRef.current.scrollTop = 0;\n//     }\n//   }, [location]);\n//   // this function opens and closes the sidebar on small devices\n//   const toggleSidebar = () => {\n//     document.documentElement.classList.toggle(\"nav-open\");\n//     setsidebarOpened(!sidebarOpened);\n//   };\n//   const getRoutes = (routes) => {\n//     return routes.map((prop, key) => {\n//       if (prop.layout === \"/rtl\") {\n//         return (\n//           <Route\n//             path={prop.layout + prop.path}\n//             component={prop.component}\n//             key={key}\n//           />\n//         );\n//       } else {\n//         return null;\n//       }\n//     });\n//   };\n//   // const getBrandText = (path) => {\n//   //   for (let i = 0; i < routes.length; i++) {\n//   //     if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n//   //       return routes[i].name;\n//   //     }\n//   //   }\n//   return \"Brand\";\n// }\n\n// export default RTL;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}