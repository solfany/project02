{"ast":null,"code":"import _objectSpread from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as _getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n      if (me._request) {\n        return;\n      }\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n        me._request = null;\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          me._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          me._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      me._lastDate = date;\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n      if (me._active) {\n        me._notify(false);\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n      if (!me._active) {\n        me._target[prop] = to;\n        me._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas('bar').reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n        return;\n      }\n      delete stacks[axis][meta.index];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = me._data;\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, me);\n          var meta = me._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n        me._syncList = [];\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me._dataCheck();\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n      me._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      me._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n        data = me._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = me._getOtherScale(scale);\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, value, parsed, otherValue;\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = me.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var data = me._data;\n      var elements = me._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(me._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          me[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      me._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        me.parse(0, count);\n      }\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n      me.parse(start, count);\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._syncList.push(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._syncList.push(['_removeElements', start, count]);\n      this._syncList.push(['_insertElements', start, arguments.length - 2]);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._syncList.push(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = me._getRuler();\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n        if (item.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n        vScale = _me$_cachedMeta.vScale,\n        _stacked = _me$_cachedMeta._stacked;\n      var _me$options = me.options,\n        baseValue = _me$options.base,\n        minBarLength = _me$options.minBarLength;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = size < 0 ? -minBarLength : minBarLength;\n        if (value === 0) {\n          base -= size / 2;\n        }\n        head = base + size;\n      }\n      var actualBase = baseValue || 0;\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n        if (size > 0) {\n          base += halfGrid;\n          size -= halfGrid;\n        } else if (size < 0) {\n          base -= halfGrid;\n          size += halfGrid;\n        }\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n        _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n        xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n        _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n        yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n        data = _this$_cachedMeta.data,\n        _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n        iScale = _me$_cachedMeta2.iScale,\n        vScale = _me$_cachedMeta2.vScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        me.updateElement(point, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n    _classCallCheck(this, DoughnutController);\n    _this = _super3.call(this, chart, datasetIndex);\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n      var chartWeight = me._getRingWeight(me.index);\n      var _me$_getRotationExten = me._getRotationExtents(),\n        circumference = _me$_getRotationExten.circumference,\n        rotation = _me$_getRotationExten.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var circumference = me._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n        return 0;\n      }\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var startAngle = me._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            if (controller !== me) {\n              controller.configure();\n            }\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      me._drawStart = start;\n      me._drawCount = count;\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n        iScale = _me$_cachedMeta3.iScale,\n        vScale = _me$_cachedMeta3.vScale,\n        _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n      _parsed = meta._parsed;\n    var axis = iScale.axis;\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale,\n    _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n    _classCallCheck(this, PolarAreaController);\n    _this2 = _super5.call(this, chart, datasetIndex);\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n  var _super8 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super8.apply(this, arguments);\n  }\n  return _createClass(ScatterController);\n}(LineController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n      index = _metasets$i2.index,\n      data = _metasets$i2.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  var box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  var userPadding = params.padding;\n  var x = chartArea.x;\n  var y = chartArea.y;\n  var i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super9 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n    x = _getRelativePosition$.x,\n    y = _getRelativePosition$.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super10 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && _getParentNode(container));\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return me;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super11 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this4;\n    _classCallCheck(this, Scale);\n    _this4 = _super11.call(this);\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n      var _me$getUserBounds = me.getUserBounds(),\n        min = _me$getUserBounds.min,\n        max = _me$getUserBounds.max,\n        minDefined = _me$getUserBounds.minDefined,\n        maxDefined = _me$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = me.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = me._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n        _me$options2 = me.options,\n        tickOpts = _me$options2.ticks,\n        titleOpts = _me$options2.title,\n        gridOpts = _me$options2.grid;\n      var display = me._isVisible();\n      var isHorizontal = me.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n            first = _me$_getLabelSizes.first,\n            last = _me$_getLabelSizes.last,\n            widest = _me$_getLabelSizes.widest,\n            highest = _me$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n      me._handleMargins();\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n        _me$options3$ticks = _me$options3.ticks,\n        align = _me$options3$ticks.align,\n        padding = _me$options3$ticks.padding,\n        position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n        axis = _this$options.axis,\n        position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = me._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID = Object.keys(position)[0];\n          var _value = position[_positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID].getPixelForValue(_value));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          x = me.chart.scales[_positionAxisID2].getPixelForValue(_value2);\n        }\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = me._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        if (isHorizontal) {\n          x = pixel;\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n        position = _me$options4.position,\n        ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n        position = _me$options5.position,\n        _me$options5$ticks = _me$options5.ticks,\n        crossAlign = _me$options5$ticks.crossAlign,\n        mirror = _me$options5$ticks.mirror,\n        padding = _me$options5$ticks.padding;\n      var labelSizes = me._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          textAlign = 'left';\n          x = me.right + padding;\n        } else {\n          x = me.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          textAlign = 'right';\n          x = me.left + padding;\n        } else {\n          x = me.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n      if (me.options.ticks.mirror) {\n        return;\n      }\n      var chart = me.chart;\n      var position = me.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var me = this;\n      var chart = me.chart,\n        ctx = me.ctx,\n        grid = me.options.grid;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      var borderValue = me._borderValue;\n      var x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = me.ctx;\n      var area = me._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options2 = this.options,\n        position = _this$options2.position,\n        title = _this$options2.title,\n        reverse = _this$options2.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom') {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n      if (!me._isVisible()) {\n        return;\n      }\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = opts.grid && opts.grid.z || 0;\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var me = this;\n      var fontSize = me._resolveTickFontOptions(0).lineHeight;\n      return (me.isHorizontal() ? me.width : me.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n        me._notify(me._init, chart, 'install');\n      }\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n      var result = me._notify(descriptors, chart, hook, args);\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n        me._notify(me._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator4 = _createForOfIteratorHelper(descriptors),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var descriptor = _step4.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator5 = _createForOfIteratorHelper(names),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var prop = _step5.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator6 = _createForOfIteratorHelper(names),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var prop = _step6.value;\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return false;\n}\nvar version = \"3.4.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, config) {\n    var _this5 = this;\n    _classCallCheck(this, Chart);\n    var me = this;\n    this.config = config = new Config(config);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n        aspectRatio = _this$options3.aspectRatio,\n        maintainAspectRatio = _this$options3.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"_initializePlatform\",\n    value: function _initializePlatform(canvas, config) {\n      if (config.platform) {\n        return new config.platform();\n      } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return new BasicPlatform();\n      }\n      return new DomPlatform();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n      if (!retinaScale(me, newRatio, true)) {\n        return;\n      }\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n        datasets = me.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n      me._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n          meta = me.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      me._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      var existingEvents = new Set(Object.keys(me._listeners));\n      var newEvents = new Set(me.options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n      me._plugins.invalidate();\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n          controller = _me$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      me._minPadding = minPadding;\n      me._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      me._updateDatasets(mode);\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      me._layers.sort(compare2Level('z', '_idx'));\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n          width = _me$_resizeBeforeDraw.width,\n          height = _me$_resizeBeforeDraw.height;\n        me._resize(width, height);\n        me._resizeBeforeDraw = null;\n      }\n      me.clear();\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = me._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = me.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? me.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateDatasetVisibility\",\n    value: function _updateDatasetVisibility(datasetIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible: visible\n      });\n      me.update(function (ctx) {\n        return ctx.datasetIndex === datasetIndex ? mode : undefined;\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n        ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      me.config.clearCache();\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        me._eventHandler(e);\n      };\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var me = this;\n      if (!me._responsiveListeners) {\n        me._responsiveListeners = {};\n      }\n      var listeners = me._responsiveListeners;\n      var platform = me.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      each(me._listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._listeners = {};\n      each(me._responsiveListeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n          index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = me._handleEvent(e, replay);\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        me.render();\n      }\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n        lastActive = _me$_active === void 0 ? [] : _me$_active,\n        options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n      me._lastEvent = null;\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n      changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        me._active = active;\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this7;\n    _classCallCheck(this, ArcElement);\n    _this7 = _super12.call(this);\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n    return _this7;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint.angle,\n        distance = _getAngleFromPoint.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options4 = this.options,\n        offset = _this$options4.offset,\n        spacing = _this$options4.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options,\n        circumference = me.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (me.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, me, radiusOffset, spacing);\n      drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref2 = params || {},\n    _ref2$move = _ref2.move,\n    move = _ref2$move === void 0 ? true : _ref2$move,\n    reverse = _ref2.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref3 = params || {},\n    _ref3$move = _ref3.move,\n    move = _ref3$move === void 0 ? true : _ref3$move,\n    reverse = _ref3.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator7 = _createForOfIteratorHelper(segments),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var segment = _step7.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this8;\n    _classCallCheck(this, LineElement);\n    _this8 = _super13.call(this);\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n    return _this8;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var me = this;\n      var options = me.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n        _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n      var segmentMethod = _getSegmentMethod(me);\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n      var _iterator8 = _createForOfIteratorHelper(segments),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var segment = _step8.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n      ctx.save();\n      _draw(ctx, me, start, count);\n      ctx.restore();\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  function PointElement(cfg) {\n    var _this9;\n    _classCallCheck(this, PointElement);\n    _this9 = _super14.call(this);\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n    return _this9;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n      if (me.skip || options.radius < 0.1) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction parseBorderSkipped(bar) {\n  var edge = bar.options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = parseBorderSkipped(bar);\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = parseBorderSkipped(bar);\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this10;\n    _classCallCheck(this, BarElement);\n    _this10 = _super15.call(this);\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n    return _this10;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, outer);\n        ctx.clip();\n        addRectPath(ctx, inner);\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n    min = _iScale$getUserBounds2.min,\n    max = _iScale$getUserBounds2.max,\n    minDefined = _iScale$getUserBounds2.minDefined,\n    maxDefined = _iScale$getUserBounds2.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var target = null;\n  var horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n    _ref4$x = _ref4.x,\n    x = _ref4$x === void 0 ? null : _ref4$x,\n    _ref4$y = _ref4.y,\n    y = _ref4$y === void 0 ? null : _ref4$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref5) {\n    var start = _ref5.start,\n      end = _ref5.end;\n    end = findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  var chart = source.chart,\n    scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nfunction getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator9 = _createForOfIteratorHelper(segments),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var segment = _step9.value;\n      var start = segment.start,\n        end = segment.end;\n      end = findSegmentEnd(start, end, points);\n      var bounds = getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator10 = _createForOfIteratorHelper(targetSegments),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var tgt = _step10.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator11 = _createForOfIteratorHelper(fillSources),\n            _step11;\n          try {\n            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n              var fillSource = _step11.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator11.e(err);\n          } finally {\n            _iterator11.f();\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref6 = bounds || {},\n    property = _ref6.property,\n    start = _ref6.start,\n    end = _ref6.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator12 = _createForOfIteratorHelper(segments),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var _step12$value = _step12.value,\n        src = _step12$value.source,\n        tgt = _step12$value.target,\n        start = _step12$value.start,\n        end = _step12$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      var targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      var loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref7 = fillOption || {},\n    _ref7$above = _ref7.above,\n    above = _ref7$above === void 0 ? color : _ref7$above,\n    _ref7$below = _ref7.below,\n    below = _ref7$below === void 0 ? color : _ref7$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this11;\n    _classCallCheck(this, Legend);\n    _this11 = _super16.call(this);\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = me._margins.left;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = me._margins.top;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n        ctx = me.ctx;\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = me._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxWidth = me.maxWidth,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n        maxHeight = me.maxHeight,\n        padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n      if (!me.options.display) {\n        return;\n      }\n      var titleHeight = me._computeTitleHeight();\n      var hitboxes = me.legendHitBoxes,\n        _me$options6 = me.options,\n        align = _me$options6.align,\n        padding = _me$options6.labels.padding,\n        rtl = _me$options6.rtl;\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        var _iterator13 = _createForOfIteratorHelper(hitboxes),\n          _step13;\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var hitbox = _step13.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = left;\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n        if (rtl) {\n          var boxMap = hitboxes.reduce(function (map, box) {\n            map[box.row] = map[box.row] || [];\n            map[box.row].push(box);\n            return map;\n          }, {});\n          var newBoxes = [];\n          Object.keys(boxMap).forEach(function (key) {\n            boxMap[key].reverse();\n            newBoxes.push.apply(newBoxes, _toConsumableArray(boxMap[key]));\n          });\n          me.legendHitBoxes = newBoxes;\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        var _iterator14 = _createForOfIteratorHelper(hitboxes),\n          _step14;\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var _hitbox = _step14.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n        me._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n        columnSizes = me.columnSizes,\n        lineWidths = me.lineWidths,\n        ctx = me.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = me.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n        me._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this12;\n    _classCallCheck(this, Title);\n    _this12 = _super17.call(this);\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n      var _me$_drawArgs = me._drawArgs(offset),\n        titleX = _me$_drawArgs.titleX,\n        titleY = _me$_drawArgs.titleY,\n        maxWidth = _me$_drawArgs.maxWidth,\n        rotation = _me$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this13;\n    _classCallCheck(this, Tooltip);\n    _this13 = _super18.call(this);\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n        caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n      if (!opacity) {\n        return;\n      }\n      me._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref8) {\n        var datasetIndex = _ref8.datasetIndex,\n          index = _ref8.index;\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = me._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n      var positionChanged = me._positionChanged(active, e);\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        me._active = active;\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this14;\n    _classCallCheck(this, CategoryScale);\n    _this14 = _super19.call(this, cfg);\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getUserBounds2 = me.getUserBounds(),\n        minDefined = _me$getUserBounds2.minDefined,\n        maxDefined = _me$getUserBounds2.maxDefined;\n      var _me$getMinMax = me.getMinMax(true),\n        min = _me$getMinMax.min,\n        max = _me$getMinMax.max;\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref9) {\n  var horizontal = _ref9.horizontal,\n    minRotation = _ref9.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this15;\n    _classCallCheck(this, LinearScaleBase);\n    _this15 = _super20.call(this, cfg);\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var beginAtZero = me.options.beginAtZero;\n      var _me$getUserBounds3 = me.getUserBounds(),\n        minDefined = _me$getUserBounds3.minDefined,\n        maxDefined = _me$getUserBounds3.maxDefined;\n      var min = me.min,\n        max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        setMax(max + 1);\n        if (!beginAtZero) {\n          setMin(min - 1);\n        }\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax2 = me.getMinMax(true),\n        min = _me$getMinMax2.min,\n        max = _me$getMinMax2.max;\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n      var horizontal = me.isHorizontal();\n      var length = horizontal ? me.width : me.height;\n      var minRotation = toRadians(me.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = me._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this16;\n    _classCallCheck(this, LogarithmicScale);\n    _this16 = _super22.call(this, cfg);\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax3 = me.getMinMax(true),\n        min = _me$getMinMax3.min,\n        max = _me$getMinMax3.max;\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var _me$getUserBounds4 = me.getUserBounds(),\n        minDefined = _me$getUserBounds4.minDefined,\n        maxDefined = _me$getUserBounds4.maxDefined;\n      var min = me.min;\n      var max = me.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale.getLabels().length;\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (var i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    var angle = toDegrees(scale.getIndexAngle(i));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this17;\n    _classCallCheck(this, RadialLinearScale);\n    _this17 = _super23.call(this, cfg);\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var _me$getMinMax4 = me.getMinMax(false),\n        min = _me$getMinMax4.min,\n        max = _me$getMinMax4.max;\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options7 = me.options,\n        backgroundColor = _me$options7.backgroundColor,\n        circular = _me$options7.grid.circular;\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this18;\n    _classCallCheck(this, TimeScale);\n    _this18 = _super24.call(this, props);\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    _this18._parseOpts = undefined;\n    return _this18;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n      var _me$getUserBounds5 = me.getUserBounds(),\n        min = _me$getUserBounds5.min,\n        max = _me$getUserBounds5.max,\n        minDefined = _me$getUserBounds5.minDefined,\n        maxDefined = _me$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = me.min;\n      var max = me.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n      var size = me._getLabelSize(exampleLabel);\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = me.getMatchingVisibleMetas();\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = me.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this19;\n    _classCallCheck(this, TimeSeriesScale);\n    _this19 = _super25.call(this, props);\n    _this19._table = [];\n    _this19._minPos = undefined;\n    _this19._tableRange = undefined;\n    return _this19;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n      var timestamps = me._getTimestampsForTable();\n      var table = me._table = me.buildLookupTable(timestamps);\n      me._minPos = interpolate(table, me.min);\n      me._tableRange = interpolate(table, me.max) - me._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","log10","J","_factorize","K","finiteOrDefault","L","callback","M","_addGrace","N","toDegrees","O","_measureText","Q","_int16Range","R","_alignPixel","S","clipArea","U","renderText","V","unclipArea","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","done","err","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_parsed$i","_defineProperty","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","_DatasetController","_inherits","_super","_createSuper","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","_get","_getPrototypeOf","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","_me$_cachedMeta","_me$options","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","_super2","_this$_parsing3","_this$_parsing3$xAxis","_this$_parsing3$yAxis","_this$_cachedMeta","points","_me$_cachedMeta2","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","_DatasetController3","_super3","_this","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_me$_getRotationExten","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","_DatasetController4","_super4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","_me$_cachedMeta3","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","_iScale$getUserBounds","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_DatasetController5","_super5","_this2","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this3","angleLines","display","circular","pointLabels","PieController","_DoughnutController","_super6","RadarController","_DatasetController6","_super7","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","_LineController","_super8","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","_metasets$i","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","_metasets$i2","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","_updateDims","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","_BasePlatform","_super9","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition$","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","_BasePlatform2","_super10","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","_this$getProps","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_Element","_super11","_this4","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","_me$getUserBounds","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","_me$options2","titleOpts","gridOpts","titleHeight","_me$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_me$options3","_me$options3$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_me$options4","_me$options5","_me$options5$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_this$options2","_titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_iterator4","_step4","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","subResolver","_iterator5","_step5","descriptorDefaults","_getResolver2","resolverCache","includes","_descriptors2","isScriptable","isIndexable","_iterator6","_step6","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","_this5","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","_this$options3","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_defaults$datasets$ty","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_me$getDatasetMeta","_updateLayout","_updateDatasets","_eventHandler","noArea","_me$_layers","_idx","_updateDataset","_me$_resizeBeforeDraw","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","_this6","eventFilter","_handleEvent","_me$_active","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","_Element2","_super12","_this7","_assertThisInitialized","chartX","chartY","_getAngleFromPoint","_this$getProps2","rAdjust","betweenAngles","withinRadius","_this$getProps3","_this$options4","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref2","_ref2$move","fastPathSegment","_pathVars2","_ref3","_ref3$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator7","_step7","usePath2D","LineElement","_Element3","_super13","_this8","_points","_segments","_pointsUpdated","interpolate","_interpolate","_segments$i","interpolated","_iterator8","_step8","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_super14","_this9","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","getBarBounds","bar","_bar$getProps","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","_bar$getProps2","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","_Element5","_super15","_this10","_boundingRects","addRectPath","_this$getProps6","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","_iScale$getUserBounds2","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi2","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","_source$scale","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","_ref4","_ref4$x","_ref4$y","linePoints","_ref5","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","_iterator9","_step9","targetSegments","_iterator10","_step10","tgt","subBounds","fillSources","_iterator11","_step11","fillSource","clipBounds","_scale$chart$chartAre","_ref6","interpolatedLineTo","interpolatedPoint","_fill","_iterator12","_step12","_step12$value","src","_src$style","_src$style2","_src$style2$backgroun","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","_ref7","_ref7$above","_ref7$below","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_Element6","_super16","_this11","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","_me$options6","rtl","_iterator13","_step13","hitbox","boxMap","newBoxes","_iterator14","_step14","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","_chart$legend$options","Title","_Element7","_super17","_this12","_padding","textSize","_drawArgs","fontOpts","_me$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","_Element8","_super18","_this13","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref8","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_Scale","_super19","_this14","_startValue","_valueRange","isFinite","_me$getUserBounds2","_me$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref9","rad","LinearScaleBase","_Scale2","_super20","_this15","_endValue","handleTickRangeOptions","_me$getUserBounds3","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","_LinearScaleBase","_super21","_me$getMinMax2","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_Scale3","_super22","_this16","_zero","_me$getMinMax3","_me$getUserBounds4","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","_scale$_pointLabelIte","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","_LinearScaleBase2","_super23","_this17","_me$getMinMax4","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_me$options7","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_super24","_this18","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_me$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_super25","_this19","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/kimsoulbee/Desktop/black-dashboard-react-master/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.4.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n      if (rtl) {\n        const boxMap = hitboxes.reduce((map, box) => {\n          map[box.row] = map[box.row] || [];\n          map[box.row].push(box);\n          return map;\n        }, {});\n        const newBoxes = [];\n        Object.keys(boxMap).forEach(key => {\n          boxMap[key].reverse();\n          newBoxes.push(...boxMap[key]);\n        });\n        me.legendHitBoxes = newBoxes;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,MAAK,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,mBAAmB,EAAEC,CAAC,IAAIC,iBAAiB,EAAEC,CAAC,IAAIC,gBAAgB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,GAAG,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,OAAO,EAAEC,CAAC,IAAIC,EAAE,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,qBAAqB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,aAAa,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,IAAI,EAAEC,CAAC,IAAIC,eAAc,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,4BAA4B,EAAEC,CAAC,IAAIC,KAAK,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,eAAe,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,YAAY,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,WAAW,EAAEC,CAAC,IAAIC,QAAQ,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,UAAU,EAAEC,CAAC,IAAIC,MAAM,EAAEC,CAAC,IAAIC,kBAAkB,EAAEC,CAAC,IAAIC,cAAc,EAAEC,CAAC,IAAIC,SAAS,EAAEC,CAAC,IAAIC,KAAK,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,UAAU,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,GAAG,EAAEC,EAAE,IAAIC,QAAQ,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,iBAAiB,EAAEC,EAAE,IAAIC,iBAAiB,EAAEC,EAAE,IAAIC,0BAA0B,EAAEC,EAAE,IAAIC,gBAAgB,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,SAAS,EAAEC,EAAE,IAAIC,kBAAkB,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,eAAe,EAAEC,EAAE,IAAIC,aAAa,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,MAAM,EAAEC,EAAE,IAAIC,oBAAoB,EAAEC,EAAE,IAAIC,IAAI,EAAEC,EAAE,IAAIC,qBAAqB,EAAEC,EAAE,IAAIC,kBAAkB,EAAEC,EAAE,IAAIC,OAAO,EAAEC,EAAE,IAAIC,WAAW,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,YAAY,EAAEC,EAAE,IAAIC,cAAc,EAAEC,EAAE,IAAIC,OAAO,QAAQ,6BAA6B;AACr3D,SAASrL,CAAC,IAAIC,QAAQ,QAAQ,6BAA6B;AAAC,IAEtDqL,QAAQ;EACZ,SAAAA,SAAA,EAAc;IAAAC,eAAA,OAAAD,QAAA;IACZ,IAAI,CAACE,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,IAAIC,GAAG,EAAE;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,SAAS,GAAGC,SAAS;EAC5B;EAACC,YAAA,CAAAR,QAAA;IAAAS,GAAA;IAAAC,KAAA,EACD,SAAAC,QAAQC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAE;MAChC,IAAMC,SAAS,GAAGH,KAAK,CAACI,SAAS,CAACF,IAAI,CAAC;MACvC,IAAMG,QAAQ,GAAGL,KAAK,CAACM,QAAQ;MAC/BH,SAAS,CAACI,OAAO,CAAC,UAAAC,EAAE;QAAA,OAAIA,EAAE,CAAC;UACzBT,KAAK,EAALA,KAAK;UACLU,OAAO,EAAET,KAAK,CAACS,OAAO;UACtBJ,QAAQ,EAARA,QAAQ;UACRK,WAAW,EAAEC,IAAI,CAACC,GAAG,CAACX,IAAI,GAAGD,KAAK,CAACa,KAAK,EAAER,QAAQ;QACpD,CAAC,CAAC;MAAA,EAAC;IACL;EAAC;IAAAT,GAAA;IAAAC,KAAA,EACD,SAAAiB,SAAA,EAAW;MACT,IAAMC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAAC1B,QAAQ,EAAE;QACf;MACF;MACA0B,EAAE,CAACvB,QAAQ,GAAG,IAAI;MAClBuB,EAAE,CAAC1B,QAAQ,GAAGnM,gBAAgB,CAAC8N,IAAI,CAACC,MAAM,EAAE,YAAM;QAChDF,EAAE,CAACG,OAAO,EAAE;QACZH,EAAE,CAAC1B,QAAQ,GAAG,IAAI;QAClB,IAAI0B,EAAE,CAACvB,QAAQ,EAAE;UACfuB,EAAE,CAACD,QAAQ,EAAE;QACf;MACF,CAAC,CAAC;IACJ;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EACD,SAAAqB,QAAA,EAA2B;MAAA,IAAnBjB,IAAI,GAAAkB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAGE,IAAI,CAACC,GAAG,EAAE;MACvB,IAAMP,EAAE,GAAG,IAAI;MACf,IAAIQ,SAAS,GAAG,CAAC;MACjBR,EAAE,CAACzB,OAAO,CAACiB,OAAO,CAAC,UAACP,KAAK,EAAED,KAAK,EAAK;QACnC,IAAI,CAACC,KAAK,CAACwB,OAAO,IAAI,CAACxB,KAAK,CAACyB,KAAK,CAACL,MAAM,EAAE;UACzC;QACF;QACA,IAAMK,KAAK,GAAGzB,KAAK,CAACyB,KAAK;QACzB,IAAIhO,CAAC,GAAGgO,KAAK,CAACL,MAAM,GAAG,CAAC;QACxB,IAAIM,IAAI,GAAG,KAAK;QAChB,IAAIC,IAAI;QACR,OAAOlO,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UAClBkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;UACf,IAAIkO,IAAI,CAACC,OAAO,EAAE;YAChB,IAAID,IAAI,CAACE,MAAM,GAAG7B,KAAK,CAACM,QAAQ,EAAE;cAChCN,KAAK,CAACM,QAAQ,GAAGqB,IAAI,CAACE,MAAM;YAC9B;YACAF,IAAI,CAACG,IAAI,CAAC7B,IAAI,CAAC;YACfyB,IAAI,GAAG,IAAI;UACb,CAAC,MAAM;YACLD,KAAK,CAAChO,CAAC,CAAC,GAAGgO,KAAK,CAACA,KAAK,CAACL,MAAM,GAAG,CAAC,CAAC;YAClCK,KAAK,CAACM,GAAG,EAAE;UACb;QACF;QACA,IAAIL,IAAI,EAAE;UACR3B,KAAK,CAAC2B,IAAI,EAAE;UACZX,EAAE,CAACjB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;QAC5C;QACA,IAAI,CAACwB,KAAK,CAACL,MAAM,EAAE;UACjBpB,KAAK,CAACwB,OAAO,GAAG,KAAK;UACrBT,EAAE,CAACjB,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAE,UAAU,CAAC;UAC1CD,KAAK,CAACS,OAAO,GAAG,KAAK;QACvB;QACAc,SAAS,IAAIE,KAAK,CAACL,MAAM;MAC3B,CAAC,CAAC;MACFL,EAAE,CAACtB,SAAS,GAAGQ,IAAI;MACnB,IAAIsB,SAAS,KAAK,CAAC,EAAE;QACnBR,EAAE,CAACvB,QAAQ,GAAG,KAAK;MACrB;IACF;EAAC;IAAAI,GAAA;IAAAC,KAAA,EACD,SAAAmC,UAAUjC,KAAK,EAAE;MACf,IAAMkC,MAAM,GAAG,IAAI,CAAC3C,OAAO;MAC3B,IAAIU,KAAK,GAAGiC,MAAM,CAACC,GAAG,CAACnC,KAAK,CAAC;MAC7B,IAAI,CAACC,KAAK,EAAE;QACVA,KAAK,GAAG;UACNwB,OAAO,EAAE,KAAK;UACdf,OAAO,EAAE,IAAI;UACbgB,KAAK,EAAE,EAAE;UACTrB,SAAS,EAAE;YACT+B,QAAQ,EAAE,EAAE;YACZC,QAAQ,EAAE;UACZ;QACF,CAAC;QACDH,MAAM,CAACI,GAAG,CAACtC,KAAK,EAAEC,KAAK,CAAC;MAC1B;MACA,OAAOA,KAAK;IACd;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EACD,SAAAyC,OAAOvC,KAAK,EAAEwC,KAAK,EAAEC,EAAE,EAAE;MACvB,IAAI,CAACR,SAAS,CAACjC,KAAK,CAAC,CAACK,SAAS,CAACmC,KAAK,CAAC,CAACE,IAAI,CAACD,EAAE,CAAC;IACjD;EAAC;IAAA5C,GAAA;IAAAC,KAAA,EACD,SAAA6C,IAAI3C,KAAK,EAAE0B,KAAK,EAAE;MAAA,IAAAkB,qBAAA;MAChB,IAAI,CAAClB,KAAK,IAAI,CAACA,KAAK,CAACL,MAAM,EAAE;QAC3B;MACF;MACA,CAAAuB,qBAAA,OAAI,CAACX,SAAS,CAACjC,KAAK,CAAC,CAAC0B,KAAK,EAACgB,IAAI,CAAAG,KAAA,CAAAD,qBAAA,EAAAE,kBAAA,CAAIpB,KAAK,EAAC;IAC5C;EAAC;IAAA7B,GAAA;IAAAC,KAAA,EACD,SAAAiD,IAAI/C,KAAK,EAAE;MACT,OAAO,IAAI,CAACiC,SAAS,CAACjC,KAAK,CAAC,CAAC0B,KAAK,CAACL,MAAM,GAAG,CAAC;IAC/C;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAgB,MAAMd,KAAK,EAAE;MACX,IAAMC,KAAK,GAAG,IAAI,CAACV,OAAO,CAAC4C,GAAG,CAACnC,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,EAAE;QACV;MACF;MACAA,KAAK,CAACwB,OAAO,GAAG,IAAI;MACpBxB,KAAK,CAACa,KAAK,GAAGQ,IAAI,CAACC,GAAG,EAAE;MACxBtB,KAAK,CAACM,QAAQ,GAAGN,KAAK,CAACyB,KAAK,CAACsB,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG;QAAA,OAAKtC,IAAI,CAACuC,GAAG,CAACF,GAAG,EAAEC,GAAG,CAACE,SAAS,CAAC;MAAA,GAAE,CAAC,CAAC;MAClF,IAAI,CAACrC,QAAQ,EAAE;IACjB;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EACD,SAAA2B,QAAQzB,KAAK,EAAE;MACb,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAE;QAClB,OAAO,KAAK;MACd;MACA,IAAMQ,KAAK,GAAG,IAAI,CAACV,OAAO,CAAC4C,GAAG,CAACnC,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACwB,OAAO,IAAI,CAACxB,KAAK,CAACyB,KAAK,CAACL,MAAM,EAAE;QACnD,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAuD,KAAKrD,KAAK,EAAE;MACV,IAAMC,KAAK,GAAG,IAAI,CAACV,OAAO,CAAC4C,GAAG,CAACnC,KAAK,CAAC;MACrC,IAAI,CAACC,KAAK,IAAI,CAACA,KAAK,CAACyB,KAAK,CAACL,MAAM,EAAE;QACjC;MACF;MACA,IAAMK,KAAK,GAAGzB,KAAK,CAACyB,KAAK;MACzB,IAAIhO,CAAC,GAAGgO,KAAK,CAACL,MAAM,GAAG,CAAC;MACxB,OAAO3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAClBgO,KAAK,CAAChO,CAAC,CAAC,CAAC4P,MAAM,EAAE;MACnB;MACArD,KAAK,CAACyB,KAAK,GAAG,EAAE;MAChB,IAAI,CAAC3B,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEqB,IAAI,CAACC,GAAG,EAAE,EAAE,UAAU,CAAC;IACpD;EAAC;IAAA1B,GAAA;IAAAC,KAAA,EACD,SAAAyD,OAAOvD,KAAK,EAAE;MACZ,OAAO,IAAI,CAACT,OAAO,CAACiE,MAAM,CAACxD,KAAK,CAAC;IACnC;EAAC;EAAA,OAAAZ,QAAA;AAAA;AAEH,IAAIqE,QAAQ,GAAG,IAAIrE,QAAQ,EAAE;AAE7B,IAAMsE,WAAW,GAAG,aAAa;AACjC,IAAMC,aAAa,GAAG;EACpBC,OAAO,WAAAA,QAACC,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACxB,OAAOA,MAAM,GAAG,GAAG,GAAGD,EAAE,GAAGD,IAAI;EACjC,CAAC;EACDpQ,KAAK,WAAAA,MAACoQ,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACtB,IAAMC,EAAE,GAAGvQ,MAAK,CAACoQ,IAAI,IAAIH,WAAW,CAAC;IACrC,IAAMO,EAAE,GAAGD,EAAE,CAACE,KAAK,IAAIzQ,MAAK,CAACqQ,EAAE,IAAIJ,WAAW,CAAC;IAC/C,OAAOO,EAAE,IAAIA,EAAE,CAACC,KAAK,GACjBD,EAAE,CAACE,GAAG,CAACH,EAAE,EAAED,MAAM,CAAC,CAACK,SAAS,EAAE,GAC9BN,EAAE;EACR,CAAC;EACDO,MAAM,WAAAA,OAACR,IAAI,EAAEC,EAAE,EAAEC,MAAM,EAAE;IACvB,OAAOF,IAAI,GAAG,CAACC,EAAE,GAAGD,IAAI,IAAIE,MAAM;EACpC;AACF,CAAC;AAAC,IACIO,SAAS;EACb,SAAAA,UAAYC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEX,EAAE,EAAE;IAAAzE,eAAA,OAAAiF,SAAA;IACjC,IAAMI,YAAY,GAAGF,MAAM,CAACC,IAAI,CAAC;IACjCX,EAAE,GAAGzQ,OAAO,CAAC,CAACkR,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;IAClD,IAAMA,IAAI,GAAGxQ,OAAO,CAAC,CAACkR,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;IAClD,IAAI,CAACjC,OAAO,GAAG,IAAI;IACnB,IAAI,CAAC8C,GAAG,GAAGJ,GAAG,CAAC9D,EAAE,IAAIkD,aAAa,CAACY,GAAG,CAACpE,IAAI,IAAI,OAAO0D,IAAI,CAAC;IAC3D,IAAI,CAACe,OAAO,GAAGrR,OAAO,CAACgR,GAAG,CAACM,MAAM,CAAC,IAAItR,OAAO,CAACuR,MAAM;IACpD,IAAI,CAACC,MAAM,GAAGnE,IAAI,CAACoE,KAAK,CAAC1D,IAAI,CAACC,GAAG,EAAE,IAAIgD,GAAG,CAACU,KAAK,IAAI,CAAC,CAAC,CAAC;IACvD,IAAI,CAAC7B,SAAS,GAAG,IAAI,CAACtB,MAAM,GAAGlB,IAAI,CAACoE,KAAK,CAACT,GAAG,CAAChE,QAAQ,CAAC;IACvD,IAAI,CAAC2E,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;IACvB,IAAI,CAACC,OAAO,GAAGZ,MAAM;IACrB,IAAI,CAACa,KAAK,GAAGZ,IAAI;IACjB,IAAI,CAACa,KAAK,GAAGzB,IAAI;IACjB,IAAI,CAAC0B,GAAG,GAAGzB,EAAE;IACb,IAAI,CAAC0B,SAAS,GAAG7F,SAAS;EAC5B;EAACC,YAAA,CAAA0E,SAAA;IAAAzE,GAAA;IAAAC,KAAA,EACD,SAAA2F,OAAA,EAAS;MACP,OAAO,IAAI,CAAC5D,OAAO;IACrB;EAAC;IAAAhC,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOnB,GAAG,EAAET,EAAE,EAAE5D,IAAI,EAAE;MACpB,IAAMc,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACa,OAAO,EAAE;QACdb,EAAE,CAACjB,OAAO,CAAC,KAAK,CAAC;QACjB,IAAM2E,YAAY,GAAG1D,EAAE,CAACoE,OAAO,CAACpE,EAAE,CAACqE,KAAK,CAAC;QACzC,IAAMM,OAAO,GAAGzF,IAAI,GAAGc,EAAE,CAAC+D,MAAM;QAChC,IAAMa,MAAM,GAAG5E,EAAE,CAACoC,SAAS,GAAGuC,OAAO;QACrC3E,EAAE,CAAC+D,MAAM,GAAG7E,IAAI;QAChBc,EAAE,CAACoC,SAAS,GAAGxC,IAAI,CAACoE,KAAK,CAACpE,IAAI,CAACuC,GAAG,CAACyC,MAAM,EAAErB,GAAG,CAAChE,QAAQ,CAAC,CAAC;QACzDS,EAAE,CAACc,MAAM,IAAI6D,OAAO;QACpB3E,EAAE,CAACkE,KAAK,GAAG,CAAC,CAACX,GAAG,CAACY,IAAI;QACrBnE,EAAE,CAACuE,GAAG,GAAGlS,OAAO,CAAC,CAACkR,GAAG,CAACT,EAAE,EAAEA,EAAE,EAAEY,YAAY,EAAEH,GAAG,CAACV,IAAI,CAAC,CAAC;QACtD7C,EAAE,CAACsE,KAAK,GAAGjS,OAAO,CAAC,CAACkR,GAAG,CAACV,IAAI,EAAEa,YAAY,EAAEZ,EAAE,CAAC,CAAC;MAClD;IACF;EAAC;IAAAjE,GAAA;IAAAC,KAAA,EACD,SAAAwD,OAAA,EAAS;MACP,IAAMtC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACa,OAAO,EAAE;QACdb,EAAE,CAACe,IAAI,CAACT,IAAI,CAACC,GAAG,EAAE,CAAC;QACnBP,EAAE,CAACa,OAAO,GAAG,KAAK;QAClBb,EAAE,CAACjB,OAAO,CAAC,KAAK,CAAC;MACnB;IACF;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAiC,KAAK7B,IAAI,EAAE;MACT,IAAMc,EAAE,GAAG,IAAI;MACf,IAAM2E,OAAO,GAAGzF,IAAI,GAAGc,EAAE,CAAC+D,MAAM;MAChC,IAAMxE,QAAQ,GAAGS,EAAE,CAACoC,SAAS;MAC7B,IAAMqB,IAAI,GAAGzD,EAAE,CAACqE,KAAK;MACrB,IAAMxB,IAAI,GAAG7C,EAAE,CAACsE,KAAK;MACrB,IAAMH,IAAI,GAAGnE,EAAE,CAACkE,KAAK;MACrB,IAAMpB,EAAE,GAAG9C,EAAE,CAACuE,GAAG;MACjB,IAAIxB,MAAM;MACV/C,EAAE,CAACa,OAAO,GAAGgC,IAAI,KAAKC,EAAE,KAAKqB,IAAI,IAAKQ,OAAO,GAAGpF,QAAS,CAAC;MAC1D,IAAI,CAACS,EAAE,CAACa,OAAO,EAAE;QACfb,EAAE,CAACoE,OAAO,CAACX,IAAI,CAAC,GAAGX,EAAE;QACrB9C,EAAE,CAACjB,OAAO,CAAC,IAAI,CAAC;QAChB;MACF;MACA,IAAI4F,OAAO,GAAG,CAAC,EAAE;QACf3E,EAAE,CAACoE,OAAO,CAACX,IAAI,CAAC,GAAGZ,IAAI;QACvB;MACF;MACAE,MAAM,GAAI4B,OAAO,GAAGpF,QAAQ,GAAI,CAAC;MACjCwD,MAAM,GAAGoB,IAAI,IAAIpB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGA,MAAM,GAAGA,MAAM;MACjDA,MAAM,GAAG/C,EAAE,CAAC4D,OAAO,CAAChE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEY,MAAM,CAAC,CAAC,CAAC;MACrD/C,EAAE,CAACoE,OAAO,CAACX,IAAI,CAAC,GAAGzD,EAAE,CAAC2D,GAAG,CAACd,IAAI,EAAEC,EAAE,EAAEC,MAAM,CAAC;IAC7C;EAAC;IAAAlE,GAAA;IAAAC,KAAA,EACD,SAAA+F,KAAA,EAAO;MACL,IAAMC,QAAQ,GAAG,IAAI,CAACN,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAC;MACxD,OAAO,IAAIO,OAAO,CAAC,UAACC,GAAG,EAAEC,GAAG,EAAK;QAC/BH,QAAQ,CAACpD,IAAI,CAAC;UAACsD,GAAG,EAAHA,GAAG;UAAEC,GAAG,EAAHA;QAAG,CAAC,CAAC;MAC3B,CAAC,CAAC;IACJ;EAAC;IAAApG,GAAA;IAAAC,KAAA,EACD,SAAAC,QAAQmG,QAAQ,EAAE;MAChB,IAAMC,MAAM,GAAGD,QAAQ,GAAG,KAAK,GAAG,KAAK;MACvC,IAAMJ,QAAQ,GAAG,IAAI,CAACN,SAAS,IAAI,EAAE;MACrC,KAAK,IAAI9R,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoS,QAAQ,CAACzE,MAAM,EAAE3N,CAAC,EAAE,EAAE;QACxCoS,QAAQ,CAACpS,CAAC,CAAC,CAACyS,MAAM,CAAC,EAAE;MACvB;IACF;EAAC;EAAA,OAAA7B,SAAA;AAAA;AAGH,IAAM8B,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC;AAC9D,IAAMC,MAAM,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,iBAAiB,CAAC;AAC1DtS,QAAQ,CAACuO,GAAG,CAAC,WAAW,EAAE;EACxB2C,KAAK,EAAEtF,SAAS;EAChBY,QAAQ,EAAE,IAAI;EACdsE,MAAM,EAAE,cAAc;EACtBpE,EAAE,EAAEd,SAAS;EACbkE,IAAI,EAAElE,SAAS;EACfwF,IAAI,EAAExF,SAAS;EACfmE,EAAE,EAAEnE,SAAS;EACbQ,IAAI,EAAER;AACR,CAAC,CAAC;AACF,IAAM2G,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACzS,QAAQ,CAAC0S,SAAS,CAAC;AACxD1S,QAAQ,CAAC2S,QAAQ,CAAC,WAAW,EAAE;EAC7BC,SAAS,EAAE,KAAK;EAChBC,UAAU,EAAE,KAAK;EACjBC,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,IAAI;EAAA;AACxF,CAAC,CAAC;AACF/S,QAAQ,CAACuO,GAAG,CAAC,YAAY,EAAE;EACzB+D,MAAM,EAAE;IACNlG,IAAI,EAAE,OAAO;IACb4G,UAAU,EAAEV;EACd,CAAC;EACDD,OAAO,EAAE;IACPjG,IAAI,EAAE,QAAQ;IACd4G,UAAU,EAAEX;EACd;AACF,CAAC,CAAC;AACFrS,QAAQ,CAAC2S,QAAQ,CAAC,YAAY,EAAE;EAC9BC,SAAS,EAAE;AACb,CAAC,CAAC;AACF5S,QAAQ,CAACuO,GAAG,CAAC,aAAa,EAAE;EAC1BmD,MAAM,EAAE;IACNgB,SAAS,EAAE;MACTlG,QAAQ,EAAE;IACZ;EACF,CAAC;EACDyG,MAAM,EAAE;IACNP,SAAS,EAAE;MACTlG,QAAQ,EAAE;IACZ;EACF,CAAC;EACD0G,IAAI,EAAE;IACJC,UAAU,EAAE;MACVb,MAAM,EAAE;QACNxC,IAAI,EAAE;MACR,CAAC;MACDsD,OAAO,EAAE;QACPhH,IAAI,EAAE,SAAS;QACfI,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACD6G,IAAI,EAAE;IACJF,UAAU,EAAE;MACVb,MAAM,EAAE;QACNvC,EAAE,EAAE;MACN,CAAC;MACDqD,OAAO,EAAE;QACPhH,IAAI,EAAE,SAAS;QACf0E,MAAM,EAAE,QAAQ;QAChBpE,EAAE,EAAE,SAAAA,GAAAzM,CAAC;UAAA,OAAIA,CAAC,GAAG,CAAC;QAAA;MAChB;IACF;EACF;AACF,CAAC,CAAC;AAAC,IACGqT,UAAU;EACd,SAAAA,WAAYrH,KAAK,EAAEsH,MAAM,EAAE;IAAAjI,eAAA,OAAAgI,UAAA;IACzB,IAAI,CAACE,MAAM,GAAGvH,KAAK;IACnB,IAAI,CAACwH,WAAW,GAAG,IAAIhI,GAAG,EAAE;IAC5B,IAAI,CAACiI,SAAS,CAACH,MAAM,CAAC;EACxB;EAAC1H,YAAA,CAAAyH,UAAA;IAAAxH,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAUH,MAAM,EAAE;MAChB,IAAI,CAAC3T,QAAQ,CAAC2T,MAAM,CAAC,EAAE;QACrB;MACF;MACA,IAAMI,aAAa,GAAG,IAAI,CAACF,WAAW;MACtCjB,MAAM,CAACoB,mBAAmB,CAACL,MAAM,CAAC,CAAC9G,OAAO,CAAC,UAAAX,GAAG,EAAI;QAChD,IAAM0E,GAAG,GAAG+C,MAAM,CAACzH,GAAG,CAAC;QACvB,IAAI,CAAClM,QAAQ,CAAC4Q,GAAG,CAAC,EAAE;UAClB;QACF;QACA,IAAM2B,QAAQ,GAAG,CAAC,CAAC;QACnB,SAAA0B,EAAA,MAAAC,iBAAA,GAAqBvB,gBAAgB,EAAAsB,EAAA,GAAAC,iBAAA,CAAAxG,MAAA,EAAAuG,EAAA,IAAE;UAAlC,IAAME,MAAM,GAAAD,iBAAA,CAAAD,EAAA;UACf1B,QAAQ,CAAC4B,MAAM,CAAC,GAAGvD,GAAG,CAACuD,MAAM,CAAC;QAChC;QACA,CAACjU,OAAO,CAAC0Q,GAAG,CAACwC,UAAU,CAAC,IAAIxC,GAAG,CAACwC,UAAU,IAAI,CAAClH,GAAG,CAAC,EAAEW,OAAO,CAAC,UAACiE,IAAI,EAAK;UACrE,IAAIA,IAAI,KAAK5E,GAAG,IAAI,CAAC6H,aAAa,CAAC3E,GAAG,CAAC0B,IAAI,CAAC,EAAE;YAC5CiD,aAAa,CAACpF,GAAG,CAACmC,IAAI,EAAEyB,QAAQ,CAAC;UACnC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EAAC;IAAArG,GAAA;IAAAC,KAAA,EACD,SAAAiI,gBAAgBvD,MAAM,EAAEwD,MAAM,EAAE;MAC9B,IAAMC,UAAU,GAAGD,MAAM,CAACE,OAAO;MACjC,IAAMA,OAAO,GAAGC,oBAAoB,CAAC3D,MAAM,EAAEyD,UAAU,CAAC;MACxD,IAAI,CAACC,OAAO,EAAE;QACZ,OAAO,EAAE;MACX;MACA,IAAMhB,UAAU,GAAG,IAAI,CAACkB,iBAAiB,CAACF,OAAO,EAAED,UAAU,CAAC;MAC9D,IAAIA,UAAU,CAACI,OAAO,EAAE;QACtBC,QAAQ,CAAC9D,MAAM,CAAC0D,OAAO,CAACK,WAAW,EAAEN,UAAU,CAAC,CAACO,IAAI,CAAC,YAAM;UAC1DhE,MAAM,CAAC0D,OAAO,GAAGD,UAAU;QAC7B,CAAC,EAAE,YAAM,CACT,CAAC,CAAC;MACJ;MACA,OAAOf,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAAsI,kBAAkB5D,MAAM,EAAEwD,MAAM,EAAE;MAChC,IAAMN,aAAa,GAAG,IAAI,CAACF,WAAW;MACtC,IAAMN,UAAU,GAAG,EAAE;MACrB,IAAMzF,OAAO,GAAG+C,MAAM,CAAC+D,WAAW,KAAK/D,MAAM,CAAC+D,WAAW,GAAG,CAAC,CAAC,CAAC;MAC/D,IAAME,KAAK,GAAGlC,MAAM,CAACC,IAAI,CAACwB,MAAM,CAAC;MACjC,IAAM9H,IAAI,GAAGoB,IAAI,CAACC,GAAG,EAAE;MACvB,IAAI7N,CAAC;MACL,KAAKA,CAAC,GAAG+U,KAAK,CAACpH,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACtC,IAAM+Q,IAAI,GAAGgE,KAAK,CAAC/U,CAAC,CAAC;QACrB,IAAI+Q,IAAI,CAACiE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC1B;QACF;QACA,IAAIjE,IAAI,KAAK,SAAS,EAAE;UACtByC,UAAU,CAACxE,IAAI,CAAAG,KAAA,CAAfqE,UAAU,EAAApE,kBAAA,CAAS,IAAI,CAACiF,eAAe,CAACvD,MAAM,EAAEwD,MAAM,CAAC,EAAC;UACxD;QACF;QACA,IAAMlI,KAAK,GAAGkI,MAAM,CAACvD,IAAI,CAAC;QAC1B,IAAIgC,SAAS,GAAGhF,OAAO,CAACgD,IAAI,CAAC;QAC7B,IAAMF,GAAG,GAAGmD,aAAa,CAACvF,GAAG,CAACsC,IAAI,CAAC;QACnC,IAAIgC,SAAS,EAAE;UACb,IAAIlC,GAAG,IAAIkC,SAAS,CAAChB,MAAM,EAAE,EAAE;YAC7BgB,SAAS,CAACf,MAAM,CAACnB,GAAG,EAAEzE,KAAK,EAAEI,IAAI,CAAC;YAClC;UACF,CAAC,MAAM;YACLuG,SAAS,CAACnD,MAAM,EAAE;UACpB;QACF;QACA,IAAI,CAACiB,GAAG,IAAI,CAACA,GAAG,CAAChE,QAAQ,EAAE;UACzBiE,MAAM,CAACC,IAAI,CAAC,GAAG3E,KAAK;UACpB;QACF;QACA2B,OAAO,CAACgD,IAAI,CAAC,GAAGgC,SAAS,GAAG,IAAInC,SAAS,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAE3E,KAAK,CAAC;QACnEoH,UAAU,CAACxE,IAAI,CAAC+D,SAAS,CAAC;MAC5B;MACA,OAAOS,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOlB,MAAM,EAAEwD,MAAM,EAAE;MACrB,IAAI,IAAI,CAACR,WAAW,CAACmB,IAAI,KAAK,CAAC,EAAE;QAC/BpC,MAAM,CAACqC,MAAM,CAACpE,MAAM,EAAEwD,MAAM,CAAC;QAC7B;MACF;MACA,IAAMd,UAAU,GAAG,IAAI,CAACkB,iBAAiB,CAAC5D,MAAM,EAAEwD,MAAM,CAAC;MACzD,IAAId,UAAU,CAAC7F,MAAM,EAAE;QACrBoC,QAAQ,CAACd,GAAG,CAAC,IAAI,CAAC4E,MAAM,EAAEL,UAAU,CAAC;QACrC,OAAO,IAAI;MACb;IACF;EAAC;EAAA,OAAAG,UAAA;AAAA;AAEH,SAASiB,QAAQA,CAACpB,UAAU,EAAEH,UAAU,EAAE;EACxC,IAAMtF,OAAO,GAAG,EAAE;EAClB,IAAM+E,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACO,UAAU,CAAC;EACpC,KAAK,IAAIrT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8S,IAAI,CAACnF,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACpC,IAAMmV,IAAI,GAAG3B,UAAU,CAACV,IAAI,CAAC9S,CAAC,CAAC,CAAC;IAChC,IAAImV,IAAI,IAAIA,IAAI,CAACpD,MAAM,EAAE,EAAE;MACzBhE,OAAO,CAACiB,IAAI,CAACmG,IAAI,CAAChD,IAAI,EAAE,CAAC;IAC3B;EACF;EACA,OAAOE,OAAO,CAAC+C,GAAG,CAACrH,OAAO,CAAC;AAC7B;AACA,SAAS0G,oBAAoBA,CAAC3D,MAAM,EAAEyD,UAAU,EAAE;EAChD,IAAI,CAACA,UAAU,EAAE;IACf;EACF;EACA,IAAIC,OAAO,GAAG1D,MAAM,CAAC0D,OAAO;EAC5B,IAAI,CAACA,OAAO,EAAE;IACZ1D,MAAM,CAAC0D,OAAO,GAAGD,UAAU;IAC3B;EACF;EACA,IAAIC,OAAO,CAACG,OAAO,EAAE;IACnB7D,MAAM,CAAC0D,OAAO,GAAGA,OAAO,GAAG3B,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEV,OAAO,EAAE;MAACG,OAAO,EAAE,KAAK;MAAEE,WAAW,EAAE,CAAC;IAAC,CAAC,CAAC;EAC1F;EACA,OAAOL,OAAO;AAChB;AAEA,SAASa,SAASA,CAACC,KAAK,EAAEC,eAAe,EAAE;EACzC,IAAMC,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAACd,OAAO,IAAI,CAAC,CAAC;EACzC,IAAMiB,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC5B,IAAMtI,GAAG,GAAGqI,IAAI,CAACrI,GAAG,KAAKlB,SAAS,GAAGsJ,eAAe,GAAG,CAAC;EACxD,IAAM9F,GAAG,GAAG+F,IAAI,CAAC/F,GAAG,KAAKxD,SAAS,GAAGsJ,eAAe,GAAG,CAAC;EACxD,OAAO;IACLnI,KAAK,EAAEqI,OAAO,GAAGhG,GAAG,GAAGtC,GAAG;IAC1BuI,GAAG,EAAED,OAAO,GAAGtI,GAAG,GAAGsC;EACvB,CAAC;AACH;AACA,SAASkG,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEN,eAAe,EAAE;EACpD,IAAIA,eAAe,KAAK,KAAK,EAAE;IAC7B,OAAO,KAAK;EACd;EACA,IAAMzS,CAAC,GAAGuS,SAAS,CAACO,MAAM,EAAEL,eAAe,CAAC;EAC5C,IAAMvS,CAAC,GAAGqS,SAAS,CAACQ,MAAM,EAAEN,eAAe,CAAC;EAC5C,OAAO;IACLO,GAAG,EAAE9S,CAAC,CAAC0S,GAAG;IACVK,KAAK,EAAEjT,CAAC,CAAC4S,GAAG;IACZM,MAAM,EAAEhT,CAAC,CAACoK,KAAK;IACf6I,IAAI,EAAEnT,CAAC,CAACsK;EACV,CAAC;AACH;AACA,SAAS8I,MAAMA,CAAC9J,KAAK,EAAE;EACrB,IAAI5K,CAAC,EAAEhC,CAAC,EAAEU,CAAC,EAAEQ,CAAC;EACd,IAAIT,QAAQ,CAACmM,KAAK,CAAC,EAAE;IACnB5K,CAAC,GAAG4K,KAAK,CAAC0J,GAAG;IACbtW,CAAC,GAAG4M,KAAK,CAAC2J,KAAK;IACf7V,CAAC,GAAGkM,KAAK,CAAC4J,MAAM;IAChBtV,CAAC,GAAG0L,KAAK,CAAC6J,IAAI;EAChB,CAAC,MAAM;IACLzU,CAAC,GAAGhC,CAAC,GAAGU,CAAC,GAAGQ,CAAC,GAAG0L,KAAK;EACvB;EACA,OAAO;IACL0J,GAAG,EAAEtU,CAAC;IACNuU,KAAK,EAAEvW,CAAC;IACRwW,MAAM,EAAE9V,CAAC;IACT+V,IAAI,EAAEvV,CAAC;IACPyV,QAAQ,EAAE/J,KAAK,KAAK;EACtB,CAAC;AACH;AACA,SAASgK,uBAAuBA,CAAC9J,KAAK,EAAE+J,aAAa,EAAE;EACrD,IAAMvD,IAAI,GAAG,EAAE;EACf,IAAMwD,QAAQ,GAAGhK,KAAK,CAACiK,sBAAsB,CAACF,aAAa,CAAC;EAC5D,IAAIrW,CAAC,EAAEwW,IAAI;EACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACjD8S,IAAI,CAAC9D,IAAI,CAACsH,QAAQ,CAACtW,CAAC,CAAC,CAACyW,KAAK,CAAC;EAC9B;EACA,OAAO3D,IAAI;AACb;AACA,SAAS4D,WAAUA,CAACC,KAAK,EAAEvK,KAAK,EAAEwK,OAAO,EAAEpC,OAAO,EAAE;EAClD,IAAM1B,IAAI,GAAG6D,KAAK,CAAC7D,IAAI;EACvB,IAAM+D,UAAU,GAAGrC,OAAO,CAACsC,IAAI,KAAK,QAAQ;EAC5C,IAAI9W,CAAC,EAAEwW,IAAI,EAAEO,YAAY,EAAEC,UAAU;EACrC,IAAI5K,KAAK,KAAK,IAAI,EAAE;IAClB;EACF;EACA,KAAKpM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG1D,IAAI,CAACnF,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC7C+W,YAAY,GAAG,CAACjE,IAAI,CAAC9S,CAAC,CAAC;IACvB,IAAI+W,YAAY,KAAKH,OAAO,EAAE;MAC5B,IAAIpC,OAAO,CAACY,GAAG,EAAE;QACf;MACF;MACA;IACF;IACA4B,UAAU,GAAGL,KAAK,CAACrC,MAAM,CAACyC,YAAY,CAAC;IACvC,IAAIhW,cAAc,CAACiW,UAAU,CAAC,KAAKH,UAAU,IAAKzK,KAAK,KAAK,CAAC,IAAIjL,IAAI,CAACiL,KAAK,CAAC,KAAKjL,IAAI,CAAC6V,UAAU,CAAE,CAAC,EAAE;MACnG5K,KAAK,IAAI4K,UAAU;IACrB;EACF;EACA,OAAO5K,KAAK;AACd;AACA,SAAS6K,wBAAwBA,CAACC,IAAI,EAAE;EACtC,IAAMpE,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACoE,IAAI,CAAC;EAC9B,IAAMC,KAAK,GAAG,IAAIC,KAAK,CAACtE,IAAI,CAACnF,MAAM,CAAC;EACpC,IAAI3N,CAAC,EAAEwW,IAAI,EAAErK,GAAG;EAChB,KAAKnM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG1D,IAAI,CAACnF,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC7CmM,GAAG,GAAG2G,IAAI,CAAC9S,CAAC,CAAC;IACbmX,KAAK,CAACnX,CAAC,CAAC,GAAG;MACT8C,CAAC,EAAEqJ,GAAG;MACNnJ,CAAC,EAAEkU,IAAI,CAAC/K,GAAG;IACb,CAAC;EACH;EACA,OAAOgL,KAAK;AACd;AACA,SAASE,SAASA,CAAC/B,KAAK,EAAEgC,IAAI,EAAE;EAC9B,IAAMC,OAAO,GAAGjC,KAAK,IAAIA,KAAK,CAACd,OAAO,CAAC+C,OAAO;EAC9C,OAAOA,OAAO,IAAKA,OAAO,KAAKtL,SAAS,IAAIqL,IAAI,CAACX,KAAK,KAAK1K,SAAU;AACvE;AACA,SAASuL,WAAWA,CAACC,UAAU,EAAEC,UAAU,EAAEJ,IAAI,EAAE;EACjD,UAAAK,MAAA,CAAUF,UAAU,CAACG,EAAE,OAAAD,MAAA,CAAID,UAAU,CAACE,EAAE,OAAAD,MAAA,CAAIL,IAAI,CAACX,KAAK,IAAIW,IAAI,CAAC7K,IAAI;AACrE;AACA,SAASoL,aAAaA,CAACvC,KAAK,EAAE;EAC5B,IAAAwC,oBAAA,GAA2CxC,KAAK,CAACuC,aAAa,EAAE;IAAzD1K,GAAG,GAAA2K,oBAAA,CAAH3K,GAAG;IAAEsC,GAAG,GAAAqI,oBAAA,CAAHrI,GAAG;IAAEsI,UAAU,GAAAD,oBAAA,CAAVC,UAAU;IAAEC,UAAU,GAAAF,oBAAA,CAAVE,UAAU;EACvC,OAAO;IACL7K,GAAG,EAAE4K,UAAU,GAAG5K,GAAG,GAAG8K,MAAM,CAACC,iBAAiB;IAChDzI,GAAG,EAAEuI,UAAU,GAAGvI,GAAG,GAAGwI,MAAM,CAACE;EACjC,CAAC;AACH;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACtD,IAAMC,QAAQ,GAAGH,MAAM,CAACC,QAAQ,CAAC,KAAKD,MAAM,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D,OAAOE,QAAQ,CAACD,UAAU,CAAC,KAAKC,QAAQ,CAACD,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5D;AACA,SAASE,mBAAmBA,CAAC9B,KAAK,EAAE+B,MAAM,EAAEC,QAAQ,EAAE;EAAA,IAAAC,SAAA,GAAAC,0BAAA,CACjCH,MAAM,CAACI,uBAAuB,CAAC,KAAK,CAAC,CAACrD,OAAO,EAAE;IAAAsD,KAAA;EAAA;IAAlE,KAAAH,SAAA,CAAA1X,CAAA,MAAA6X,KAAA,GAAAH,SAAA,CAAA5W,CAAA,IAAAgX,IAAA,GAAoE;MAAA,IAAzD1B,IAAI,GAAAyB,KAAA,CAAA3M,KAAA;MACb,IAAMA,KAAK,GAAGuK,KAAK,CAACW,IAAI,CAACb,KAAK,CAAC;MAC/B,IAAKkC,QAAQ,IAAIvM,KAAK,GAAG,CAAC,IAAM,CAACuM,QAAQ,IAAIvM,KAAK,GAAG,CAAE,EAAE;QACvD,OAAOkL,IAAI,CAACb,KAAK;MACnB;IACF;EAAC,SAAAwC,GAAA;IAAAL,SAAA,CAAAhZ,CAAA,CAAAqZ,GAAA;EAAA;IAAAL,SAAA,CAAAhY,CAAA;EAAA;EACD,OAAO,IAAI;AACb;AACA,SAASsY,YAAYA,CAACC,UAAU,EAAEC,MAAM,EAAE;EACxC,IAAO9M,KAAK,GAAuB6M,UAAU,CAAtC7M,KAAK;IAAegL,IAAI,GAAI6B,UAAU,CAA/BE,WAAW;EACzB,IAAMhB,MAAM,GAAG/L,KAAK,CAACgN,OAAO,KAAKhN,KAAK,CAACgN,OAAO,GAAG,CAAC,CAAC,CAAC;EACpD,IAAOC,MAAM,GAAiCjC,IAAI,CAA3CiC,MAAM;IAAEb,MAAM,GAAyBpB,IAAI,CAAnCoB,MAAM;IAAS3B,YAAY,GAAIO,IAAI,CAA3Bb,KAAK;EAC5B,IAAM+C,KAAK,GAAGD,MAAM,CAACE,IAAI;EACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;EACzB,IAAMtN,GAAG,GAAGqL,WAAW,CAAC+B,MAAM,EAAEb,MAAM,EAAEpB,IAAI,CAAC;EAC7C,IAAMd,IAAI,GAAG4C,MAAM,CAACzL,MAAM;EAC1B,IAAIgJ,KAAK;EACT,KAAK,IAAI3W,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC7B,IAAMkO,IAAI,GAAGkL,MAAM,CAACpZ,CAAC,CAAC;IACtB,IAAgByW,KAAK,GAAoBvI,IAAI,CAArCsL,KAAK;MAAmBpN,KAAK,GAAI8B,IAAI,CAArBwL,KAAK;IAC7B,IAAMC,UAAU,GAAGzL,IAAI,CAACoL,OAAO,KAAKpL,IAAI,CAACoL,OAAO,GAAG,CAAC,CAAC,CAAC;IACtD3C,KAAK,GAAGgD,UAAU,CAACD,KAAK,CAAC,GAAGtB,gBAAgB,CAACC,MAAM,EAAElM,GAAG,EAAEsK,KAAK,CAAC;IAChEE,KAAK,CAACI,YAAY,CAAC,GAAG3K,KAAK;IAC3BuK,KAAK,CAACiD,IAAI,GAAGnB,mBAAmB,CAAC9B,KAAK,EAAE+B,MAAM,EAAE,IAAI,CAAC;IACrD/B,KAAK,CAACkD,OAAO,GAAGpB,mBAAmB,CAAC9B,KAAK,EAAE+B,MAAM,EAAE,KAAK,CAAC;EAC3D;AACF;AACA,SAASoB,eAAeA,CAACxN,KAAK,EAAEmN,IAAI,EAAE;EACpC,IAAMM,MAAM,GAAGzN,KAAK,CAACyN,MAAM;EAC3B,OAAOlH,MAAM,CAACC,IAAI,CAACiH,MAAM,CAAC,CAACC,MAAM,CAAC,UAAA7N,GAAG;IAAA,OAAI4N,MAAM,CAAC5N,GAAG,CAAC,CAACsN,IAAI,KAAKA,IAAI;EAAA,EAAC,CAACQ,KAAK,EAAE;AAC7E;AACA,SAASC,oBAAoBA,CAACC,MAAM,EAAE1D,KAAK,EAAE;EAC3C,OAAO5D,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EACxC;IACEpI,MAAM,EAAE,KAAK;IACbsI,OAAO,EAAEpO,SAAS;IAClB8K,YAAY,EAAEN,KAAK;IACnBA,KAAK,EAALA,KAAK;IACLK,IAAI,EAAE,SAAS;IACfrK,IAAI,EAAE;EACR,CAAC,CACF;AACH;AACA,SAAS6N,iBAAiBA,CAACH,MAAM,EAAE1D,KAAK,EAAE8D,OAAO,EAAE;EACjD,OAAO1H,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CpI,MAAM,EAAE,KAAK;IACbyI,SAAS,EAAE/D,KAAK;IAChB2C,MAAM,EAAEnN,SAAS;IACjBwO,GAAG,EAAExO,SAAS;IACdsO,OAAO,EAAPA,OAAO;IACP9D,KAAK,EAALA,KAAK;IACLK,IAAI,EAAE,SAAS;IACfrK,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASiO,WAAWA,CAACpD,IAAI,EAAEtJ,KAAK,EAAE;EAChC,IAAMyL,IAAI,GAAGnC,IAAI,CAACoB,MAAM,IAAIpB,IAAI,CAACoB,MAAM,CAACe,IAAI;EAC5C,IAAI,CAACA,IAAI,EAAE;IACT;EACF;EACAzL,KAAK,GAAGA,KAAK,IAAIsJ,IAAI,CAACqD,OAAO;EAAC,IAAAC,UAAA,GAAA/B,0BAAA,CACT7K,KAAK;IAAA6M,MAAA;EAAA;IAA1B,KAAAD,UAAA,CAAA1Z,CAAA,MAAA2Z,MAAA,GAAAD,UAAA,CAAA5Y,CAAA,IAAAgX,IAAA,GAA4B;MAAA,IAAjBI,MAAM,GAAAyB,MAAA,CAAAzO,KAAA;MACf,IAAMiM,MAAM,GAAGe,MAAM,CAACE,OAAO;MAC7B,IAAI,CAACjB,MAAM,IAAIA,MAAM,CAACoB,IAAI,CAAC,KAAKxN,SAAS,IAAIoM,MAAM,CAACoB,IAAI,CAAC,CAACnC,IAAI,CAACb,KAAK,CAAC,KAAKxK,SAAS,EAAE;QACnF;MACF;MACA,OAAOoM,MAAM,CAACoB,IAAI,CAAC,CAACnC,IAAI,CAACb,KAAK,CAAC;IACjC;EAAC,SAAAwC,GAAA;IAAA2B,UAAA,CAAAhb,CAAA,CAAAqZ,GAAA;EAAA;IAAA2B,UAAA,CAAAha,CAAA;EAAA;AACH;AACA,IAAMka,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIhE,IAAI;EAAA,OAAKA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,MAAM;AAAA;AACxE,IAAMiE,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,MAAM,EAAEC,MAAM;EAAA,OAAKA,MAAM,GAAGD,MAAM,GAAGnI,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAE8F,MAAM,CAAC;AAAA;AAAC,IACnFE,iBAAiB;EACrB,SAAAA,kBAAY5O,KAAK,EAAEyK,YAAY,EAAE;IAAApL,eAAA,OAAAuP,iBAAA;IAC/B,IAAI,CAAC5O,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC6O,IAAI,GAAG7O,KAAK,CAAC8O,GAAG;IACrB,IAAI,CAAC3E,KAAK,GAAGM,YAAY;IACzB,IAAI,CAACsE,eAAe,GAAG,CAAC,CAAC;IACzB,IAAI,CAAChC,WAAW,GAAG,IAAI,CAACiC,OAAO,EAAE;IACjC,IAAI,CAACC,KAAK,GAAG,IAAI,CAAClC,WAAW,CAAC5M,IAAI;IAClC,IAAI,CAAC+H,OAAO,GAAGvI,SAAS;IACxB,IAAI,CAACuP,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,KAAK,GAAGxP,SAAS;IACtB,IAAI,CAACyP,WAAW,GAAGzP,SAAS;IAC5B,IAAI,CAAC0P,cAAc,GAAG1P,SAAS;IAC/B,IAAI,CAAC2P,UAAU,GAAG3P,SAAS;IAC3B,IAAI,CAAC4P,UAAU,GAAG5P,SAAS;IAC3B,IAAI,CAAC6P,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,QAAQ,GAAG9P,SAAS;IACzB,IAAI,CAAC+P,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,UAAU,EAAE;EACnB;EAAC/P,YAAA,CAAAgP,iBAAA;IAAA/O,GAAA;IAAAC,KAAA,EACD,SAAA6P,WAAA,EAAa;MACX,IAAM3O,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACyG,SAAS,EAAE;MACdzG,EAAE,CAAC4O,UAAU,EAAE;MACf5E,IAAI,CAAC6E,QAAQ,GAAG9E,SAAS,CAACC,IAAI,CAACoB,MAAM,EAAEpB,IAAI,CAAC;MAC5ChK,EAAE,CAAC8O,WAAW,EAAE;IAClB;EAAC;IAAAjQ,GAAA;IAAAC,KAAA,EACD,SAAAiQ,YAAYtF,YAAY,EAAE;MACxB,IAAI,IAAI,CAACN,KAAK,KAAKM,YAAY,EAAE;QAC/B2D,WAAW,CAAC,IAAI,CAACrB,WAAW,CAAC;MAC/B;MACA,IAAI,CAAC5C,KAAK,GAAGM,YAAY;IAC3B;EAAC;IAAA5K,GAAA;IAAAC,KAAA,EACD,SAAA8P,WAAA,EAAa;MACX,IAAM5O,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMgL,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMgB,OAAO,GAAG/M,EAAE,CAACgP,UAAU,EAAE;MAC/B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAI9C,IAAI,EAAE3W,CAAC,EAAEE,CAAC,EAAExD,CAAC;QAAA,OAAKia,IAAI,KAAK,GAAG,GAAG3W,CAAC,GAAG2W,IAAI,KAAK,GAAG,GAAGja,CAAC,GAAGwD,CAAC;MAAA;MAC3E,IAAMwZ,GAAG,GAAGlF,IAAI,CAACmF,OAAO,GAAGlc,cAAc,CAAC8Z,OAAO,CAACoC,OAAO,EAAE3C,eAAe,CAACxN,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,IAAMoQ,GAAG,GAAGpF,IAAI,CAACqF,OAAO,GAAGpc,cAAc,CAAC8Z,OAAO,CAACsC,OAAO,EAAE7C,eAAe,CAACxN,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,IAAMsQ,GAAG,GAAGtF,IAAI,CAACuF,OAAO,GAAGtc,cAAc,CAAC8Z,OAAO,CAACwC,OAAO,EAAE/C,eAAe,CAACxN,KAAK,EAAE,GAAG,CAAC,CAAC;MACvF,IAAMwQ,SAAS,GAAGxF,IAAI,CAACwF,SAAS;MAChC,IAAMC,GAAG,GAAGzF,IAAI,CAAC0F,OAAO,GAAGT,QAAQ,CAACO,SAAS,EAAEN,GAAG,EAAEE,GAAG,EAAEE,GAAG,CAAC;MAC7D,IAAMK,GAAG,GAAG3F,IAAI,CAAC4F,OAAO,GAAGX,QAAQ,CAACO,SAAS,EAAEJ,GAAG,EAAEF,GAAG,EAAEI,GAAG,CAAC;MAC7DtF,IAAI,CAAC1B,MAAM,GAAGtI,EAAE,CAAC6P,aAAa,CAACX,GAAG,CAAC;MACnClF,IAAI,CAACzB,MAAM,GAAGvI,EAAE,CAAC6P,aAAa,CAACT,GAAG,CAAC;MACnCpF,IAAI,CAAC8F,MAAM,GAAG9P,EAAE,CAAC6P,aAAa,CAACP,GAAG,CAAC;MACnCtF,IAAI,CAACiC,MAAM,GAAGjM,EAAE,CAAC6P,aAAa,CAACJ,GAAG,CAAC;MACnCzF,IAAI,CAACoB,MAAM,GAAGpL,EAAE,CAAC6P,aAAa,CAACF,GAAG,CAAC;IACrC;EAAC;IAAA9Q,GAAA;IAAAC,KAAA,EACD,SAAAkQ,WAAA,EAAa;MACX,OAAO,IAAI,CAAChQ,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC,IAAI,CAAC5G,KAAK,CAAC;IAC7C;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAkP,QAAA,EAAU;MACR,OAAO,IAAI,CAAChP,KAAK,CAACgR,cAAc,CAAC,IAAI,CAAC7G,KAAK,CAAC;IAC9C;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA+Q,cAAcI,OAAO,EAAE;MACrB,OAAO,IAAI,CAACjR,KAAK,CAACyN,MAAM,CAACwD,OAAO,CAAC;IACnC;EAAC;IAAApR,GAAA;IAAAC,KAAA,EACD,SAAAoR,eAAelI,KAAK,EAAE;MACpB,IAAMgC,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,OAAO/D,KAAK,KAAKgC,IAAI,CAACiC,MAAM,GACxBjC,IAAI,CAACoB,MAAM,GACXpB,IAAI,CAACiC,MAAM;IACjB;EAAC;IAAApN,GAAA;IAAAC,KAAA,EACD,SAAAqR,MAAA,EAAQ;MACN,IAAI,CAAChQ,OAAO,CAAC,OAAO,CAAC;IACvB;EAAC;IAAAtB,GAAA;IAAAC,KAAA,EACD,SAAAsR,SAAA,EAAW;MACT,IAAMpG,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAI,IAAI,CAACoC,KAAK,EAAE;QACdhb,mBAAmB,CAAC,IAAI,CAACgb,KAAK,EAAE,IAAI,CAAC;MACvC;MACA,IAAInE,IAAI,CAAC6E,QAAQ,EAAE;QACjBzB,WAAW,CAACpD,IAAI,CAAC;MACnB;IACF;EAAC;IAAAnL,GAAA;IAAAC,KAAA,EACD,SAAAuR,WAAA,EAAa;MACX,IAAMrQ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAACgP,UAAU,EAAE;MAC/B,IAAMpF,IAAI,GAAGmD,OAAO,CAACnD,IAAI,KAAKmD,OAAO,CAACnD,IAAI,GAAG,EAAE,CAAC;MAChD,IAAMuE,KAAK,GAAGnO,EAAE,CAACmO,KAAK;MACtB,IAAIxb,QAAQ,CAACiX,IAAI,CAAC,EAAE;QAClB5J,EAAE,CAACmO,KAAK,GAAGxE,wBAAwB,CAACC,IAAI,CAAC;MAC3C,CAAC,MAAM,IAAIuE,KAAK,KAAKvE,IAAI,EAAE;QACzB,IAAIuE,KAAK,EAAE;UACThb,mBAAmB,CAACgb,KAAK,EAAEnO,EAAE,CAAC;UAC9B,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;UAC3BqB,WAAW,CAACpD,IAAI,CAAC;UACjBA,IAAI,CAACqD,OAAO,GAAG,EAAE;QACnB;QACA,IAAIzD,IAAI,IAAIrE,MAAM,CAAC+K,YAAY,CAAC1G,IAAI,CAAC,EAAE;UACrCvW,iBAAiB,CAACuW,IAAI,EAAE5J,EAAE,CAAC;QAC7B;QACAA,EAAE,CAAC0O,SAAS,GAAG,EAAE;QACjB1O,EAAE,CAACmO,KAAK,GAAGvE,IAAI;MACjB;IACF;EAAC;IAAA/K,GAAA;IAAAC,KAAA,EACD,SAAAgQ,YAAA,EAAc;MACZ,IAAM9O,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACqQ,UAAU,EAAE;MACf,IAAIrQ,EAAE,CAACuQ,kBAAkB,EAAE;QACzBvG,IAAI,CAAC+C,OAAO,GAAG,IAAI/M,EAAE,CAACuQ,kBAAkB,EAAE;MAC5C;IACF;EAAC;IAAA1R,GAAA;IAAAC,KAAA,EACD,SAAA0R,sBAAsBC,gBAAgB,EAAE;MACtC,IAAMzQ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMgB,OAAO,GAAG/M,EAAE,CAACgP,UAAU,EAAE;MAC/B,IAAI0B,YAAY,GAAG,KAAK;MACxB1Q,EAAE,CAACqQ,UAAU,EAAE;MACf,IAAMM,UAAU,GAAG3G,IAAI,CAAC6E,QAAQ;MAChC7E,IAAI,CAAC6E,QAAQ,GAAG9E,SAAS,CAACC,IAAI,CAACoB,MAAM,EAAEpB,IAAI,CAAC;MAC5C,IAAIA,IAAI,CAACX,KAAK,KAAK0D,OAAO,CAAC1D,KAAK,EAAE;QAChCqH,YAAY,GAAG,IAAI;QACnBtD,WAAW,CAACpD,IAAI,CAAC;QACjBA,IAAI,CAACX,KAAK,GAAG0D,OAAO,CAAC1D,KAAK;MAC5B;MACArJ,EAAE,CAAC4Q,eAAe,CAACH,gBAAgB,CAAC;MACpC,IAAIC,YAAY,IAAIC,UAAU,KAAK3G,IAAI,CAAC6E,QAAQ,EAAE;QAChDjD,YAAY,CAAC5L,EAAE,EAAEgK,IAAI,CAACqD,OAAO,CAAC;MAChC;IACF;EAAC;IAAAxO,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAMsG,MAAM,GAAGtG,EAAE,CAAChB,KAAK,CAACsH,MAAM;MAC9B,IAAMuK,SAAS,GAAGvK,MAAM,CAACwK,gBAAgB,CAAC9Q,EAAE,CAACiO,KAAK,CAAC;MACnD,IAAM8C,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAChR,EAAE,CAACgP,UAAU,EAAE,EAAE6B,SAAS,EAAE,IAAI,CAAC;MACvE7Q,EAAE,CAACkH,OAAO,GAAGZ,MAAM,CAAC2K,cAAc,CAACF,MAAM,EAAE/Q,EAAE,CAACkR,UAAU,EAAE,CAAC;MAC3DlR,EAAE,CAACkO,QAAQ,GAAGlO,EAAE,CAACkH,OAAO,CAACiK,OAAO;IAClC;EAAC;IAAAtS,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMtR,KAAK,EAAEuR,KAAK,EAAE;MAClB,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAoBgK,IAAI,GAAiBhK,EAAE,CAApC+L,WAAW;QAAenC,IAAI,GAAI5J,EAAE,CAAjBmO,KAAK;MAC/B,IAAOlC,MAAM,GAAcjC,IAAI,CAAxBiC,MAAM;QAAE4C,QAAQ,GAAI7E,IAAI,CAAhB6E,QAAQ;MACvB,IAAM3C,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAImF,MAAM,GAAGxR,KAAK,KAAK,CAAC,IAAIuR,KAAK,KAAKzH,IAAI,CAACvJ,MAAM,GAAG,IAAI,GAAG2J,IAAI,CAACuH,OAAO;MACvE,IAAIC,IAAI,GAAG1R,KAAK,GAAG,CAAC,IAAIkK,IAAI,CAACqD,OAAO,CAACvN,KAAK,GAAG,CAAC,CAAC;MAC/C,IAAIpN,CAAC,EAAEwP,GAAG,EAAE4J,MAAM;MAClB,IAAI9L,EAAE,CAACkO,QAAQ,KAAK,KAAK,EAAE;QACzBlE,IAAI,CAACqD,OAAO,GAAGzD,IAAI;QACnBI,IAAI,CAACuH,OAAO,GAAG,IAAI;QACnBzF,MAAM,GAAGlC,IAAI;MACf,CAAC,MAAM;QACL,IAAI/W,OAAO,CAAC+W,IAAI,CAAC9J,KAAK,CAAC,CAAC,EAAE;UACxBgM,MAAM,GAAG9L,EAAE,CAACyR,cAAc,CAACzH,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;QACtD,CAAC,MAAM,IAAI1e,QAAQ,CAACiX,IAAI,CAAC9J,KAAK,CAAC,CAAC,EAAE;UAChCgM,MAAM,GAAG9L,EAAE,CAAC0R,eAAe,CAAC1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;QACvD,CAAC,MAAM;UACLvF,MAAM,GAAG9L,EAAE,CAAC2R,kBAAkB,CAAC3H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;QAC1D;QACA,IAAMO,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAA;UAAA,OAAS1P,GAAG,CAACgK,KAAK,CAAC,KAAK,IAAI,IAAKsF,IAAI,IAAItP,GAAG,CAACgK,KAAK,CAAC,GAAGsF,IAAI,CAACtF,KAAK,CAAE;QAAA;QAClG,KAAKxZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2e,KAAK,EAAE,EAAE3e,CAAC,EAAE;UAC1BsX,IAAI,CAACqD,OAAO,CAAC3a,CAAC,GAAGoN,KAAK,CAAC,GAAGoC,GAAG,GAAG4J,MAAM,CAACpZ,CAAC,CAAC;UACzC,IAAI4e,MAAM,EAAE;YACV,IAAIM,0BAA0B,EAAE,EAAE;cAChCN,MAAM,GAAG,KAAK;YAChB;YACAE,IAAI,GAAGtP,GAAG;UACZ;QACF;QACA8H,IAAI,CAACuH,OAAO,GAAGD,MAAM;MACvB;MACA,IAAIzC,QAAQ,EAAE;QACZjD,YAAY,CAAC5L,EAAE,EAAE8L,MAAM,CAAC;MAC1B;IACF;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA6S,mBAAmB3H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MAC3C,IAAOpF,MAAM,GAAYjC,IAAI,CAAtBiC,MAAM;QAAEb,MAAM,GAAIpB,IAAI,CAAdoB,MAAM;MACrB,IAAMc,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;MACzB,IAAM0F,MAAM,GAAG5F,MAAM,CAAC6F,SAAS,EAAE;MACjC,IAAMC,WAAW,GAAG9F,MAAM,KAAKb,MAAM;MACrC,IAAMU,MAAM,GAAG,IAAIhC,KAAK,CAACuH,KAAK,CAAC;MAC/B,IAAI3e,CAAC,EAAEwW,IAAI,EAAEC,KAAK;MAClB,KAAKzW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGmI,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAAA,IAAAsf,SAAA;QACvC7I,KAAK,GAAGzW,CAAC,GAAGoN,KAAK;QACjBgM,MAAM,CAACpZ,CAAC,CAAC,IAAAsf,SAAA,OAAAC,eAAA,CAAAD,SAAA,EACN9F,KAAK,EAAG6F,WAAW,IAAI9F,MAAM,CAACmF,KAAK,CAACS,MAAM,CAAC1I,KAAK,CAAC,EAAEA,KAAK,CAAC,GAAA8I,eAAA,CAAAD,SAAA,EACzD5F,KAAK,EAAGhB,MAAM,CAACgG,KAAK,CAACxH,IAAI,CAACT,KAAK,CAAC,EAAEA,KAAK,CAAC,GAAA6I,SAAA,CAC1C;MACH;MACA,OAAOlG,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA2S,eAAezH,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACvC,IAAO/I,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAMuD,MAAM,GAAG,IAAIhC,KAAK,CAACuH,KAAK,CAAC;MAC/B,IAAI3e,CAAC,EAAEwW,IAAI,EAAEC,KAAK,EAAEvI,IAAI;MACxB,KAAKlO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGmI,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACvCyW,KAAK,GAAGzW,CAAC,GAAGoN,KAAK;QACjBc,IAAI,GAAGgJ,IAAI,CAACT,KAAK,CAAC;QAClB2C,MAAM,CAACpZ,CAAC,CAAC,GAAG;UACV8C,CAAC,EAAE8S,MAAM,CAAC8I,KAAK,CAACxQ,IAAI,CAAC,CAAC,CAAC,EAAEuI,KAAK,CAAC;UAC/BzT,CAAC,EAAE6S,MAAM,CAAC6I,KAAK,CAACxQ,IAAI,CAAC,CAAC,CAAC,EAAEuI,KAAK;QAChC,CAAC;MACH;MACA,OAAO2C,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA4S,gBAAgB1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACxC,IAAO/I,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAA2J,cAAA,GAAyC,IAAI,CAAChE,QAAQ;QAAAiE,qBAAA,GAAAD,cAAA,CAA/CE,QAAQ;QAARA,QAAQ,GAAAD,qBAAA,cAAG,GAAG,GAAAA,qBAAA;QAAAE,qBAAA,GAAAH,cAAA,CAAEI,QAAQ;QAARA,QAAQ,GAAAD,qBAAA,cAAG,GAAG,GAAAA,qBAAA;MACrC,IAAMvG,MAAM,GAAG,IAAIhC,KAAK,CAACuH,KAAK,CAAC;MAC/B,IAAI3e,CAAC,EAAEwW,IAAI,EAAEC,KAAK,EAAEvI,IAAI;MACxB,KAAKlO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGmI,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACvCyW,KAAK,GAAGzW,CAAC,GAAGoN,KAAK;QACjBc,IAAI,GAAGgJ,IAAI,CAACT,KAAK,CAAC;QAClB2C,MAAM,CAACpZ,CAAC,CAAC,GAAG;UACV8C,CAAC,EAAE8S,MAAM,CAAC8I,KAAK,CAAC7d,gBAAgB,CAACqN,IAAI,EAAEwR,QAAQ,CAAC,EAAEjJ,KAAK,CAAC;UACxDzT,CAAC,EAAE6S,MAAM,CAAC6I,KAAK,CAAC7d,gBAAgB,CAACqN,IAAI,EAAE0R,QAAQ,CAAC,EAAEnJ,KAAK;QACzD,CAAC;MACH;MACA,OAAO2C,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAAyT,UAAUpJ,KAAK,EAAE;MACf,OAAO,IAAI,CAAC4C,WAAW,CAACsB,OAAO,CAAClE,KAAK,CAAC;IACxC;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA0T,eAAerJ,KAAK,EAAE;MACpB,OAAO,IAAI,CAAC4C,WAAW,CAACnC,IAAI,CAACT,KAAK,CAAC;IACrC;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAsK,WAAWpB,KAAK,EAAE8D,MAAM,EAAEtC,IAAI,EAAE;MAC9B,IAAMxK,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAMgL,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAMjN,KAAK,GAAGgN,MAAM,CAAC9D,KAAK,CAACmE,IAAI,CAAC;MAChC,IAAM9C,KAAK,GAAG;QACZ7D,IAAI,EAAEsD,uBAAuB,CAAC9J,KAAK,EAAE,IAAI,CAAC;QAC1CgI,MAAM,EAAE8E,MAAM,CAACE,OAAO,CAAChE,KAAK,CAACmE,IAAI;MACnC,CAAC;MACD,OAAO/C,WAAU,CAACC,KAAK,EAAEvK,KAAK,EAAEkL,IAAI,CAACb,KAAK,EAAE;QAACK,IAAI,EAAJA;MAAI,CAAC,CAAC;IACrD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA2T,sBAAsBC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,EAAE;MACjD,IAAMsJ,WAAW,GAAG7G,MAAM,CAAC9D,KAAK,CAACmE,IAAI,CAAC;MACtC,IAAIrN,KAAK,GAAG6T,WAAW,KAAK,IAAI,GAAGC,GAAG,GAAGD,WAAW;MACpD,IAAM3L,MAAM,GAAGqC,KAAK,IAAIyC,MAAM,CAACE,OAAO,CAAChE,KAAK,CAACmE,IAAI,CAAC;MAClD,IAAI9C,KAAK,IAAIrC,MAAM,EAAE;QACnBqC,KAAK,CAACrC,MAAM,GAAGA,MAAM;QACrB0L,KAAK,CAAC7S,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC6S,KAAK,CAAC7S,GAAG,EAAEf,KAAK,CAAC;QACtC4T,KAAK,CAACvQ,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACuQ,KAAK,CAACvQ,GAAG,EAAErD,KAAK,CAAC;QACtCA,KAAK,GAAGsK,WAAU,CAACC,KAAK,EAAEsJ,WAAW,EAAE,IAAI,CAAC5G,WAAW,CAAC5C,KAAK,EAAE;UAACrB,GAAG,EAAE;QAAI,CAAC,CAAC;MAC7E;MACA4K,KAAK,CAAC7S,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC6S,KAAK,CAAC7S,GAAG,EAAEf,KAAK,CAAC;MACtC4T,KAAK,CAACvQ,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACuQ,KAAK,CAACvQ,GAAG,EAAErD,KAAK,CAAC;IACxC;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA+T,UAAU7K,KAAK,EAAE8K,QAAQ,EAAE;MACzB,IAAM9S,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMsB,OAAO,GAAGrD,IAAI,CAACqD,OAAO;MAC5B,IAAMiE,MAAM,GAAGtH,IAAI,CAACuH,OAAO,IAAIvJ,KAAK,KAAKgC,IAAI,CAACiC,MAAM;MACpD,IAAM/C,IAAI,GAAGmE,OAAO,CAAChN,MAAM;MAC3B,IAAM0S,UAAU,GAAG/S,EAAE,CAACkQ,cAAc,CAAClI,KAAK,CAAC;MAC3C,IAAMqB,KAAK,GAAGyJ,QAAQ,IAAI9I,IAAI,CAAC6E,QAAQ,IAAI;QAACrJ,IAAI,EAAEsD,uBAAuB,CAAC9I,EAAE,CAAChB,KAAK,EAAE,IAAI,CAAC;QAAEgI,MAAM,EAAE;MAAI,CAAC;MACxG,IAAM0L,KAAK,GAAG;QAAC7S,GAAG,EAAE8K,MAAM,CAACE,iBAAiB;QAAE1I,GAAG,EAAEwI,MAAM,CAACC;MAAiB,CAAC;MAC5E,IAAAoI,cAAA,GAAuCzI,aAAa,CAACwI,UAAU,CAAC;QAApDE,QAAQ,GAAAD,cAAA,CAAbnT,GAAG;QAAiBqT,QAAQ,GAAAF,cAAA,CAAb7Q,GAAG;MACzB,IAAIzP,CAAC,EAAEoM,KAAK,EAAEgN,MAAM,EAAEpC,UAAU;MAChC,SAASyJ,KAAKA,CAAA,EAAG;QACfrH,MAAM,GAAGuB,OAAO,CAAC3a,CAAC,CAAC;QACnBoM,KAAK,GAAGgN,MAAM,CAAC9D,KAAK,CAACmE,IAAI,CAAC;QAC1BzC,UAAU,GAAGoC,MAAM,CAACiH,UAAU,CAAC5G,IAAI,CAAC;QACpC,OAAO,CAAC1Y,cAAc,CAACqL,KAAK,CAAC,IAAImU,QAAQ,GAAGvJ,UAAU,IAAIwJ,QAAQ,GAAGxJ,UAAU;MACjF;MACA,KAAKhX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACzB,IAAIygB,KAAK,EAAE,EAAE;UACX;QACF;QACAnT,EAAE,CAACyS,qBAAqB,CAACC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,CAAC;QACrD,IAAIiI,MAAM,EAAE;UACV;QACF;MACF;MACA,IAAIA,MAAM,EAAE;QACV,KAAK5e,CAAC,GAAGwW,IAAI,GAAG,CAAC,EAAExW,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;UAC9B,IAAIygB,KAAK,EAAE,EAAE;YACX;UACF;UACAnT,EAAE,CAACyS,qBAAqB,CAACC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,CAAC;UACrD;QACF;MACF;MACA,OAAOqJ,KAAK;IACd;EAAC;IAAA7T,GAAA;IAAAC,KAAA,EACD,SAAAsU,mBAAmBpL,KAAK,EAAE;MACxB,IAAM8D,MAAM,GAAG,IAAI,CAACC,WAAW,CAACsB,OAAO;MACvC,IAAMrG,MAAM,GAAG,EAAE;MACjB,IAAItU,CAAC,EAAEwW,IAAI,EAAEpK,KAAK;MAClB,KAAKpM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG4C,MAAM,CAACzL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC/CoM,KAAK,GAAGgN,MAAM,CAACpZ,CAAC,CAAC,CAACsV,KAAK,CAACmE,IAAI,CAAC;QAC7B,IAAI1Y,cAAc,CAACqL,KAAK,CAAC,EAAE;UACzBkI,MAAM,CAACtF,IAAI,CAAC5C,KAAK,CAAC;QACpB;MACF;MACA,OAAOkI,MAAM;IACf;EAAC;IAAAnI,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,OAAO,KAAK;IACd;EAAC;IAAAxU,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAME,MAAM,GAAGjC,IAAI,CAACiC,MAAM;MAC1B,IAAMb,MAAM,GAAGpB,IAAI,CAACoB,MAAM;MAC1B,IAAMU,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,OAAO;QACLoK,KAAK,EAAEtH,MAAM,GAAG,EAAE,GAAGA,MAAM,CAACuH,gBAAgB,CAAC1H,MAAM,CAACG,MAAM,CAACE,IAAI,CAAC,CAAC,GAAG,EAAE;QACtErN,KAAK,EAAEsM,MAAM,GAAG,EAAE,GAAGA,MAAM,CAACoI,gBAAgB,CAAC1H,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC,CAAC,GAAG;MACtE,CAAC;IACH;EAAC;IAAAtN,GAAA;IAAAC,KAAA,EACD,SAAAqB,QAAQqJ,IAAI,EAAE;MACZ,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACyG,SAAS,EAAE;MACdzG,EAAE,CAAC+N,eAAe,GAAG,CAAC,CAAC;MACvB/N,EAAE,CAAC0E,MAAM,CAAC8E,IAAI,IAAI,SAAS,CAAC;MAC5BQ,IAAI,CAACyJ,KAAK,GAAG7K,MAAM,CAAC3V,cAAc,CAAC+M,EAAE,CAACkH,OAAO,CAACwM,IAAI,EAAErL,WAAW,CAAC2B,IAAI,CAAC1B,MAAM,EAAE0B,IAAI,CAACzB,MAAM,EAAEvI,EAAE,CAACqT,cAAc,EAAE,CAAC,CAAC,CAAC;IAClH;EAAC;IAAAxU,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE,CAAC;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACf,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC6N,IAAI;MACnB,IAAM7O,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMgL,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM4H,QAAQ,GAAG3J,IAAI,CAACJ,IAAI,IAAI,EAAE;MAChC,IAAMgK,IAAI,GAAG5U,KAAK,CAAC6U,SAAS;MAC5B,IAAMpP,MAAM,GAAG,EAAE;MACjB,IAAM3E,KAAK,GAAGE,EAAE,CAACsO,UAAU,IAAI,CAAC;MAChC,IAAM+C,KAAK,GAAGrR,EAAE,CAACuO,UAAU,IAAKoF,QAAQ,CAACtT,MAAM,GAAGP,KAAM;MACxD,IAAIpN,CAAC;MACL,IAAIsX,IAAI,CAAC+C,OAAO,EAAE;QAChB/C,IAAI,CAAC+C,OAAO,CAACpM,IAAI,CAACmN,GAAG,EAAE8F,IAAI,EAAE9T,KAAK,EAAEuR,KAAK,CAAC;MAC5C;MACA,KAAK3e,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;QACtC,IAAMua,OAAO,GAAG0G,QAAQ,CAACjhB,CAAC,CAAC;QAC3B,IAAIua,OAAO,CAACxI,MAAM,EAAE;UAClBA,MAAM,CAAC/C,IAAI,CAACuL,OAAO,CAAC;QACtB,CAAC,MAAM;UACLA,OAAO,CAACtM,IAAI,CAACmN,GAAG,EAAE8F,IAAI,CAAC;QACzB;MACF;MACA,KAAKlhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+R,MAAM,CAACpE,MAAM,EAAE,EAAE3N,CAAC,EAAE;QAClC+R,MAAM,CAAC/R,CAAC,CAAC,CAACiO,IAAI,CAACmN,GAAG,EAAE8F,IAAI,CAAC;MAC3B;IACF;EAAC;IAAA/U,GAAA;IAAAC,KAAA,EACD,SAAAgV,SAAS3K,KAAK,EAAE1E,MAAM,EAAE;MACtB,IAAM+E,IAAI,GAAG/E,MAAM,GAAG,QAAQ,GAAG,SAAS;MAC1C,OAAO0E,KAAK,KAAKxK,SAAS,IAAI,IAAI,CAACoN,WAAW,CAACgB,OAAO,GAClD,IAAI,CAACgH,4BAA4B,CAACvK,IAAI,CAAC,GACvC,IAAI,CAACwK,yBAAyB,CAAC7K,KAAK,IAAI,CAAC,EAAEK,IAAI,CAAC;IACtD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAW/H,KAAK,EAAE1E,MAAM,EAAE+E,IAAI,EAAE;MAC9B,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAACgP,UAAU,EAAE;MAC/B,IAAIiF,OAAO;MACX,IAAI9K,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGnJ,EAAE,CAAC+L,WAAW,CAACnC,IAAI,CAACvJ,MAAM,EAAE;QACpD,IAAM4M,OAAO,GAAGjN,EAAE,CAAC+L,WAAW,CAACnC,IAAI,CAACT,KAAK,CAAC;QAC1C8K,OAAO,GAAGhH,OAAO,CAACwB,QAAQ,KACvBxB,OAAO,CAACwB,QAAQ,GAAGzB,iBAAiB,CAAChN,EAAE,CAACkR,UAAU,EAAE,EAAE/H,KAAK,EAAE8D,OAAO,CAAC,CAAC;QACzEgH,OAAO,CAACnI,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;QACpC8K,OAAO,CAAC9G,GAAG,GAAGJ,OAAO,CAACnD,IAAI,CAACT,KAAK,CAAC;QACjC8K,OAAO,CAAC9K,KAAK,GAAG8K,OAAO,CAAC/G,SAAS,GAAG/D,KAAK;MAC3C,CAAC,MAAM;QACL8K,OAAO,GAAGjU,EAAE,CAACyO,QAAQ,KAClBzO,EAAE,CAACyO,QAAQ,GAAG7B,oBAAoB,CAAC5M,EAAE,CAAChB,KAAK,CAACkS,UAAU,EAAE,EAAElR,EAAE,CAACmJ,KAAK,CAAC,CAAC;QACvE8K,OAAO,CAAClH,OAAO,GAAGA,OAAO;QACzBkH,OAAO,CAAC9K,KAAK,GAAG8K,OAAO,CAACxK,YAAY,GAAGzJ,EAAE,CAACmJ,KAAK;MACjD;MACA8K,OAAO,CAACxP,MAAM,GAAG,CAAC,CAACA,MAAM;MACzBwP,OAAO,CAACzK,IAAI,GAAGA,IAAI;MACnB,OAAOyK,OAAO;IAChB;EAAC;IAAApV,GAAA;IAAAC,KAAA,EACD,SAAAiV,6BAA6BvK,IAAI,EAAE;MACjC,OAAO,IAAI,CAAC0K,sBAAsB,CAAC,IAAI,CAAC3D,kBAAkB,CAACjG,EAAE,EAAEd,IAAI,CAAC;IACtE;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAkV,0BAA0B7K,KAAK,EAAEK,IAAI,EAAE;MACrC,OAAO,IAAI,CAAC0K,sBAAsB,CAAC,IAAI,CAACC,eAAe,CAAC7J,EAAE,EAAEd,IAAI,EAAEL,KAAK,CAAC;IAC1E;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAoV,uBAAuBE,WAAW,EAA2B;MAAA,IAAzB5K,IAAI,GAAApJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,SAAS;MAAA,IAAE+I,KAAK,GAAA/I,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAzB,SAAA;MACzD,IAAMqB,EAAE,GAAG,IAAI;MACf,IAAMyE,MAAM,GAAG+E,IAAI,KAAK,QAAQ;MAChC,IAAM6K,KAAK,GAAGrU,EAAE,CAAC+N,eAAe;MAChC,IAAMuG,QAAQ,GAAGF,WAAW,GAAG,GAAG,GAAG5K,IAAI;MACzC,IAAMkE,MAAM,GAAG2G,KAAK,CAACC,QAAQ,CAAC;MAC9B,IAAMC,OAAO,GAAGvU,EAAE,CAACwO,mBAAmB,IAAI7a,OAAO,CAACwV,KAAK,CAAC;MACxD,IAAIuE,MAAM,EAAE;QACV,OAAOD,gBAAgB,CAACC,MAAM,EAAE6G,OAAO,CAAC;MAC1C;MACA,IAAMjO,MAAM,GAAGtG,EAAE,CAAChB,KAAK,CAACsH,MAAM;MAC9B,IAAMuK,SAAS,GAAGvK,MAAM,CAACkO,uBAAuB,CAACxU,EAAE,CAACiO,KAAK,EAAEmG,WAAW,CAAC;MACvE,IAAMK,QAAQ,GAAGhQ,MAAM,GAAG,IAAA4F,MAAA,CAAI+J,WAAW,YAAS,OAAO,EAAEA,WAAW,EAAE,EAAE,CAAC,GAAG,CAACA,WAAW,EAAE,EAAE,CAAC;MAC/F,IAAMrD,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAChR,EAAE,CAACgP,UAAU,EAAE,EAAE6B,SAAS,CAAC;MACjE,IAAM6D,KAAK,GAAGnP,MAAM,CAACC,IAAI,CAACzS,QAAQ,CAAC4gB,QAAQ,CAACS,WAAW,CAAC,CAAC;MACzD,IAAMH,OAAO,GAAG,SAAVA,OAAOA,CAAA;QAAA,OAASjU,EAAE,CAACkR,UAAU,CAAC/H,KAAK,EAAE1E,MAAM,CAAC;MAAA;MAClD,IAAMuC,MAAM,GAAGV,MAAM,CAACqO,mBAAmB,CAAC5D,MAAM,EAAE2D,KAAK,EAAET,OAAO,EAAEQ,QAAQ,CAAC;MAC3E,IAAIzN,MAAM,CAACK,OAAO,EAAE;QAClBL,MAAM,CAACK,OAAO,GAAGkN,OAAO;QACxBF,KAAK,CAACC,QAAQ,CAAC,GAAG/O,MAAM,CAACqP,MAAM,CAACnH,gBAAgB,CAACzG,MAAM,EAAEuN,OAAO,CAAC,CAAC;MACpE;MACA,OAAOvN,MAAM;IACf;EAAC;IAAAnI,GAAA;IAAAC,KAAA,EACD,SAAA+V,mBAAmB1L,KAAK,EAAE2L,UAAU,EAAErQ,MAAM,EAAE;MAC5C,IAAMzE,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMqV,KAAK,GAAGrU,EAAE,CAAC+N,eAAe;MAChC,IAAMuG,QAAQ,gBAAAjK,MAAA,CAAgByK,UAAU,CAAE;MAC1C,IAAMpH,MAAM,GAAG2G,KAAK,CAACC,QAAQ,CAAC;MAC9B,IAAI5G,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,IAAIxG,OAAO;MACX,IAAIlI,KAAK,CAACkI,OAAO,CAACzB,SAAS,KAAK,KAAK,EAAE;QACrC,IAAMa,MAAM,GAAGtG,EAAE,CAAChB,KAAK,CAACsH,MAAM;QAC9B,IAAMuK,SAAS,GAAGvK,MAAM,CAACyO,yBAAyB,CAAC/U,EAAE,CAACiO,KAAK,EAAE6G,UAAU,CAAC;QACxE,IAAM/D,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAChR,EAAE,CAACgP,UAAU,EAAE,EAAE6B,SAAS,CAAC;QACjE3J,OAAO,GAAGZ,MAAM,CAAC2K,cAAc,CAACF,MAAM,EAAE/Q,EAAE,CAACkR,UAAU,CAAC/H,KAAK,EAAE1E,MAAM,EAAEqQ,UAAU,CAAC,CAAC;MACnF;MACA,IAAM5O,UAAU,GAAG,IAAIG,UAAU,CAACrH,KAAK,EAAEkI,OAAO,IAAIA,OAAO,CAAChB,UAAU,CAAC;MACvE,IAAIgB,OAAO,IAAIA,OAAO,CAAC8N,UAAU,EAAE;QACjCX,KAAK,CAACC,QAAQ,CAAC,GAAG/O,MAAM,CAACqP,MAAM,CAAC1O,UAAU,CAAC;MAC7C;MACA,OAAOA,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAAmW,iBAAiB/N,OAAO,EAAE;MACxB,IAAI,CAACA,OAAO,CAACG,OAAO,EAAE;QACpB;MACF;MACA,OAAO,IAAI,CAACgH,cAAc,KAAK,IAAI,CAACA,cAAc,GAAG9I,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEV,OAAO,CAAC,CAAC;IAClF;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAAoW,eAAe1L,IAAI,EAAE2L,aAAa,EAAE;MAClC,OAAO,CAACA,aAAa,IAAI3H,kBAAkB,CAAChE,IAAI,CAAC,IAAI,IAAI,CAACxK,KAAK,CAACoW,mBAAmB;IACrF;EAAC;IAAAvW,GAAA;IAAAC,KAAA,EACD,SAAAuW,cAAcpI,OAAO,EAAE9D,KAAK,EAAEpD,UAAU,EAAEyD,IAAI,EAAE;MAC9C,IAAIgE,kBAAkB,CAAChE,IAAI,CAAC,EAAE;QAC5BjE,MAAM,CAACqC,MAAM,CAACqF,OAAO,EAAElH,UAAU,CAAC;MACpC,CAAC,MAAM;QACL,IAAI,CAAC8O,kBAAkB,CAAC1L,KAAK,EAAEK,IAAI,CAAC,CAAC9E,MAAM,CAACuI,OAAO,EAAElH,UAAU,CAAC;MAClE;IACF;EAAC;IAAAlH,GAAA;IAAAC,KAAA,EACD,SAAAwW,oBAAoBH,aAAa,EAAE3L,IAAI,EAAEvC,UAAU,EAAE;MACnD,IAAIkO,aAAa,IAAI,CAAC3H,kBAAkB,CAAChE,IAAI,CAAC,EAAE;QAC9C,IAAI,CAACqL,kBAAkB,CAAClW,SAAS,EAAE6K,IAAI,CAAC,CAAC9E,MAAM,CAACyQ,aAAa,EAAElO,UAAU,CAAC;MAC5E;IACF;EAAC;IAAApI,GAAA;IAAAC,KAAA,EACD,SAAAyW,UAAUtI,OAAO,EAAE9D,KAAK,EAAEK,IAAI,EAAE/E,MAAM,EAAE;MACtCwI,OAAO,CAACxI,MAAM,GAAGA,MAAM;MACvB,IAAMyC,OAAO,GAAG,IAAI,CAAC4M,QAAQ,CAAC3K,KAAK,EAAE1E,MAAM,CAAC;MAC5C,IAAI,CAACoQ,kBAAkB,CAAC1L,KAAK,EAAEK,IAAI,EAAE/E,MAAM,CAAC,CAACC,MAAM,CAACuI,OAAO,EAAE;QAC3D/F,OAAO,EAAG,CAACzC,MAAM,IAAI,IAAI,CAACwQ,gBAAgB,CAAC/N,OAAO,CAAC,IAAKA;MAC1D,CAAC,CAAC;IACJ;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAA0W,iBAAiBvI,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;MAC7C,IAAI,CAACoM,SAAS,CAACtI,OAAO,EAAE9D,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC;IACjD;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA2W,cAAcxI,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;MAC1C,IAAI,CAACoM,SAAS,CAACtI,OAAO,EAAE9D,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;IAChD;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA4W,yBAAA,EAA2B;MACzB,IAAMzI,OAAO,GAAG,IAAI,CAAClB,WAAW,CAACgB,OAAO;MACxC,IAAIE,OAAO,EAAE;QACX,IAAI,CAACsI,SAAS,CAACtI,OAAO,EAAEtO,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC;MACrD;IACF;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAA6W,sBAAA,EAAwB;MACtB,IAAM1I,OAAO,GAAG,IAAI,CAAClB,WAAW,CAACgB,OAAO;MACxC,IAAIE,OAAO,EAAE;QACX,IAAI,CAACsI,SAAS,CAACtI,OAAO,EAAEtO,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;MACpD;IACF;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAA8R,gBAAgBH,gBAAgB,EAAE;MAChC,IAAMzQ,EAAE,GAAG,IAAI;MACf,IAAM4J,IAAI,GAAG5J,EAAE,CAACmO,KAAK;MACrB,IAAMwF,QAAQ,GAAG3T,EAAE,CAAC+L,WAAW,CAACnC,IAAI;MAAC,IAAAgM,UAAA,GAAArK,0BAAA,CACFvL,EAAE,CAAC0O,SAAS;QAAAmH,MAAA;MAAA;QAA/C,KAAAD,UAAA,CAAAhiB,CAAA,MAAAiiB,MAAA,GAAAD,UAAA,CAAAlhB,CAAA,IAAAgX,IAAA,GAAiD;UAAA,IAAAoK,YAAA,GAAAC,cAAA,CAAAF,MAAA,CAAA/W,KAAA;YAArCqG,MAAM,GAAA2Q,YAAA;YAAEE,IAAI,GAAAF,YAAA;YAAEG,IAAI,GAAAH,YAAA;UAC5B9V,EAAE,CAACmF,MAAM,CAAC,CAAC6Q,IAAI,EAAEC,IAAI,CAAC;QACxB;MAAC,SAAAtK,GAAA;QAAAiK,UAAA,CAAAtjB,CAAA,CAAAqZ,GAAA;MAAA;QAAAiK,UAAA,CAAAtiB,CAAA;MAAA;MACD0M,EAAE,CAAC0O,SAAS,GAAG,EAAE;MACjB,IAAMwH,OAAO,GAAGvC,QAAQ,CAACtT,MAAM;MAC/B,IAAM8V,OAAO,GAAGvM,IAAI,CAACvJ,MAAM;MAC3B,IAAMgR,KAAK,GAAGzR,IAAI,CAACC,GAAG,CAACsW,OAAO,EAAED,OAAO,CAAC;MACxC,IAAI7E,KAAK,EAAE;QACTrR,EAAE,CAACoR,KAAK,CAAC,CAAC,EAAEC,KAAK,CAAC;MACpB;MACA,IAAI8E,OAAO,GAAGD,OAAO,EAAE;QACrBlW,EAAE,CAACoW,eAAe,CAACF,OAAO,EAAEC,OAAO,GAAGD,OAAO,EAAEzF,gBAAgB,CAAC;MAClE,CAAC,MAAM,IAAI0F,OAAO,GAAGD,OAAO,EAAE;QAC5BlW,EAAE,CAACqW,eAAe,CAACF,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;MAChD;IACF;EAAC;IAAAtX,GAAA;IAAAC,KAAA,EACD,SAAAsX,gBAAgBtW,KAAK,EAAEuR,KAAK,EAA2B;MAAA,IAAzBZ,gBAAgB,GAAArQ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,IAAI;MACnD,IAAMJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMnC,IAAI,GAAGI,IAAI,CAACJ,IAAI;MACtB,IAAMxB,GAAG,GAAGtI,KAAK,GAAGuR,KAAK;MACzB,IAAI3e,CAAC;MACL,IAAM4jB,IAAI,GAAG,SAAPA,IAAIA,CAAIC,GAAG,EAAK;QACpBA,GAAG,CAAClW,MAAM,IAAIgR,KAAK;QACnB,KAAK3e,CAAC,GAAG6jB,GAAG,CAAClW,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI0V,GAAG,EAAE1V,CAAC,EAAE,EAAE;UACtC6jB,GAAG,CAAC7jB,CAAC,CAAC,GAAG6jB,GAAG,CAAC7jB,CAAC,GAAG2e,KAAK,CAAC;QACzB;MACF,CAAC;MACDiF,IAAI,CAAC1M,IAAI,CAAC;MACV,KAAKlX,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAG0V,GAAG,EAAE,EAAE1V,CAAC,EAAE;QAC5BkX,IAAI,CAAClX,CAAC,CAAC,GAAG,IAAIsN,EAAE,CAACmU,eAAe,EAAE;MACpC;MACA,IAAInU,EAAE,CAACkO,QAAQ,EAAE;QACfoI,IAAI,CAACtM,IAAI,CAACqD,OAAO,CAAC;MACpB;MACArN,EAAE,CAACoR,KAAK,CAACtR,KAAK,EAAEuR,KAAK,CAAC;MACtB,IAAIZ,gBAAgB,EAAE;QACpBzQ,EAAE,CAACwW,cAAc,CAAC5M,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE,OAAO,CAAC;MAChD;IACF;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA0X,eAAevJ,OAAO,EAAEnN,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE,CAAC;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EAC9C,SAAAuX,gBAAgBvW,KAAK,EAAEuR,KAAK,EAAE;MAC5B,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAI/L,EAAE,CAACkO,QAAQ,EAAE;QACf,IAAMuI,OAAO,GAAGzM,IAAI,CAACqD,OAAO,CAACqJ,MAAM,CAAC5W,KAAK,EAAEuR,KAAK,CAAC;QACjD,IAAIrH,IAAI,CAAC6E,QAAQ,EAAE;UACjBzB,WAAW,CAACpD,IAAI,EAAEyM,OAAO,CAAC;QAC5B;MACF;MACAzM,IAAI,CAACJ,IAAI,CAAC8M,MAAM,CAAC5W,KAAK,EAAEuR,KAAK,CAAC;IAChC;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA6X,YAAA,EAAc;MACZ,IAAMtF,KAAK,GAAGjR,SAAS,CAACC,MAAM;MAC9B,IAAI,CAACqO,SAAS,CAAChN,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAACsN,UAAU,EAAE,CAACpF,IAAI,CAACvJ,MAAM,GAAGgR,KAAK,EAAEA,KAAK,CAAC,CAAC;IACxF;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA8X,WAAA,EAAa;MACX,IAAI,CAAClI,SAAS,CAAChN,IAAI,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAACqK,WAAW,CAACnC,IAAI,CAACvJ,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/E;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAA+X,aAAA,EAAe;MACb,IAAI,CAACnI,SAAS,CAAChN,IAAI,CAAC,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD;EAAC;IAAA7C,GAAA;IAAAC,KAAA,EACD,SAAAgY,cAAchX,KAAK,EAAEuR,KAAK,EAAE;MAC1B,IAAI,CAAC3C,SAAS,CAAChN,IAAI,CAAC,CAAC,iBAAiB,EAAE5B,KAAK,EAAEuR,KAAK,CAAC,CAAC;MACtD,IAAI,CAAC3C,SAAS,CAAChN,IAAI,CAAC,CAAC,iBAAiB,EAAE5B,KAAK,EAAEM,SAAS,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;IACvE;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAiY,eAAA,EAAiB;MACf,IAAI,CAACrI,SAAS,CAAChN,IAAI,CAAC,CAAC,iBAAiB,EAAE,CAAC,EAAEtB,SAAS,CAACC,MAAM,CAAC,CAAC;IAC/D;EAAC;EAAA,OAAAuN,iBAAA;AAAA;AAEHA,iBAAiB,CAAC7a,QAAQ,GAAG,CAAC,CAAC;AAC/B6a,iBAAiB,CAACoJ,SAAS,CAACzG,kBAAkB,GAAG,IAAI;AACrD3C,iBAAiB,CAACoJ,SAAS,CAAC7C,eAAe,GAAG,IAAI;AAElD,SAAS8C,iBAAiBA,CAACjP,KAAK,EAAE;EAChC,IAAI,CAACA,KAAK,CAACkP,MAAM,CAACC,IAAI,EAAE;IACtB,IAAMC,KAAK,GAAGpP,KAAK,CAACwD,uBAAuB,CAAC,KAAK,CAAC;IAClD,IAAIxE,MAAM,GAAG,EAAE;IACf,KAAK,IAAItU,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkO,KAAK,CAAC/W,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;MAClDsU,MAAM,GAAGA,MAAM,CAACqD,MAAM,CAAC+M,KAAK,CAAC1kB,CAAC,CAAC,CAACmZ,UAAU,CAACuH,kBAAkB,CAACpL,KAAK,CAAC,CAAC;IACvE;IACAA,KAAK,CAACkP,MAAM,CAACC,IAAI,GAAGljB,YAAY,CAAC+S,MAAM,CAACqQ,IAAI,CAAC,UAACjlB,CAAC,EAAEQ,CAAC;MAAA,OAAKR,CAAC,GAAGQ,CAAC;IAAA,EAAC,CAAC;EAChE;EACA,OAAOoV,KAAK,CAACkP,MAAM,CAACC,IAAI;AAC1B;AACA,SAASG,oBAAoBA,CAACtP,KAAK,EAAE;EACnC,IAAMhB,MAAM,GAAGiQ,iBAAiB,CAACjP,KAAK,CAAC;EACvC,IAAInI,GAAG,GAAGmI,KAAK,CAACuP,OAAO;EACvB,IAAI7kB,CAAC,EAAEwW,IAAI,EAAEsO,IAAI,EAAEhG,IAAI;EACvB,IAAMiG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B,IAAID,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,CAAC,KAAK,EAAE;MACrC;IACF;IACA,IAAI7jB,OAAO,CAAC6d,IAAI,CAAC,EAAE;MACjB3R,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAED,IAAI,CAAC8X,GAAG,CAACF,IAAI,GAAGhG,IAAI,CAAC,IAAI3R,GAAG,CAAC;IACnD;IACA2R,IAAI,GAAGgG,IAAI;EACb,CAAC;EACD,KAAK9kB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlC,MAAM,CAAC3G,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC/C8kB,IAAI,GAAGxP,KAAK,CAAC2P,gBAAgB,CAAC3Q,MAAM,CAACtU,CAAC,CAAC,CAAC;IACxC+kB,gBAAgB,EAAE;EACpB;EACAjG,IAAI,GAAG7S,SAAS;EAChB,KAAKjM,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlB,KAAK,CAAC4P,KAAK,CAACvX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACpD8kB,IAAI,GAAGxP,KAAK,CAAC6P,eAAe,CAACnlB,CAAC,CAAC;IAC/B+kB,gBAAgB,EAAE;EACpB;EACA,OAAO5X,GAAG;AACZ;AACA,SAASiY,wBAAwBA,CAAC3O,KAAK,EAAE4O,KAAK,EAAE7Q,OAAO,EAAE8Q,UAAU,EAAE;EACnE,IAAMC,SAAS,GAAG/Q,OAAO,CAACgR,YAAY;EACtC,IAAIvQ,IAAI,EAAEwQ,KAAK;EACf,IAAIpkB,aAAa,CAACkkB,SAAS,CAAC,EAAE;IAC5BtQ,IAAI,GAAGoQ,KAAK,CAAClY,GAAG,GAAGqH,OAAO,CAACkR,kBAAkB;IAC7CD,KAAK,GAAGjR,OAAO,CAACmR,aAAa;EAC/B,CAAC,MAAM;IACL1Q,IAAI,GAAGsQ,SAAS,GAAGD,UAAU;IAC7BG,KAAK,GAAG,CAAC;EACX;EACA,OAAO;IACLG,KAAK,EAAE3Q,IAAI,GAAGqQ,UAAU;IACxBG,KAAK,EAALA,KAAK;IACLrY,KAAK,EAAEiY,KAAK,CAACQ,MAAM,CAACpP,KAAK,CAAC,GAAIxB,IAAI,GAAG;EACvC,CAAC;AACH;AACA,SAAS6Q,yBAAyBA,CAACrP,KAAK,EAAE4O,KAAK,EAAE7Q,OAAO,EAAE8Q,UAAU,EAAE;EACpE,IAAMO,MAAM,GAAGR,KAAK,CAACQ,MAAM;EAC3B,IAAMf,IAAI,GAAGe,MAAM,CAACpP,KAAK,CAAC;EAC1B,IAAIqI,IAAI,GAAGrI,KAAK,GAAG,CAAC,GAAGoP,MAAM,CAACpP,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/C,IAAIsP,IAAI,GAAGtP,KAAK,GAAGoP,MAAM,CAAClY,MAAM,GAAG,CAAC,GAAGkY,MAAM,CAACpP,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI;EAC/D,IAAMuP,OAAO,GAAGxR,OAAO,CAACkR,kBAAkB;EAC1C,IAAI5G,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGgG,IAAI,IAAIiB,IAAI,KAAK,IAAI,GAAGV,KAAK,CAAC3P,GAAG,GAAG2P,KAAK,CAACjY,KAAK,GAAG2Y,IAAI,GAAGjB,IAAI,CAAC;EACvE;EACA,IAAIiB,IAAI,KAAK,IAAI,EAAE;IACjBA,IAAI,GAAGjB,IAAI,GAAGA,IAAI,GAAGhG,IAAI;EAC3B;EACA,IAAM1R,KAAK,GAAG0X,IAAI,GAAG,CAACA,IAAI,GAAG5X,IAAI,CAACC,GAAG,CAAC2R,IAAI,EAAEiH,IAAI,CAAC,IAAI,CAAC,GAAGC,OAAO;EAChE,IAAM/Q,IAAI,GAAG/H,IAAI,CAAC8X,GAAG,CAACe,IAAI,GAAGjH,IAAI,CAAC,GAAG,CAAC,GAAGkH,OAAO;EAChD,OAAO;IACLJ,KAAK,EAAE3Q,IAAI,GAAGqQ,UAAU;IACxBG,KAAK,EAAEjR,OAAO,CAACmR,aAAa;IAC5BvY,KAAK,EAALA;EACF,CAAC;AACH;AACA,SAAS6Y,aAAaA,CAACC,KAAK,EAAEhY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,EAAE;EAC7C,IAAMmmB,UAAU,GAAGzN,MAAM,CAACgG,KAAK,CAACwH,KAAK,CAAC,CAAC,CAAC,EAAElmB,CAAC,CAAC;EAC5C,IAAMomB,QAAQ,GAAG1N,MAAM,CAACgG,KAAK,CAACwH,KAAK,CAAC,CAAC,CAAC,EAAElmB,CAAC,CAAC;EAC1C,IAAMmN,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACgZ,UAAU,EAAEC,QAAQ,CAAC;EAC1C,IAAM3W,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAAC0W,UAAU,EAAEC,QAAQ,CAAC;EAC1C,IAAIC,QAAQ,GAAGlZ,GAAG;EAClB,IAAImZ,MAAM,GAAG7W,GAAG;EAChB,IAAIvC,IAAI,CAAC8X,GAAG,CAAC7X,GAAG,CAAC,GAAGD,IAAI,CAAC8X,GAAG,CAACvV,GAAG,CAAC,EAAE;IACjC4W,QAAQ,GAAG5W,GAAG;IACd6W,MAAM,GAAGnZ,GAAG;EACd;EACAe,IAAI,CAACwK,MAAM,CAACe,IAAI,CAAC,GAAG6M,MAAM;EAC1BpY,IAAI,CAACqY,OAAO,GAAG;IACbF,QAAQ,EAARA,QAAQ;IACRC,MAAM,EAANA,MAAM;IACNlZ,KAAK,EAAE+Y,UAAU;IACjBzQ,GAAG,EAAE0Q,QAAQ;IACbjZ,GAAG,EAAHA,GAAG;IACHsC,GAAG,EAAHA;EACF,CAAC;AACH;AACA,SAAS+W,UAAUA,CAACN,KAAK,EAAEhY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,EAAE;EAC1C,IAAIG,OAAO,CAAC+lB,KAAK,CAAC,EAAE;IAClBD,aAAa,CAACC,KAAK,EAAEhY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,CAAC;EACvC,CAAC,MAAM;IACLkO,IAAI,CAACwK,MAAM,CAACe,IAAI,CAAC,GAAGf,MAAM,CAACgG,KAAK,CAACwH,KAAK,EAAElmB,CAAC,CAAC;EAC5C;EACA,OAAOkO,IAAI;AACb;AACA,SAASuY,qBAAqBA,CAACnP,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;EACvD,IAAMpF,MAAM,GAAGjC,IAAI,CAACiC,MAAM;EAC1B,IAAMb,MAAM,GAAGpB,IAAI,CAACoB,MAAM;EAC1B,IAAMyG,MAAM,GAAG5F,MAAM,CAAC6F,SAAS,EAAE;EACjC,IAAMC,WAAW,GAAG9F,MAAM,KAAKb,MAAM;EACrC,IAAMU,MAAM,GAAG,EAAE;EACjB,IAAIpZ,CAAC,EAAEwW,IAAI,EAAEtI,IAAI,EAAEgY,KAAK;EACxB,KAAKlmB,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACnDkmB,KAAK,GAAGhP,IAAI,CAAClX,CAAC,CAAC;IACfkO,IAAI,GAAG,CAAC,CAAC;IACTA,IAAI,CAACqL,MAAM,CAACE,IAAI,CAAC,GAAG4F,WAAW,IAAI9F,MAAM,CAACmF,KAAK,CAACS,MAAM,CAACnf,CAAC,CAAC,EAAEA,CAAC,CAAC;IAC7DoZ,MAAM,CAACpK,IAAI,CAACwX,UAAU,CAACN,KAAK,EAAEhY,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,CAAC,CAAC;EACjD;EACA,OAAOoZ,MAAM;AACf;AACA,SAASsN,UAAUA,CAACC,MAAM,EAAE;EAC1B,OAAOA,MAAM,IAAIA,MAAM,CAACN,QAAQ,KAAKpa,SAAS,IAAI0a,MAAM,CAACL,MAAM,KAAKra,SAAS;AAC/E;AAAC,IACK2a,aAAa,0BAAAC,kBAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,kBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAAA,SAAAA,cAAA;IAAAjb,eAAA,OAAAib,aAAA;IAAA,OAAAG,MAAA,CAAA5X,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAA0a,aAAA;IAAAza,GAAA;IAAAC,KAAA,EACjB,SAAA6S,mBAAmB3H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MAC3C,OAAO8H,qBAAqB,CAACnP,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;IACxD;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA2S,eAAezH,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACvC,OAAO8H,qBAAqB,CAACnP,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,CAAC;IACxD;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA4S,gBAAgB1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACxC,IAAOpF,MAAM,GAAYjC,IAAI,CAAtBiC,MAAM;QAAEb,MAAM,GAAIpB,IAAI,CAAdoB,MAAM;MACrB,IAAAuO,eAAA,GAAyC,IAAI,CAACzL,QAAQ;QAAA0L,qBAAA,GAAAD,eAAA,CAA/CvH,QAAQ;QAARA,QAAQ,GAAAwH,qBAAA,cAAG,GAAG,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,eAAA,CAAErH,QAAQ;QAARA,QAAQ,GAAAuH,qBAAA,cAAG,GAAG,GAAAA,qBAAA;MACrC,IAAMC,QAAQ,GAAG7N,MAAM,CAACE,IAAI,KAAK,GAAG,GAAGiG,QAAQ,GAAGE,QAAQ;MAC1D,IAAMyH,QAAQ,GAAG3O,MAAM,CAACe,IAAI,KAAK,GAAG,GAAGiG,QAAQ,GAAGE,QAAQ;MAC1D,IAAMxG,MAAM,GAAG,EAAE;MACjB,IAAIpZ,CAAC,EAAEwW,IAAI,EAAEtI,IAAI,EAAEoZ,GAAG;MACtB,KAAKtnB,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnDsnB,GAAG,GAAGpQ,IAAI,CAAClX,CAAC,CAAC;QACbkO,IAAI,GAAG,CAAC,CAAC;QACTA,IAAI,CAACqL,MAAM,CAACE,IAAI,CAAC,GAAGF,MAAM,CAACmF,KAAK,CAAC7d,gBAAgB,CAACymB,GAAG,EAAEF,QAAQ,CAAC,EAAEpnB,CAAC,CAAC;QACpEoZ,MAAM,CAACpK,IAAI,CAACwX,UAAU,CAAC3lB,gBAAgB,CAACymB,GAAG,EAAED,QAAQ,CAAC,EAAEnZ,IAAI,EAAEwK,MAAM,EAAE1Y,CAAC,CAAC,CAAC;MAC3E;MACA,OAAOoZ,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAA2T,sBAAsBC,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK,EAAE;MACjD4Q,IAAA,CAAAC,eAAA,CAAAZ,aAAA,CAAAtC,SAAA,kCAAA/W,IAAA,OAA4ByS,KAAK,EAAE1K,KAAK,EAAE8D,MAAM,EAAEzC,KAAK;MACvD,IAAMgQ,MAAM,GAAGvN,MAAM,CAACmN,OAAO;MAC7B,IAAII,MAAM,IAAIrR,KAAK,KAAK,IAAI,CAAC+D,WAAW,CAACX,MAAM,EAAE;QAC/CsH,KAAK,CAAC7S,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC6S,KAAK,CAAC7S,GAAG,EAAEwZ,MAAM,CAACxZ,GAAG,CAAC;QAC3C6S,KAAK,CAACvQ,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACuQ,KAAK,CAACvQ,GAAG,EAAEkX,MAAM,CAAClX,GAAG,CAAC;MAC7C;IACF;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,OAAO,CAAC;IACV;EAAC;IAAAxU,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAOE,MAAM,GAAYjC,IAAI,CAAtBiC,MAAM;QAAEb,MAAM,GAAIpB,IAAI,CAAdoB,MAAM;MACrB,IAAMU,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,IAAMkQ,MAAM,GAAGvN,MAAM,CAACmN,OAAO;MAC7B,IAAMna,KAAK,GAAGsa,UAAU,CAACC,MAAM,CAAC,GAC5B,GAAG,GAAGA,MAAM,CAACvZ,KAAK,GAAG,IAAI,GAAGuZ,MAAM,CAACjR,GAAG,GAAG,GAAG,GAC5C,EAAE,GAAGgD,MAAM,CAACoI,gBAAgB,CAAC1H,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC,CAAC;MACrD,OAAO;QACLoH,KAAK,EAAE,EAAE,GAAGtH,MAAM,CAACuH,gBAAgB,CAAC1H,MAAM,CAACG,MAAM,CAACE,IAAI,CAAC,CAAC;QACxDrN,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA6P,WAAA,EAAa;MACX,IAAM3O,EAAE,GAAG,IAAI;MACfA,EAAE,CAACwO,mBAAmB,GAAG,IAAI;MAC7ByL,IAAA,CAAAC,eAAA,CAAAZ,aAAA,CAAAtC,SAAA,uBAAA/W,IAAA;MACA,IAAM+J,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/B,IAAI,CAACX,KAAK,GAAGrJ,EAAE,CAACgP,UAAU,EAAE,CAAC3F,KAAK;IACpC;EAAC;IAAAxK,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B/L,EAAE,CAACwW,cAAc,CAACxM,IAAI,CAACJ,IAAI,EAAE,CAAC,EAAEI,IAAI,CAACJ,IAAI,CAACvJ,MAAM,EAAEmJ,IAAI,CAAC;IACzD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA0X,eAAe2D,IAAI,EAAEra,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACvC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAM4B,MAAM,GAAGpL,EAAE,CAAC+L,WAAW,CAACX,MAAM;MACpC,IAAMgP,IAAI,GAAGhP,MAAM,CAACiP,YAAY,EAAE;MAClC,IAAMC,UAAU,GAAGlP,MAAM,CAACmP,YAAY,EAAE;MACxC,IAAMxC,KAAK,GAAG/X,EAAE,CAACwa,SAAS,EAAE;MAC5B,IAAMC,SAAS,GAAGza,EAAE,CAACgU,yBAAyB,CAAClU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM2L,aAAa,GAAGnV,EAAE,CAACiV,gBAAgB,CAACwF,SAAS,CAAC;MACpD,IAAMvF,cAAc,GAAGlV,EAAE,CAACkV,cAAc,CAAC1L,IAAI,EAAE2L,aAAa,CAAC;MAC7DnV,EAAE,CAACsV,mBAAmB,CAACH,aAAa,EAAE3L,IAAI,EAAEiR,SAAS,CAAC;MACtD,KAAK,IAAI/nB,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QAC1C,IAAMoZ,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC;QAC9B,IAAMgoB,OAAO,GAAGvK,KAAK,IAAIpc,aAAa,CAAC+X,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC,CAAC,GAAG;UAACiO,IAAI,EAAJA,IAAI;UAAEO,IAAI,EAAEP;QAAI,CAAC,GAAGpa,EAAE,CAAC4a,wBAAwB,CAACloB,CAAC,CAAC;QACjH,IAAMmoB,OAAO,GAAG7a,EAAE,CAAC8a,wBAAwB,CAACpoB,CAAC,EAAEqlB,KAAK,CAAC;QACrD,IAAM1O,KAAK,GAAG,CAACyC,MAAM,CAACE,OAAO,IAAI,CAAC,CAAC,EAAEZ,MAAM,CAACe,IAAI,CAAC;QACjD,IAAMpG,UAAU,GAAG;UACjBuU,UAAU,EAAVA,UAAU;UACVF,IAAI,EAAEM,OAAO,CAACN,IAAI;UAClBW,kBAAkB,EAAE,CAAC1R,KAAK,IAAI+P,UAAU,CAACtN,MAAM,CAACmN,OAAO,CAAC,IAAKjZ,EAAE,CAACmJ,KAAK,KAAKE,KAAK,CAACiD,IAAI,IAAItM,EAAE,CAACmJ,KAAK,KAAKE,KAAK,CAACkD,OAAQ;UACnH/W,CAAC,EAAE8kB,UAAU,GAAGI,OAAO,CAACC,IAAI,GAAGE,OAAO,CAACG,MAAM;UAC7CtlB,CAAC,EAAE4kB,UAAU,GAAGO,OAAO,CAACG,MAAM,GAAGN,OAAO,CAACC,IAAI;UAC7CM,MAAM,EAAEX,UAAU,GAAGO,OAAO,CAAClT,IAAI,GAAG/H,IAAI,CAAC8X,GAAG,CAACgD,OAAO,CAAC/S,IAAI,CAAC;UAC1DuT,KAAK,EAAEZ,UAAU,GAAG1a,IAAI,CAAC8X,GAAG,CAACgD,OAAO,CAAC/S,IAAI,CAAC,GAAGkT,OAAO,CAAClT;QACvD,CAAC;QACD,IAAIuN,cAAc,EAAE;UAClBnP,UAAU,CAACmB,OAAO,GAAGiO,aAAa,IAAInV,EAAE,CAACgU,yBAAyB,CAACthB,CAAC,EAAEynB,IAAI,CAACznB,CAAC,CAAC,CAAC+R,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QACzG;QACAxJ,EAAE,CAACqV,aAAa,CAAC8E,IAAI,CAACznB,CAAC,CAAC,EAAEA,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAChD;IACF;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAqc,WAAWC,IAAI,EAAElO,SAAS,EAAE;MAC1B,IAAMlN,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAME,MAAM,GAAGjC,IAAI,CAACiC,MAAM;MAC1B,IAAMjD,QAAQ,GAAGiD,MAAM,CAACT,uBAAuB,CAACxL,EAAE,CAACiO,KAAK,CAAC;MACzD,IAAMhE,OAAO,GAAGgC,MAAM,CAAC/E,OAAO,CAAC+C,OAAO;MACtC,IAAMf,IAAI,GAAGF,QAAQ,CAAC3I,MAAM;MAC5B,IAAM0K,MAAM,GAAG,EAAE;MACjB,IAAIrY,CAAC,EAAEkO,IAAI;MACX,KAAKlO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACzBkO,IAAI,GAAGoI,QAAQ,CAACtW,CAAC,CAAC;QAClB,IAAI,CAACkO,IAAI,CAACiL,UAAU,CAAC3E,OAAO,CAACmU,OAAO,EAAE;UACpC;QACF;QACA,IAAI,OAAOnO,SAAS,KAAK,WAAW,EAAE;UACpC,IAAMoO,GAAG,GAAG1a,IAAI,CAACiL,UAAU,CAAC0G,SAAS,CAACrF,SAAS,CAAC,CAC9CtM,IAAI,CAACiL,UAAU,CAACE,WAAW,CAACX,MAAM,CAACe,IAAI,CACxC;UACD,IAAIpY,aAAa,CAACunB,GAAG,CAAC,IAAIC,KAAK,CAACD,GAAG,CAAC,EAAE;YACpC;UACF;QACF;QACA,IAAIrR,OAAO,KAAK,KAAK,IAAIc,MAAM,CAACyQ,OAAO,CAAC5a,IAAI,CAACyI,KAAK,CAAC,KAAK,CAAC,CAAC,IAC3DY,OAAO,KAAKtL,SAAS,IAAIiC,IAAI,CAACyI,KAAK,KAAK1K,SAAU,EAAE;UACjDoM,MAAM,CAACrJ,IAAI,CAACd,IAAI,CAACyI,KAAK,CAAC;QACzB;QACA,IAAIzI,IAAI,CAACuI,KAAK,KAAKiS,IAAI,EAAE;UACvB;QACF;MACF;MACA,IAAI,CAACrQ,MAAM,CAAC1K,MAAM,EAAE;QAClB0K,MAAM,CAACrJ,IAAI,CAAC/C,SAAS,CAAC;MACxB;MACA,OAAOoM,MAAM;IACf;EAAC;IAAAlM,GAAA;IAAAC,KAAA,EACD,SAAA2c,eAAetS,KAAK,EAAE;MACpB,OAAO,IAAI,CAACgS,UAAU,CAACxc,SAAS,EAAEwK,KAAK,CAAC,CAAC9I,MAAM;IACjD;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAA4c,eAAejS,YAAY,EAAE3D,IAAI,EAAEoH,SAAS,EAAE;MAC5C,IAAMnC,MAAM,GAAG,IAAI,CAACoQ,UAAU,CAAC1R,YAAY,EAAEyD,SAAS,CAAC;MACvD,IAAM/D,KAAK,GAAIrD,IAAI,KAAKnH,SAAS,GAC7BoM,MAAM,CAACyQ,OAAO,CAAC1V,IAAI,CAAC,GACpB,CAAC,CAAC;MACN,OAAQqD,KAAK,KAAK,CAAC,CAAC,GAChB4B,MAAM,CAAC1K,MAAM,GAAG,CAAC,GACjB8I,KAAK;IACX;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA0b,UAAA,EAAY;MACV,IAAMxa,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAM8C,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAME,MAAM,GAAGjC,IAAI,CAACiC,MAAM;MAC1B,IAAMsM,MAAM,GAAG,EAAE;MACjB,IAAI7lB,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGc,IAAI,CAACJ,IAAI,CAACvJ,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAClD6lB,MAAM,CAAC7W,IAAI,CAACuK,MAAM,CAAC0L,gBAAgB,CAAC3X,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC,CAACuZ,MAAM,CAACE,IAAI,CAAC,EAAEzZ,CAAC,CAAC,CAAC;MACvE;MACA,IAAMwlB,YAAY,GAAGhQ,IAAI,CAACgQ,YAAY;MACtC,IAAMrY,GAAG,GAAGqY,YAAY,IAAIZ,oBAAoB,CAACrL,MAAM,CAAC;MACxD,OAAO;QACLpM,GAAG,EAAHA,GAAG;QACH0Y,MAAM,EAANA,MAAM;QACNzY,KAAK,EAAEmM,MAAM,CAAC0P,WAAW;QACzBvT,GAAG,EAAE6D,MAAM,CAAC2P,SAAS;QACrB5D,UAAU,EAAEhY,EAAE,CAACyb,cAAc,EAAE;QAC/BzT,KAAK,EAAEiE,MAAM;QACboP,OAAO,EAAEnT,IAAI,CAACmT,OAAO;QACrBlD,KAAK,EAAED,YAAY,GAAG,CAAC,GAAGhQ,IAAI,CAACkQ,kBAAkB,GAAGlQ,IAAI,CAACmQ;MAC3D,CAAC;IACH;EAAC;IAAAxZ,GAAA;IAAAC,KAAA,EACD,SAAA8b,yBAAyBzR,KAAK,EAAE;MAC9B,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAA6b,eAAA,GAA2B7b,EAAE,CAAC+L,WAAW;QAAlCX,MAAM,GAAAyQ,eAAA,CAANzQ,MAAM;QAAEyD,QAAQ,GAAAgN,eAAA,CAARhN,QAAQ;MACvB,IAAAiN,WAAA,GAAwC9b,EAAE,CAACkH,OAAO;QAArC6U,SAAS,GAAAD,WAAA,CAAf1B,IAAI;QAAa4B,YAAY,GAAAF,WAAA,CAAZE,YAAY;MACpC,IAAMlQ,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,IAAMkQ,MAAM,GAAGvN,MAAM,CAACmN,OAAO;MAC7B,IAAMgD,QAAQ,GAAG7C,UAAU,CAACC,MAAM,CAAC;MACnC,IAAIva,KAAK,GAAGgN,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC;MAC/B,IAAIrM,KAAK,GAAG,CAAC;MACb,IAAIO,MAAM,GAAGwO,QAAQ,GAAG7O,EAAE,CAACoJ,UAAU,CAACgC,MAAM,EAAEU,MAAM,EAAE+C,QAAQ,CAAC,GAAG/P,KAAK;MACvE,IAAI6b,IAAI,EAAEhT,IAAI;MACd,IAAItH,MAAM,KAAKvB,KAAK,EAAE;QACpBgB,KAAK,GAAGO,MAAM,GAAGvB,KAAK;QACtBuB,MAAM,GAAGvB,KAAK;MAChB;MACA,IAAImd,QAAQ,EAAE;QACZnd,KAAK,GAAGua,MAAM,CAACN,QAAQ;QACvB1Y,MAAM,GAAGgZ,MAAM,CAACL,MAAM,GAAGK,MAAM,CAACN,QAAQ;QACxC,IAAIja,KAAK,KAAK,CAAC,IAAIjL,IAAI,CAACiL,KAAK,CAAC,KAAKjL,IAAI,CAACwlB,MAAM,CAACL,MAAM,CAAC,EAAE;UACtDlZ,KAAK,GAAG,CAAC;QACX;QACAA,KAAK,IAAIhB,KAAK;MAChB;MACA,IAAM+Z,UAAU,GAAG,CAAC9kB,aAAa,CAACgoB,SAAS,CAAC,IAAI,CAACE,QAAQ,GAAGF,SAAS,GAAGjc,KAAK;MAC7E,IAAIsa,IAAI,GAAGhP,MAAM,CAACuM,gBAAgB,CAACkB,UAAU,CAAC;MAC9C,IAAI,IAAI,CAAC7Z,KAAK,CAACkd,iBAAiB,CAAC/S,KAAK,CAAC,EAAE;QACvCwR,IAAI,GAAGvP,MAAM,CAACuM,gBAAgB,CAAC7X,KAAK,GAAGO,MAAM,CAAC;MAChD,CAAC,MAAM;QACLsa,IAAI,GAAGP,IAAI;MACb;MACAzS,IAAI,GAAGgT,IAAI,GAAGP,IAAI;MAClB,IAAI4B,YAAY,KAAKrd,SAAS,IAAIiB,IAAI,CAAC8X,GAAG,CAAC/P,IAAI,CAAC,GAAGqU,YAAY,EAAE;QAC/DrU,IAAI,GAAGA,IAAI,GAAG,CAAC,GAAG,CAACqU,YAAY,GAAGA,YAAY;QAC9C,IAAIld,KAAK,KAAK,CAAC,EAAE;UACfsb,IAAI,IAAIzS,IAAI,GAAG,CAAC;QAClB;QACAgT,IAAI,GAAGP,IAAI,GAAGzS,IAAI;MACpB;MACA,IAAMwU,UAAU,GAAGJ,SAAS,IAAI,CAAC;MACjC,IAAI3B,IAAI,KAAKhP,MAAM,CAACuM,gBAAgB,CAACwE,UAAU,CAAC,EAAE;QAChD,IAAMC,QAAQ,GAAGhR,MAAM,CAACiR,oBAAoB,CAACF,UAAU,CAAC,GAAG,CAAC;QAC5D,IAAIxU,IAAI,GAAG,CAAC,EAAE;UACZyS,IAAI,IAAIgC,QAAQ;UAChBzU,IAAI,IAAIyU,QAAQ;QAClB,CAAC,MAAM,IAAIzU,IAAI,GAAG,CAAC,EAAE;UACnByS,IAAI,IAAIgC,QAAQ;UAChBzU,IAAI,IAAIyU,QAAQ;QAClB;MACF;MACA,OAAO;QACLzU,IAAI,EAAJA,IAAI;QACJyS,IAAI,EAAJA,IAAI;QACJO,IAAI,EAAJA,IAAI;QACJK,MAAM,EAAEL,IAAI,GAAGhT,IAAI,GAAG;MACxB,CAAC;IACH;EAAC;IAAA9I,GAAA;IAAAC,KAAA,EACD,SAAAgc,yBAAyB3R,KAAK,EAAE4O,KAAK,EAAE;MACrC,IAAM/X,EAAE,GAAG,IAAI;MACf,IAAMgI,KAAK,GAAG+P,KAAK,CAAC/P,KAAK;MACzB,IAAMd,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMoV,QAAQ,GAAGpV,OAAO,CAACoV,QAAQ;MACjC,IAAMC,eAAe,GAAGtpB,cAAc,CAACiU,OAAO,CAACqV,eAAe,EAAEC,QAAQ,CAAC;MACzE,IAAIxB,MAAM,EAAErT,IAAI;MAChB,IAAIoQ,KAAK,CAACsD,OAAO,EAAE;QACjB,IAAMrD,UAAU,GAAGsE,QAAQ,GAAGtc,EAAE,CAACyb,cAAc,CAACtS,KAAK,CAAC,GAAG4O,KAAK,CAACC,UAAU;QACzE,IAAMtF,KAAK,GAAGxL,OAAO,CAACgR,YAAY,KAAK,MAAM,GACzCM,yBAAyB,CAACrP,KAAK,EAAE4O,KAAK,EAAE7Q,OAAO,EAAE8Q,UAAU,CAAC,GAC5DF,wBAAwB,CAAC3O,KAAK,EAAE4O,KAAK,EAAE7Q,OAAO,EAAE8Q,UAAU,CAAC;QAC/D,IAAMyE,UAAU,GAAGzc,EAAE,CAAC0b,cAAc,CAAC1b,EAAE,CAACmJ,KAAK,EAAEnJ,EAAE,CAAC+L,WAAW,CAAC1C,KAAK,EAAEiT,QAAQ,GAAGnT,KAAK,GAAGxK,SAAS,CAAC;QAClGqc,MAAM,GAAGtI,KAAK,CAAC5S,KAAK,GAAI4S,KAAK,CAAC4F,KAAK,GAAGmE,UAAW,GAAI/J,KAAK,CAAC4F,KAAK,GAAG,CAAE;QACrE3Q,IAAI,GAAG/H,IAAI,CAACC,GAAG,CAAC0c,eAAe,EAAE7J,KAAK,CAAC4F,KAAK,GAAG5F,KAAK,CAACyF,KAAK,CAAC;MAC7D,CAAC,MAAM;QACL6C,MAAM,GAAGhT,KAAK,CAAC2P,gBAAgB,CAAC3X,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC,CAACnB,KAAK,CAACmE,IAAI,CAAC,EAAEhD,KAAK,CAAC;QACvExB,IAAI,GAAG/H,IAAI,CAACC,GAAG,CAAC0c,eAAe,EAAExE,KAAK,CAAClY,GAAG,GAAGkY,KAAK,CAACI,KAAK,CAAC;MAC3D;MACA,OAAO;QACLiC,IAAI,EAAEY,MAAM,GAAGrT,IAAI,GAAG,CAAC;QACvBgT,IAAI,EAAEK,MAAM,GAAGrT,IAAI,GAAG,CAAC;QACvBqT,MAAM,EAANA,MAAM;QACNrT,IAAI,EAAJA;MACF,CAAC;IACH;EAAC;IAAA9I,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMX,MAAM,GAAGpB,IAAI,CAACoB,MAAM;MAC1B,IAAMsR,KAAK,GAAG1S,IAAI,CAACJ,IAAI;MACvB,IAAMV,IAAI,GAAGwT,KAAK,CAACrc,MAAM;MACzB,IAAI3N,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACpB,IAAIsN,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC,CAAC0Y,MAAM,CAACe,IAAI,CAAC,KAAK,IAAI,EAAE;UACzCuQ,KAAK,CAAChqB,CAAC,CAAC,CAACiO,IAAI,CAACX,EAAE,CAAC6N,IAAI,CAAC;QACxB;MACF;IACF;EAAC;EAAA,OAAAyL,aAAA;AAAA,EA9PyB1L,iBAAiB;AAgQ7C0L,aAAa,CAAChP,EAAE,GAAG,KAAK;AACxBgP,aAAa,CAACvmB,QAAQ,GAAG;EACvBwd,kBAAkB,EAAE,KAAK;EACzB4D,eAAe,EAAE,KAAK;EACtBiE,kBAAkB,EAAE,GAAG;EACvBC,aAAa,EAAE,GAAG;EAClBgD,OAAO,EAAE,IAAI;EACbnV,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;IAClD;EACF;AACF,CAAC;AACDuT,aAAa,CAAC3gB,SAAS,GAAG;EACxBgkB,WAAW,EAAE;IACXnT,IAAI,EAAE;EACR,CAAC;EACDiD,MAAM,EAAE;IACNmQ,OAAO,EAAE;MACPzd,IAAI,EAAE,UAAU;MAChB0d,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE;QACJD,MAAM,EAAE;MACV;IACF,CAAC;IACDE,OAAO,EAAE;MACP5d,IAAI,EAAE,QAAQ;MACd6d,WAAW,EAAE;IACf;EACF;AACF,CAAC;AAAC,IAEIC,gBAAgB,0BAAAC,mBAAA;EAAA1D,SAAA,CAAAyD,gBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAzD,YAAA,CAAAuD,gBAAA;EAAA,SAAAA,iBAAA;IAAA5e,eAAA,OAAA4e,gBAAA;IAAA,OAAAE,OAAA,CAAAtb,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAqe,gBAAA;IAAApe,GAAA;IAAAC,KAAA,EACpB,SAAA6P,WAAA,EAAa;MACX,IAAI,CAACH,mBAAmB,GAAG,IAAI;MAC/ByL,IAAA,CAAAC,eAAA,CAAA+C,gBAAA,CAAAjG,SAAA,uBAAA/W,IAAA;IACF;EAAC;IAAApB,GAAA;IAAAC,KAAA,EACD,SAAA4S,gBAAgB1H,IAAI,EAAEJ,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAE;MACxC,IAAO/I,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAA6U,eAAA,GAAyC,IAAI,CAAClP,QAAQ;QAAAmP,qBAAA,GAAAD,eAAA,CAA/ChL,QAAQ;QAARA,QAAQ,GAAAiL,qBAAA,cAAG,GAAG,GAAAA,qBAAA;QAAAC,qBAAA,GAAAF,eAAA,CAAE9K,QAAQ;QAARA,QAAQ,GAAAgL,qBAAA,cAAG,GAAG,GAAAA,qBAAA;MACrC,IAAMxR,MAAM,GAAG,EAAE;MACjB,IAAIpZ,CAAC,EAAEwW,IAAI,EAAEtI,IAAI;MACjB,KAAKlO,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnDkO,IAAI,GAAGgJ,IAAI,CAAClX,CAAC,CAAC;QACdoZ,MAAM,CAACpK,IAAI,CAAC;UACVlM,CAAC,EAAE8S,MAAM,CAAC8I,KAAK,CAAC7d,gBAAgB,CAACqN,IAAI,EAAEwR,QAAQ,CAAC,EAAE1f,CAAC,CAAC;UACpDgD,CAAC,EAAE6S,MAAM,CAAC6I,KAAK,CAAC7d,gBAAgB,CAACqN,IAAI,EAAE0R,QAAQ,CAAC,EAAE5f,CAAC,CAAC;UACpDumB,OAAO,EAAErY,IAAI,IAAIA,IAAI,CAAC1O,CAAC,IAAI,CAAC0O,IAAI,CAAC1O;QACnC,CAAC,CAAC;MACJ;MACA,OAAO4Z,MAAM;IACf;EAAC;IAAAjN,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,IAAAkK,iBAAA,GAAwB,IAAI,CAACxR,WAAW;QAAjCnC,IAAI,GAAA2T,iBAAA,CAAJ3T,IAAI;QAAEyD,OAAO,GAAAkQ,iBAAA,CAAPlQ,OAAO;MACpB,IAAIlL,GAAG,GAAG,CAAC;MACX,KAAK,IAAIzP,CAAC,GAAGkX,IAAI,CAACvJ,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QACzCyP,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAEyH,IAAI,CAAClX,CAAC,CAAC,CAACiV,IAAI,EAAE,GAAG,CAAC,EAAE0F,OAAO,CAAC3a,CAAC,CAAC,CAACumB,OAAO,CAAC;MAC7D;MACA,OAAO9W,GAAG,GAAG,CAAC,IAAIA,GAAG;IACvB;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAOzD,MAAM,GAAY0B,IAAI,CAAtB1B,MAAM;QAAEC,MAAM,GAAIyB,IAAI,CAAdzB,MAAM;MACrB,IAAMuD,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,IAAM3T,CAAC,GAAG8S,MAAM,CAACkL,gBAAgB,CAAC1H,MAAM,CAACtW,CAAC,CAAC;MAC3C,IAAME,CAAC,GAAG6S,MAAM,CAACiL,gBAAgB,CAAC1H,MAAM,CAACpW,CAAC,CAAC;MAC3C,IAAMxD,CAAC,GAAG4Z,MAAM,CAACmN,OAAO;MACxB,OAAO;QACL1F,KAAK,EAAEvJ,IAAI,CAACuJ,KAAK;QACjBzU,KAAK,EAAE,GAAG,GAAGtJ,CAAC,GAAG,IAAI,GAAGE,CAAC,IAAIxD,CAAC,GAAG,IAAI,GAAGA,CAAC,GAAG,EAAE,CAAC,GAAG;MACpD,CAAC;IACH;EAAC;IAAA2M,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMwd,MAAM,GAAGxd,EAAE,CAAC+L,WAAW,CAACnC,IAAI;MAClC5J,EAAE,CAACwW,cAAc,CAACgH,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACnd,MAAM,EAAEmJ,IAAI,CAAC;IACnD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA0X,eAAegH,MAAM,EAAE1d,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACzC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAAiU,gBAAA,GAAyBzd,EAAE,CAAC+L,WAAW;QAAhCE,MAAM,GAAAwR,gBAAA,CAANxR,MAAM;QAAEb,MAAM,GAAAqS,gBAAA,CAANrS,MAAM;MACrB,IAAMqP,SAAS,GAAGza,EAAE,CAACgU,yBAAyB,CAAClU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM2L,aAAa,GAAGnV,EAAE,CAACiV,gBAAgB,CAACwF,SAAS,CAAC;MACpD,IAAMvF,cAAc,GAAGlV,EAAE,CAACkV,cAAc,CAAC1L,IAAI,EAAE2L,aAAa,CAAC;MAC7D,IAAMjJ,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;MACzB,KAAK,IAAIzZ,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QAC1C,IAAMgrB,KAAK,GAAGF,MAAM,CAAC9qB,CAAC,CAAC;QACvB,IAAMoZ,MAAM,GAAG,CAACqE,KAAK,IAAInQ,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC;QACxC,IAAMqT,UAAU,GAAG,CAAC,CAAC;QACrB,IAAM4X,MAAM,GAAG5X,UAAU,CAACmG,KAAK,CAAC,GAAGiE,KAAK,GAAGlE,MAAM,CAAC2R,kBAAkB,CAAC,GAAG,CAAC,GAAG3R,MAAM,CAAC0L,gBAAgB,CAAC7L,MAAM,CAACI,KAAK,CAAC,CAAC;QAClH,IAAM2R,MAAM,GAAG9X,UAAU,CAACqG,KAAK,CAAC,GAAG+D,KAAK,GAAG/E,MAAM,CAACiP,YAAY,EAAE,GAAGjP,MAAM,CAACuM,gBAAgB,CAAC7L,MAAM,CAACM,KAAK,CAAC,CAAC;QACzGrG,UAAU,CAAC+X,IAAI,GAAGvC,KAAK,CAACoC,MAAM,CAAC,IAAIpC,KAAK,CAACsC,MAAM,CAAC;QAChD,IAAI3I,cAAc,EAAE;UAClBnP,UAAU,CAACmB,OAAO,GAAGlH,EAAE,CAACgU,yBAAyB,CAACthB,CAAC,EAAEgrB,KAAK,CAACjZ,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;UACpF,IAAI2G,KAAK,EAAE;YACTpK,UAAU,CAACmB,OAAO,CAAC6W,MAAM,GAAG,CAAC;UAC/B;QACF;QACA/d,EAAE,CAACqV,aAAa,CAACqI,KAAK,EAAEhrB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC9C;MACAxJ,EAAE,CAACsV,mBAAmB,CAACH,aAAa,EAAE3L,IAAI,EAAEiR,SAAS,CAAC;IACxD;EAAC;IAAA5b,GAAA;IAAAC,KAAA,EACD,SAAAkV,0BAA0B7K,KAAK,EAAEK,IAAI,EAAE;MACrC,IAAMsC,MAAM,GAAG,IAAI,CAACyG,SAAS,CAACpJ,KAAK,CAAC;MACpC,IAAInC,MAAM,GAAAiT,IAAA,CAAAC,eAAA,CAAA+C,gBAAA,CAAAjG,SAAA,sCAAA/W,IAAA,OAAmCkJ,KAAK,EAAEK,IAAI,CAAC;MACzD,IAAIxC,MAAM,CAACK,OAAO,EAAE;QAClBL,MAAM,GAAGzB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEZ,MAAM,EAAE;UAACK,OAAO,EAAE;QAAK,CAAC,CAAC;MACtD;MACA,IAAM0W,MAAM,GAAG/W,MAAM,CAAC+W,MAAM;MAC5B,IAAIvU,IAAI,KAAK,QAAQ,EAAE;QACrBxC,MAAM,CAAC+W,MAAM,GAAG,CAAC;MACnB;MACA/W,MAAM,CAAC+W,MAAM,IAAI9qB,cAAc,CAAC6Y,MAAM,IAAIA,MAAM,CAACmN,OAAO,EAAE8E,MAAM,CAAC;MACjE,OAAO/W,MAAM;IACf;EAAC;EAAA,OAAAiW,gBAAA;AAAA,EApF4BrP,iBAAiB;AAsFhDqP,gBAAgB,CAAC3S,EAAE,GAAG,QAAQ;AAC9B2S,gBAAgB,CAAClqB,QAAQ,GAAG;EAC1Bwd,kBAAkB,EAAE,KAAK;EACzB4D,eAAe,EAAE,OAAO;EACxBjO,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,aAAa,EAAE,QAAQ;IAChD;EACF;AACF,CAAC;AACDkX,gBAAgB,CAACtkB,SAAS,GAAG;EAC3B8T,MAAM,EAAE;IACNjX,CAAC,EAAE;MACD2J,IAAI,EAAE;IACR,CAAC;IACDzJ,CAAC,EAAE;MACDyJ,IAAI,EAAE;IACR;EACF,CAAC;EACD6e,OAAO,EAAE;IACPC,OAAO,EAAE;MACP7e,SAAS,EAAE;QACT8e,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX;MACF;IACF;EACF;AACF,CAAC;AAED,SAASC,iBAAiBA,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAE;EAC1D,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIL,aAAa,GAAG5pB,GAAG,EAAE;IACvB,IAAMkqB,UAAU,GAAGP,QAAQ;IAC3B,IAAMQ,QAAQ,GAAGD,UAAU,GAAGN,aAAa;IAC3C,IAAMQ,MAAM,GAAGjf,IAAI,CAACkf,GAAG,CAACH,UAAU,CAAC;IACnC,IAAMI,MAAM,GAAGnf,IAAI,CAACof,GAAG,CAACL,UAAU,CAAC;IACnC,IAAMM,IAAI,GAAGrf,IAAI,CAACkf,GAAG,CAACF,QAAQ,CAAC;IAC/B,IAAMM,IAAI,GAAGtf,IAAI,CAACof,GAAG,CAACJ,QAAQ,CAAC;IAC/B,IAAMO,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAEhtB,CAAC,EAAEQ,CAAC;MAAA,OAAKiC,aAAa,CAACuqB,KAAK,EAAET,UAAU,EAAEC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,GAAGhf,IAAI,CAACuC,GAAG,CAAC/P,CAAC,EAAEA,CAAC,GAAGksB,MAAM,EAAE1rB,CAAC,EAAEA,CAAC,GAAG0rB,MAAM,CAAC;IAAA;IAC9H,IAAMe,OAAO,GAAG,SAAVA,OAAOA,CAAID,KAAK,EAAEhtB,CAAC,EAAEQ,CAAC;MAAA,OAAKiC,aAAa,CAACuqB,KAAK,EAAET,UAAU,EAAEC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAGhf,IAAI,CAACC,GAAG,CAACzN,CAAC,EAAEA,CAAC,GAAGksB,MAAM,EAAE1rB,CAAC,EAAEA,CAAC,GAAG0rB,MAAM,CAAC;IAAA;IAC/H,IAAMgB,IAAI,GAAGH,OAAO,CAAC,CAAC,EAAEN,MAAM,EAAEI,IAAI,CAAC;IACrC,IAAMM,IAAI,GAAGJ,OAAO,CAACpqB,OAAO,EAAEgqB,MAAM,EAAEG,IAAI,CAAC;IAC3C,IAAMM,IAAI,GAAGH,OAAO,CAACpqB,EAAE,EAAE4pB,MAAM,EAAEI,IAAI,CAAC;IACtC,IAAMQ,IAAI,GAAGJ,OAAO,CAACpqB,EAAE,GAAGF,OAAO,EAAEgqB,MAAM,EAAEG,IAAI,CAAC;IAChDX,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,MAAM,GAAG,CAACe,IAAI,GAAGE,IAAI,IAAI,CAAC;IAC1BhB,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;IAC5Bd,OAAO,GAAG,EAAEa,IAAI,GAAGE,IAAI,CAAC,GAAG,CAAC;EAC9B;EACA,OAAO;IAAClB,MAAM,EAANA,MAAM;IAAEC,MAAM,EAANA,MAAM;IAAEC,OAAO,EAAPA,OAAO;IAAEC,OAAO,EAAPA;EAAO,CAAC;AAC3C;AAAC,IACKgB,kBAAkB,0BAAAC,mBAAA;EAAAnG,SAAA,CAAAkG,kBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAlG,YAAA,CAAAgG,kBAAA;EACtB,SAAAA,mBAAY1gB,KAAK,EAAEyK,YAAY,EAAE;IAAA,IAAAoW,KAAA;IAAAxhB,eAAA,OAAAqhB,kBAAA;IAC/BG,KAAA,GAAAD,OAAA,CAAA3f,IAAA,OAAMjB,KAAK,EAAEyK,YAAY;IACzBoW,KAAA,CAAKrR,mBAAmB,GAAG,IAAI;IAC/BqR,KAAA,CAAKC,WAAW,GAAGnhB,SAAS;IAC5BkhB,KAAA,CAAKE,WAAW,GAAGphB,SAAS;IAC5BkhB,KAAA,CAAKpB,OAAO,GAAG9f,SAAS;IACxBkhB,KAAA,CAAKnB,OAAO,GAAG/f,SAAS;IAAC,OAAAkhB,KAAA;EAC3B;EAACjhB,YAAA,CAAA8gB,kBAAA;IAAA7gB,GAAA;IAAAC,KAAA,EACD,SAAA8P,WAAA,EAAa,CAAC;EAAC;IAAA/P,GAAA;IAAAC,KAAA,EACf,SAAAsS,MAAMtR,KAAK,EAAEuR,KAAK,EAAE;MAClB,IAAMzH,IAAI,GAAG,IAAI,CAACoF,UAAU,EAAE,CAACpF,IAAI;MACnC,IAAMI,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAIrZ,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAGoN,KAAK,EAAEoJ,IAAI,GAAGpJ,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnDsX,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC,GAAG,CAACkX,IAAI,CAAClX,CAAC,CAAC;MAC5B;IACF;EAAC;IAAAmM,GAAA;IAAAC,KAAA,EACD,SAAAkhB,aAAA,EAAe;MACb,OAAO7rB,SAAS,CAAC,IAAI,CAAC+S,OAAO,CAACkX,QAAQ,GAAG,EAAE,CAAC;IAC9C;EAAC;IAAAvf,GAAA;IAAAC,KAAA,EACD,SAAAmhB,kBAAA,EAAoB;MAClB,OAAO9rB,SAAS,CAAC,IAAI,CAAC+S,OAAO,CAACmX,aAAa,CAAC;IAC9C;EAAC;IAAAxf,GAAA;IAAAC,KAAA,EACD,SAAAohB,oBAAA,EAAsB;MACpB,IAAIrgB,GAAG,GAAGpL,GAAG;MACb,IAAI0N,GAAG,GAAG,CAAC1N,GAAG;MACd,IAAMuL,EAAE,GAAG,IAAI;MACf,KAAK,IAAItN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsN,EAAE,CAAChB,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE,EAAE3N,CAAC,EAAE;QACtD,IAAIsN,EAAE,CAAChB,KAAK,CAACmhB,gBAAgB,CAACztB,CAAC,CAAC,EAAE;UAChC,IAAMmZ,UAAU,GAAG7L,EAAE,CAAChB,KAAK,CAACgR,cAAc,CAACtd,CAAC,CAAC,CAACmZ,UAAU;UACxD,IAAMuS,QAAQ,GAAGvS,UAAU,CAACmU,YAAY,EAAE;UAC1C,IAAM3B,aAAa,GAAGxS,UAAU,CAACoU,iBAAiB,EAAE;UACpDpgB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEue,QAAQ,CAAC;UAC7Bjc,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAEic,QAAQ,GAAGC,aAAa,CAAC;QAC/C;MACF;MACA,OAAO;QACLD,QAAQ,EAAEve,GAAG;QACbwe,aAAa,EAAElc,GAAG,GAAGtC;MACvB,CAAC;IACH;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAO6U,SAAS,GAAI7U,KAAK,CAAlB6U,SAAS;MAChB,IAAM7J,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMqU,IAAI,GAAGpW,IAAI,CAACJ,IAAI;MACtB,IAAMyW,OAAO,GAAGrgB,EAAE,CAACsgB,iBAAiB,EAAE,GAAGtgB,EAAE,CAACugB,YAAY,CAACH,IAAI,CAAC,GAAGpgB,EAAE,CAACkH,OAAO,CAACmZ,OAAO;MACnF,IAAMG,OAAO,GAAG5gB,IAAI,CAACuC,GAAG,CAAC,CAACvC,IAAI,CAACC,GAAG,CAACgU,SAAS,CAACqH,KAAK,EAAErH,SAAS,CAACoH,MAAM,CAAC,GAAGoF,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;MACxF,IAAM/B,MAAM,GAAG1e,IAAI,CAACC,GAAG,CAACxL,YAAY,CAAC2L,EAAE,CAACkH,OAAO,CAACoX,MAAM,EAAEkC,OAAO,CAAC,EAAE,CAAC,CAAC;MACpE,IAAMC,WAAW,GAAGzgB,EAAE,CAAC0gB,cAAc,CAAC1gB,EAAE,CAACmJ,KAAK,CAAC;MAC/C,IAAAwX,qBAAA,GAAkC3gB,EAAE,CAACkgB,mBAAmB,EAAE;QAAnD7B,aAAa,GAAAsC,qBAAA,CAAbtC,aAAa;QAAED,QAAQ,GAAAuC,qBAAA,CAARvC,QAAQ;MAC9B,IAAAwC,kBAAA,GAA2CzC,iBAAiB,CAACC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,CAAC;QAAtFC,MAAM,GAAAqC,kBAAA,CAANrC,MAAM;QAAEC,MAAM,GAAAoC,kBAAA,CAANpC,MAAM;QAAEC,OAAO,GAAAmC,kBAAA,CAAPnC,OAAO;QAAEC,OAAO,GAAAkC,kBAAA,CAAPlC,OAAO;MACvC,IAAMmC,QAAQ,GAAG,CAAChN,SAAS,CAACqH,KAAK,GAAGmF,OAAO,IAAI9B,MAAM;MACrD,IAAMuC,SAAS,GAAG,CAACjN,SAAS,CAACoH,MAAM,GAAGoF,OAAO,IAAI7B,MAAM;MACvD,IAAMuC,SAAS,GAAGnhB,IAAI,CAACuC,GAAG,CAACvC,IAAI,CAACC,GAAG,CAACghB,QAAQ,EAAEC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;MAChE,IAAMf,WAAW,GAAGxrB,WAAW,CAACyL,EAAE,CAACkH,OAAO,CAAC6W,MAAM,EAAEgD,SAAS,CAAC;MAC7D,IAAMjB,WAAW,GAAGlgB,IAAI,CAACuC,GAAG,CAAC4d,WAAW,GAAGzB,MAAM,EAAE,CAAC,CAAC;MACrD,IAAM0C,YAAY,GAAG,CAACjB,WAAW,GAAGD,WAAW,IAAI9f,EAAE,CAACihB,6BAA6B,EAAE;MACrFjhB,EAAE,CAACye,OAAO,GAAGA,OAAO,GAAGsB,WAAW;MAClC/f,EAAE,CAAC0e,OAAO,GAAGA,OAAO,GAAGqB,WAAW;MAClC/V,IAAI,CAACkX,KAAK,GAAGlhB,EAAE,CAACmhB,cAAc,EAAE;MAChCnhB,EAAE,CAAC+f,WAAW,GAAGA,WAAW,GAAGiB,YAAY,GAAGhhB,EAAE,CAACohB,oBAAoB,CAACphB,EAAE,CAACmJ,KAAK,CAAC;MAC/EnJ,EAAE,CAAC8f,WAAW,GAAGlgB,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAAC+f,WAAW,GAAGiB,YAAY,GAAGP,WAAW,EAAE,CAAC,CAAC;MACzEzgB,EAAE,CAACwW,cAAc,CAAC4J,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC/f,MAAM,EAAEmJ,IAAI,CAAC;IAC/C;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAuiB,eAAe3uB,CAAC,EAAEyd,KAAK,EAAE;MACvB,IAAMnQ,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAM8C,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMsS,aAAa,GAAGre,EAAE,CAACigB,iBAAiB,EAAE;MAC5C,IAAK9P,KAAK,IAAIjI,IAAI,CAACzC,SAAS,CAAC6b,aAAa,IAAK,CAAC,IAAI,CAACtiB,KAAK,CAACkd,iBAAiB,CAACxpB,CAAC,CAAC,IAAIsX,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC,KAAK,IAAI,EAAE;QAC3G,OAAO,CAAC;MACV;MACA,OAAOsN,EAAE,CAACuhB,sBAAsB,CAACvX,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC,GAAG2rB,aAAa,GAAG5pB,GAAG,CAAC;IACzE;EAAC;IAAAoK,GAAA;IAAAC,KAAA,EACD,SAAA0X,eAAe4J,IAAI,EAAEtgB,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACvC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAMxK,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6U,SAAS,GAAG7U,KAAK,CAAC6U,SAAS;MACjC,IAAM3L,IAAI,GAAGlJ,KAAK,CAACkI,OAAO;MAC1B,IAAMsa,aAAa,GAAGtZ,IAAI,CAACzC,SAAS;MACpC,IAAMgc,OAAO,GAAG,CAAC5N,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACpL,KAAK,IAAI,CAAC;MACtD,IAAMiZ,OAAO,GAAG,CAAC7N,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACnL,MAAM,IAAI,CAAC;MACtD,IAAMiZ,YAAY,GAAGxR,KAAK,IAAIqR,aAAa,CAACG,YAAY;MACxD,IAAM7B,WAAW,GAAG6B,YAAY,GAAG,CAAC,GAAG3hB,EAAE,CAAC8f,WAAW;MACrD,IAAMC,WAAW,GAAG4B,YAAY,GAAG,CAAC,GAAG3hB,EAAE,CAAC+f,WAAW;MACrD,IAAMtF,SAAS,GAAGza,EAAE,CAACgU,yBAAyB,CAAClU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM2L,aAAa,GAAGnV,EAAE,CAACiV,gBAAgB,CAACwF,SAAS,CAAC;MACpD,IAAMvF,cAAc,GAAGlV,EAAE,CAACkV,cAAc,CAAC1L,IAAI,EAAE2L,aAAa,CAAC;MAC7D,IAAIwJ,UAAU,GAAG3e,EAAE,CAACggB,YAAY,EAAE;MAClC,IAAIttB,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoN,KAAK,EAAE,EAAEpN,CAAC,EAAE;QAC1BisB,UAAU,IAAI3e,EAAE,CAACqhB,cAAc,CAAC3uB,CAAC,EAAEyd,KAAK,CAAC;MAC3C;MACA,KAAKzd,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;QACtC,IAAM2rB,aAAa,GAAGre,EAAE,CAACqhB,cAAc,CAAC3uB,CAAC,EAAEyd,KAAK,CAAC;QACjD,IAAMyR,GAAG,GAAGxB,IAAI,CAAC1tB,CAAC,CAAC;QACnB,IAAMqT,UAAU,GAAG;UACjBvQ,CAAC,EAAEisB,OAAO,GAAGzhB,EAAE,CAACye,OAAO;UACvB/oB,CAAC,EAAEgsB,OAAO,GAAG1hB,EAAE,CAAC0e,OAAO;UACvBC,UAAU,EAAVA,UAAU;UACVC,QAAQ,EAAED,UAAU,GAAGN,aAAa;UACpCA,aAAa,EAAbA,aAAa;UACb0B,WAAW,EAAXA,WAAW;UACXD,WAAW,EAAXA;QACF,CAAC;QACD,IAAI5K,cAAc,EAAE;UAClBnP,UAAU,CAACmB,OAAO,GAAGiO,aAAa,IAAInV,EAAE,CAACgU,yBAAyB,CAACthB,CAAC,EAAEkvB,GAAG,CAACnd,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QACrG;QACAmV,UAAU,IAAIN,aAAa;QAC3Bre,EAAE,CAACqV,aAAa,CAACuM,GAAG,EAAElvB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC5C;MACAxJ,EAAE,CAACsV,mBAAmB,CAACH,aAAa,EAAE3L,IAAI,EAAEiR,SAAS,CAAC;IACxD;EAAC;IAAA5b,GAAA;IAAAC,KAAA,EACD,SAAAqiB,eAAA,EAAiB;MACf,IAAMnX,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAM8V,QAAQ,GAAG7X,IAAI,CAACJ,IAAI;MAC1B,IAAIsX,KAAK,GAAG,CAAC;MACb,IAAIxuB,CAAC;MACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmvB,QAAQ,CAACxhB,MAAM,EAAE3N,CAAC,EAAE,EAAE;QACpC,IAAMoM,KAAK,GAAGkL,IAAI,CAACqD,OAAO,CAAC3a,CAAC,CAAC;QAC7B,IAAIoM,KAAK,KAAK,IAAI,IAAI,CAACyc,KAAK,CAACzc,KAAK,CAAC,IAAI,IAAI,CAACE,KAAK,CAACkd,iBAAiB,CAACxpB,CAAC,CAAC,EAAE;UACtEwuB,KAAK,IAAIthB,IAAI,CAAC8X,GAAG,CAAC5Y,KAAK,CAAC;QAC1B;MACF;MACA,OAAOoiB,KAAK;IACd;EAAC;IAAAriB,GAAA;IAAAC,KAAA,EACD,SAAAyiB,uBAAuBziB,KAAK,EAAE;MAC5B,IAAMoiB,KAAK,GAAG,IAAI,CAACnV,WAAW,CAACmV,KAAK;MACpC,IAAIA,KAAK,GAAG,CAAC,IAAI,CAAC3F,KAAK,CAACzc,KAAK,CAAC,EAAE;QAC9B,OAAOrK,GAAG,IAAImL,IAAI,CAAC8X,GAAG,CAAC5Y,KAAK,CAAC,GAAGoiB,KAAK,CAAC;MACxC;MACA,OAAO,CAAC;IACV;EAAC;IAAAriB,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM/M,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6S,MAAM,GAAG7S,KAAK,CAAC4K,IAAI,CAACiI,MAAM,IAAI,EAAE;MACtC,IAAM/S,KAAK,GAAGnK,YAAY,CAACqV,IAAI,CAACqD,OAAO,CAAClE,KAAK,CAAC,EAAEnK,KAAK,CAACkI,OAAO,CAAC4a,MAAM,CAAC;MACrE,OAAO;QACLvO,KAAK,EAAE1B,MAAM,CAAC1I,KAAK,CAAC,IAAI,EAAE;QAC1BrK,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAwhB,kBAAkBF,IAAI,EAAE;MACtB,IAAMpgB,EAAE,GAAG,IAAI;MACf,IAAImC,GAAG,GAAG,CAAC;MACX,IAAMnD,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAItM,CAAC,EAAEwW,IAAI,EAAEc,IAAI,EAAE6B,UAAU,EAAE3E,OAAO;MACtC,IAAI,CAACkZ,IAAI,EAAE;QACT,KAAK1tB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlK,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;UAC5D,IAAIsM,KAAK,CAACmhB,gBAAgB,CAACztB,CAAC,CAAC,EAAE;YAC7BsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAACtd,CAAC,CAAC;YAC9B0tB,IAAI,GAAGpW,IAAI,CAACJ,IAAI;YAChBiC,UAAU,GAAG7B,IAAI,CAAC6B,UAAU;YAC5B,IAAIA,UAAU,KAAK7L,EAAE,EAAE;cACrB6L,UAAU,CAACpF,SAAS,EAAE;YACxB;YACA;UACF;QACF;MACF;MACA,IAAI,CAAC2Z,IAAI,EAAE;QACT,OAAO,CAAC;MACV;MACA,KAAK1tB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkX,IAAI,CAAC/f,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC7CwU,OAAO,GAAG2E,UAAU,CAACmI,yBAAyB,CAACthB,CAAC,CAAC;QACjD,IAAIwU,OAAO,CAAC6a,WAAW,KAAK,OAAO,EAAE;UACnC5f,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAE+E,OAAO,CAAC8a,WAAW,IAAI,CAAC,EAAE9a,OAAO,CAAC+a,gBAAgB,IAAI,CAAC,CAAC;QAC9E;MACF;MACA,OAAO9f,GAAG;IACZ;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAyhB,aAAaH,IAAI,EAAE;MACjB,IAAIje,GAAG,GAAG,CAAC;MACX,KAAK,IAAIzP,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkX,IAAI,CAAC/f,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACjD,IAAMwU,OAAO,GAAG,IAAI,CAAC8M,yBAAyB,CAACthB,CAAC,CAAC;QACjDyP,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAE+E,OAAO,CAAC2V,MAAM,IAAI,CAAC,EAAE3V,OAAO,CAACgb,WAAW,IAAI,CAAC,CAAC;MACpE;MACA,OAAO/f,GAAG;IACZ;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAsiB,qBAAqB3X,YAAY,EAAE;MACjC,IAAI0Y,gBAAgB,GAAG,CAAC;MACxB,KAAK,IAAIzvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+W,YAAY,EAAE,EAAE/W,CAAC,EAAE;QACrC,IAAI,IAAI,CAACsM,KAAK,CAACmhB,gBAAgB,CAACztB,CAAC,CAAC,EAAE;UAClCyvB,gBAAgB,IAAI,IAAI,CAACzB,cAAc,CAAChuB,CAAC,CAAC;QAC5C;MACF;MACA,OAAOyvB,gBAAgB;IACzB;EAAC;IAAAtjB,GAAA;IAAAC,KAAA,EACD,SAAA4hB,eAAejX,YAAY,EAAE;MAC3B,OAAO7J,IAAI,CAACuC,GAAG,CAAClP,cAAc,CAAC,IAAI,CAAC+L,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC,CAAC2Y,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtF;EAAC;IAAAvjB,GAAA;IAAAC,KAAA,EACD,SAAAmiB,8BAAA,EAAgC;MAC9B,OAAO,IAAI,CAACG,oBAAoB,CAAC,IAAI,CAACpiB,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,CAAC,IAAI,CAAC;IACxE;EAAC;EAAA,OAAAqf,kBAAA;AAAA,EAvM8B9R,iBAAiB;AAyMlD8R,kBAAkB,CAACpV,EAAE,GAAG,UAAU;AAClCoV,kBAAkB,CAAC3sB,QAAQ,GAAG;EAC5Bwd,kBAAkB,EAAE,KAAK;EACzB4D,eAAe,EAAE,KAAK;EACtB1O,SAAS,EAAE;IACT6b,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDzb,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS;IACpI;EACF,CAAC;EACDuY,MAAM,EAAE,KAAK;EACbF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE,MAAM;EACdsC,OAAO,EAAE,CAAC;EACV7Q,SAAS,EAAE;AACb,CAAC;AACDkQ,kBAAkB,CAACzmB,WAAW,GAAG;EAC/B4M,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAKA,IAAI,KAAK,SAAS;EAAA;EACzCF,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,SAAS;EAAA;AAC1C,CAAC;AACD4Z,kBAAkB,CAAC/mB,SAAS,GAAG;EAC7B0pB,WAAW,EAAE,CAAC;EACdrE,OAAO,EAAE;IACPsE,MAAM,EAAE;MACNzQ,MAAM,EAAE;QACN0Q,cAAc,WAAAA,eAACvjB,KAAK,EAAE;UACpB,IAAM4K,IAAI,GAAG5K,KAAK,CAAC4K,IAAI;UACvB,IAAIA,IAAI,CAACiI,MAAM,CAACxR,MAAM,IAAIuJ,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE;YAC9C,IAAgBmiB,UAAU,GAAKxjB,KAAK,CAACsjB,MAAM,CAACpb,OAAO,CAA5C2K,MAAM,CAAG2Q,UAAU;YAC1B,OAAO5Y,IAAI,CAACiI,MAAM,CAAC4Q,GAAG,CAAC,UAAClP,KAAK,EAAE7gB,CAAC,EAAK;cACnC,IAAMsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAAC,CAAC,CAAC;cACpC,IAAM0S,KAAK,GAAG1Y,IAAI,CAAC6B,UAAU,CAACiI,QAAQ,CAACphB,CAAC,CAAC;cACzC,OAAO;gBACLiwB,IAAI,EAAEpP,KAAK;gBACXqP,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACV,WAAW;gBAC5BQ,UAAU,EAAEA,UAAU;gBACtBS,MAAM,EAAE,CAACjkB,KAAK,CAACkd,iBAAiB,CAACxpB,CAAC,CAAC;gBACnCyW,KAAK,EAAEzW;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDwwB,OAAO,WAAAA,QAAC5wB,CAAC,EAAE6wB,UAAU,EAAEb,MAAM,EAAE;QAC7BA,MAAM,CAACtjB,KAAK,CAACokB,oBAAoB,CAACD,UAAU,CAACha,KAAK,CAAC;QACnDmZ,MAAM,CAACtjB,KAAK,CAAC0F,MAAM,EAAE;MACvB;IACF,CAAC;IACDuZ,OAAO,EAAE;MACP7e,SAAS,EAAE;QACT8e,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACD3K,KAAK,WAAAA,MAAC8P,WAAW,EAAE;UACjB,IAAIC,SAAS,GAAGD,WAAW,CAAC9P,KAAK;UACjC,IAAMzU,KAAK,GAAG,IAAI,GAAGukB,WAAW,CAACE,cAAc;UAC/C,IAAI1wB,OAAO,CAACywB,SAAS,CAAC,EAAE;YACtBA,SAAS,GAAGA,SAAS,CAACE,KAAK,EAAE;YAC7BF,SAAS,CAAC,CAAC,CAAC,IAAIxkB,KAAK;UACvB,CAAC,MAAM;YACLwkB,SAAS,IAAIxkB,KAAK;UACpB;UACA,OAAOwkB,SAAS;QAClB;MACF;IACF;EACF;AACF,CAAC;AAAC,IAEIG,cAAc,0BAAAC,mBAAA;EAAAlK,SAAA,CAAAiK,cAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAjK,YAAA,CAAA+J,cAAA;EAAA,SAAAA,eAAA;IAAAplB,eAAA,OAAAolB,cAAA;IAAA,OAAAE,OAAA,CAAA9hB,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAA6kB,cAAA;IAAA5kB,GAAA;IAAAC,KAAA,EAClB,SAAA6P,WAAA,EAAa;MACX,IAAI,CAACH,mBAAmB,GAAG,IAAI;MAC/ByL,IAAA,CAAAC,eAAA,CAAAuJ,cAAA,CAAAzM,SAAA,uBAAA/W,IAAA;IACF;EAAC;IAAApB,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAgB6X,IAAI,GAAiC5Z,IAAI,CAAlD+C,OAAO;QAAA8W,UAAA,GAAuC7Z,IAAI,CAAnCJ,IAAI;QAAE4T,MAAM,GAAAqG,UAAA,cAAG,EAAE,GAAAA,UAAA;QAAEC,QAAQ,GAAI9Z,IAAI,CAAhB8Z,QAAQ;MACjD,IAAMC,kBAAkB,GAAG/jB,EAAE,CAAChB,KAAK,CAACoW,mBAAmB;MACvD,IAAA4O,qBAAA,GAAqBC,+BAA+B,CAACja,IAAI,EAAEwT,MAAM,EAAEuG,kBAAkB,CAAC;QAAjFjkB,KAAK,GAAAkkB,qBAAA,CAALlkB,KAAK;QAAEuR,KAAK,GAAA2S,qBAAA,CAAL3S,KAAK;MACjBrR,EAAE,CAACsO,UAAU,GAAGxO,KAAK;MACrBE,EAAE,CAACuO,UAAU,GAAG8C,KAAK;MACrB,IAAI6S,kBAAkB,CAACla,IAAI,CAAC,EAAE;QAC5BlK,KAAK,GAAG,CAAC;QACTuR,KAAK,GAAGmM,MAAM,CAACnd,MAAM;MACvB;MACAujB,IAAI,CAACO,UAAU,GAAG,CAAC,CAACL,QAAQ,CAACK,UAAU;MACvCP,IAAI,CAACpG,MAAM,GAAGA,MAAM;MACpB,IAAMtW,OAAO,GAAGlH,EAAE,CAAC+T,4BAA4B,CAACvK,IAAI,CAAC;MACrD,IAAI,CAACxJ,EAAE,CAACkH,OAAO,CAACkd,QAAQ,EAAE;QACxBld,OAAO,CAAC8a,WAAW,GAAG,CAAC;MACzB;MACA9a,OAAO,CAACmd,OAAO,GAAGrkB,EAAE,CAACkH,OAAO,CAACmd,OAAO;MACpCrkB,EAAE,CAACqV,aAAa,CAACuO,IAAI,EAAEjlB,SAAS,EAAE;QAChC2lB,QAAQ,EAAE,CAACP,kBAAkB;QAC7B7c,OAAO,EAAPA;MACF,CAAC,EAAEsC,IAAI,CAAC;MACRxJ,EAAE,CAACwW,cAAc,CAACgH,MAAM,EAAE1d,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,CAAC;IAC/C;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA0X,eAAegH,MAAM,EAAE1d,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACzC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAA+a,gBAAA,GAAmCvkB,EAAE,CAAC+L,WAAW;QAA1CE,MAAM,GAAAsY,gBAAA,CAANtY,MAAM;QAAEb,MAAM,GAAAmZ,gBAAA,CAANnZ,MAAM;QAAEyD,QAAQ,GAAA0V,gBAAA,CAAR1V,QAAQ;MAC/B,IAAM4L,SAAS,GAAGza,EAAE,CAACgU,yBAAyB,CAAClU,KAAK,EAAE0J,IAAI,CAAC;MAC3D,IAAM2L,aAAa,GAAGnV,EAAE,CAACiV,gBAAgB,CAACwF,SAAS,CAAC;MACpD,IAAMvF,cAAc,GAAGlV,EAAE,CAACkV,cAAc,CAAC1L,IAAI,EAAE2L,aAAa,CAAC;MAC7D,IAAMjJ,KAAK,GAAGD,MAAM,CAACE,IAAI;MACzB,IAAMC,KAAK,GAAGhB,MAAM,CAACe,IAAI;MACzB,IAAMqY,QAAQ,GAAGxkB,EAAE,CAACkH,OAAO,CAACsd,QAAQ;MACpC,IAAMC,YAAY,GAAGtvB,QAAQ,CAACqvB,QAAQ,CAAC,GAAGA,QAAQ,GAAG7Z,MAAM,CAACE,iBAAiB;MAC7E,IAAM6Z,YAAY,GAAG1kB,EAAE,CAAChB,KAAK,CAACoW,mBAAmB,IAAIjF,KAAK,IAAI3G,IAAI,KAAK,MAAM;MAC7E,IAAImb,UAAU,GAAG7kB,KAAK,GAAG,CAAC,IAAIE,EAAE,CAACuS,SAAS,CAACzS,KAAK,GAAG,CAAC,CAAC;MACrD,KAAK,IAAIpN,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;QAC1C,IAAMgrB,KAAK,GAAGF,MAAM,CAAC9qB,CAAC,CAAC;QACvB,IAAMoZ,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAAC7f,CAAC,CAAC;QAC9B,IAAMqT,UAAU,GAAG2e,YAAY,GAAGhH,KAAK,GAAG,CAAC,CAAC;QAC5C,IAAMkH,QAAQ,GAAG7wB,aAAa,CAAC+X,MAAM,CAACM,KAAK,CAAC,CAAC;QAC7C,IAAMuR,MAAM,GAAG5X,UAAU,CAACmG,KAAK,CAAC,GAAGD,MAAM,CAAC0L,gBAAgB,CAAC7L,MAAM,CAACI,KAAK,CAAC,EAAExZ,CAAC,CAAC;QAC5E,IAAMmrB,MAAM,GAAG9X,UAAU,CAACqG,KAAK,CAAC,GAAG+D,KAAK,IAAIyU,QAAQ,GAAGxZ,MAAM,CAACiP,YAAY,EAAE,GAAGjP,MAAM,CAACuM,gBAAgB,CAAC9I,QAAQ,GAAG7O,EAAE,CAACoJ,UAAU,CAACgC,MAAM,EAAEU,MAAM,EAAE+C,QAAQ,CAAC,GAAG/C,MAAM,CAACM,KAAK,CAAC,EAAE1Z,CAAC,CAAC;QAC7KqT,UAAU,CAAC+X,IAAI,GAAGvC,KAAK,CAACoC,MAAM,CAAC,IAAIpC,KAAK,CAACsC,MAAM,CAAC,IAAI+G,QAAQ;QAC5D7e,UAAU,CAAC1D,IAAI,GAAG3P,CAAC,GAAG,CAAC,IAAKoZ,MAAM,CAACI,KAAK,CAAC,GAAGyY,UAAU,CAACzY,KAAK,CAAC,GAAIuY,YAAY;QAC7E1e,UAAU,CAAC+F,MAAM,GAAGA,MAAM;QAC1B,IAAIoJ,cAAc,EAAE;UAClBnP,UAAU,CAACmB,OAAO,GAAGiO,aAAa,IAAInV,EAAE,CAACgU,yBAAyB,CAACthB,CAAC,EAAEgrB,KAAK,CAACjZ,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QACvG;QACA,IAAI,CAACkb,YAAY,EAAE;UACjB1kB,EAAE,CAACqV,aAAa,CAACqI,KAAK,EAAEhrB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;QAC9C;QACAmb,UAAU,GAAG7Y,MAAM;MACrB;MACA9L,EAAE,CAACsV,mBAAmB,CAACH,aAAa,EAAE3L,IAAI,EAAEiR,SAAS,CAAC;IACxD;EAAC;IAAA5b,GAAA;IAAAC,KAAA,EACD,SAAAuU,eAAA,EAAiB;MACf,IAAMrT,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAMgB,OAAO,GAAG/C,IAAI,CAAC+C,OAAO;MAC5B,IAAM8X,MAAM,GAAG9X,OAAO,CAAC7F,OAAO,IAAI6F,OAAO,CAAC7F,OAAO,CAAC8a,WAAW,IAAI,CAAC;MAClE,IAAMpY,IAAI,GAAGI,IAAI,CAACJ,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACA,IAAI,CAACvJ,MAAM,EAAE;QAChB,OAAOwkB,MAAM;MACf;MACA,IAAMC,UAAU,GAAGlb,IAAI,CAAC,CAAC,CAAC,CAACjC,IAAI,CAAC3H,EAAE,CAACgU,yBAAyB,CAAC,CAAC,CAAC,CAAC;MAChE,IAAM+Q,SAAS,GAAGnb,IAAI,CAACA,IAAI,CAACvJ,MAAM,GAAG,CAAC,CAAC,CAACsH,IAAI,CAAC3H,EAAE,CAACgU,yBAAyB,CAACpK,IAAI,CAACvJ,MAAM,GAAG,CAAC,CAAC,CAAC;MAC3F,OAAOT,IAAI,CAACuC,GAAG,CAAC0iB,MAAM,EAAEC,UAAU,EAAEC,SAAS,CAAC,GAAG,CAAC;IACpD;EAAC;IAAAlmB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMqJ,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B/B,IAAI,CAAC+C,OAAO,CAACiY,mBAAmB,CAAC,IAAI,CAAChmB,KAAK,CAAC6U,SAAS,EAAE7J,IAAI,CAACiC,MAAM,CAACE,IAAI,CAAC;MACxE8N,IAAA,CAAAC,eAAA,CAAAuJ,cAAA,CAAAzM,SAAA,iBAAA/W,IAAA;IACF;EAAC;EAAA,OAAAwjB,cAAA;AAAA,EAhF0B7V,iBAAiB;AAkF9C6V,cAAc,CAACnZ,EAAE,GAAG,MAAM;AAC1BmZ,cAAc,CAAC1wB,QAAQ,GAAG;EACxBwd,kBAAkB,EAAE,MAAM;EAC1B4D,eAAe,EAAE,OAAO;EACxBiQ,QAAQ,EAAE,IAAI;EACdI,QAAQ,EAAE;AACZ,CAAC;AACDf,cAAc,CAAC9qB,SAAS,GAAG;EACzB8T,MAAM,EAAE;IACNmQ,OAAO,EAAE;MACPzd,IAAI,EAAE;IACR,CAAC;IACD4d,OAAO,EAAE;MACP5d,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACD,SAAS8kB,+BAA+BA,CAACja,IAAI,EAAEwT,MAAM,EAAEuG,kBAAkB,EAAE;EACzE,IAAMkB,UAAU,GAAGzH,MAAM,CAACnd,MAAM;EAChC,IAAIP,KAAK,GAAG,CAAC;EACb,IAAIuR,KAAK,GAAG4T,UAAU;EACtB,IAAIjb,IAAI,CAACuH,OAAO,EAAE;IAChB,IAAOtF,MAAM,GAAajC,IAAI,CAAvBiC,MAAM;MAAEoB,OAAO,GAAIrD,IAAI,CAAfqD,OAAO;IACtB,IAAMlB,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,IAAA+Y,qBAAA,GAA2CjZ,MAAM,CAAC1B,aAAa,EAAE;MAA1D1K,GAAG,GAAAqlB,qBAAA,CAAHrlB,GAAG;MAAEsC,GAAG,GAAA+iB,qBAAA,CAAH/iB,GAAG;MAAEsI,UAAU,GAAAya,qBAAA,CAAVza,UAAU;MAAEC,UAAU,GAAAwa,qBAAA,CAAVxa,UAAU;IACvC,IAAID,UAAU,EAAE;MACd3K,KAAK,GAAGzK,WAAW,CAACuK,IAAI,CAACC,GAAG,CAC1BtK,YAAY,CAAC8X,OAAO,EAAEpB,MAAM,CAACE,IAAI,EAAEtM,GAAG,CAAC,CAACslB,EAAE,EAC1CpB,kBAAkB,GAAGkB,UAAU,GAAG1vB,YAAY,CAACioB,MAAM,EAAErR,IAAI,EAAEF,MAAM,CAAC0L,gBAAgB,CAAC9X,GAAG,CAAC,CAAC,CAACslB,EAAE,CAAC,EAChG,CAAC,EAAEF,UAAU,GAAG,CAAC,CAAC;IACpB;IACA,IAAIva,UAAU,EAAE;MACd2G,KAAK,GAAGhc,WAAW,CAACuK,IAAI,CAACuC,GAAG,CAC1B5M,YAAY,CAAC8X,OAAO,EAAEpB,MAAM,CAACE,IAAI,EAAEhK,GAAG,CAAC,CAACijB,EAAE,GAAG,CAAC,EAC9CrB,kBAAkB,GAAG,CAAC,GAAGxuB,YAAY,CAACioB,MAAM,EAAErR,IAAI,EAAEF,MAAM,CAAC0L,gBAAgB,CAACxV,GAAG,CAAC,CAAC,CAACijB,EAAE,GAAG,CAAC,CAAC,EAC3FtlB,KAAK,EAAEmlB,UAAU,CAAC,GAAGnlB,KAAK;IAC5B,CAAC,MAAM;MACLuR,KAAK,GAAG4T,UAAU,GAAGnlB,KAAK;IAC5B;EACF;EACA,OAAO;IAACA,KAAK,EAALA,KAAK;IAAEuR,KAAK,EAALA;EAAK,CAAC;AACvB;AACA,SAAS6S,kBAAkBA,CAACla,IAAI,EAAE;EAChC,IAAO1B,MAAM,GAA0B0B,IAAI,CAApC1B,MAAM;IAAEC,MAAM,GAAkByB,IAAI,CAA5BzB,MAAM;IAAE8c,YAAY,GAAIrb,IAAI,CAApBqb,YAAY;EACnC,IAAMC,SAAS,GAAG;IAChBC,IAAI,EAAEjd,MAAM,CAACzI,GAAG;IAChB2lB,IAAI,EAAEld,MAAM,CAACnG,GAAG;IAChBsjB,IAAI,EAAEld,MAAM,CAAC1I,GAAG;IAChB6lB,IAAI,EAAEnd,MAAM,CAACpG;EACf,CAAC;EACD,IAAI,CAACkjB,YAAY,EAAE;IACjBrb,IAAI,CAACqb,YAAY,GAAGC,SAAS;IAC7B,OAAO,IAAI;EACb;EACA,IAAMK,OAAO,GAAGN,YAAY,CAACE,IAAI,KAAKjd,MAAM,CAACzI,GAAG,IAC7CwlB,YAAY,CAACG,IAAI,KAAKld,MAAM,CAACnG,GAAG,IAChCkjB,YAAY,CAACI,IAAI,KAAKld,MAAM,CAAC1I,GAAG,IAChCwlB,YAAY,CAACK,IAAI,KAAKnd,MAAM,CAACpG,GAAG;EACnCoD,MAAM,CAACqC,MAAM,CAACyd,YAAY,EAAEC,SAAS,CAAC;EACtC,OAAOK,OAAO;AAChB;AAAC,IAEKC,mBAAmB,0BAAAC,mBAAA;EAAArM,SAAA,CAAAoM,mBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAApM,YAAA,CAAAkM,mBAAA;EACvB,SAAAA,oBAAY5mB,KAAK,EAAEyK,YAAY,EAAE;IAAA,IAAAsc,MAAA;IAAA1nB,eAAA,OAAAunB,mBAAA;IAC/BG,MAAA,GAAAD,OAAA,CAAA7lB,IAAA,OAAMjB,KAAK,EAAEyK,YAAY;IACzBsc,MAAA,CAAKjG,WAAW,GAAGnhB,SAAS;IAC5BonB,MAAA,CAAKhG,WAAW,GAAGphB,SAAS;IAAC,OAAAonB,MAAA;EAC/B;EAACnnB,YAAA,CAAAgnB,mBAAA;IAAA/mB,GAAA;IAAAC,KAAA,EACD,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM/M,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6S,MAAM,GAAG7S,KAAK,CAAC4K,IAAI,CAACiI,MAAM,IAAI,EAAE;MACtC,IAAM/S,KAAK,GAAGnK,YAAY,CAACqV,IAAI,CAACqD,OAAO,CAAClE,KAAK,CAAC,CAACjX,CAAC,EAAE8M,KAAK,CAACkI,OAAO,CAAC4a,MAAM,CAAC;MACvE,OAAO;QACLvO,KAAK,EAAE1B,MAAM,CAAC1I,KAAK,CAAC,IAAI,EAAE;QAC1BrK,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAM4W,IAAI,GAAG,IAAI,CAACrU,WAAW,CAACnC,IAAI;MAClC,IAAI,CAACoc,aAAa,EAAE;MACpB,IAAI,CAACxP,cAAc,CAAC4J,IAAI,EAAE,CAAC,EAAEA,IAAI,CAAC/f,MAAM,EAAEmJ,IAAI,CAAC;IACjD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAknB,cAAA,EAAgB;MACd,IAAMhmB,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM6U,SAAS,GAAG7U,KAAK,CAAC6U,SAAS;MACjC,IAAM3L,IAAI,GAAGlJ,KAAK,CAACkI,OAAO;MAC1B,IAAM+e,OAAO,GAAGrmB,IAAI,CAACC,GAAG,CAACgU,SAAS,CAACpL,KAAK,GAAGoL,SAAS,CAAClL,IAAI,EAAEkL,SAAS,CAACnL,MAAM,GAAGmL,SAAS,CAACrL,GAAG,CAAC;MAC5F,IAAMuX,WAAW,GAAGngB,IAAI,CAACuC,GAAG,CAAC8jB,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC;MAC5C,IAAMnG,WAAW,GAAGlgB,IAAI,CAACuC,GAAG,CAAC+F,IAAI,CAACge,gBAAgB,GAAInG,WAAW,GAAG,GAAG,GAAK7X,IAAI,CAACge,gBAAiB,GAAG,CAAC,EAAE,CAAC,CAAC;MAC1G,IAAMlF,YAAY,GAAG,CAACjB,WAAW,GAAGD,WAAW,IAAI9gB,KAAK,CAACmnB,sBAAsB,EAAE;MACjFnmB,EAAE,CAAC+f,WAAW,GAAGA,WAAW,GAAIiB,YAAY,GAAGhhB,EAAE,CAACmJ,KAAM;MACxDnJ,EAAE,CAAC8f,WAAW,GAAG9f,EAAE,CAAC+f,WAAW,GAAGiB,YAAY;IAChD;EAAC;IAAAniB,GAAA;IAAAC,KAAA,EACD,SAAA0X,eAAe4J,IAAI,EAAEtgB,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACvC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMmQ,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,IAAMxK,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM+N,OAAO,GAAG/M,EAAE,CAACgP,UAAU,EAAE;MAC/B,IAAM9G,IAAI,GAAGlJ,KAAK,CAACkI,OAAO;MAC1B,IAAMsa,aAAa,GAAGtZ,IAAI,CAACzC,SAAS;MACpC,IAAMuC,KAAK,GAAGhI,EAAE,CAAC+L,WAAW,CAAC+D,MAAM;MACnC,IAAM2R,OAAO,GAAGzZ,KAAK,CAACoe,OAAO;MAC7B,IAAM1E,OAAO,GAAG1Z,KAAK,CAACqe,OAAO;MAC7B,IAAMC,iBAAiB,GAAGte,KAAK,CAACue,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGtxB,EAAE;MAC3D,IAAImqB,KAAK,GAAGkH,iBAAiB;MAC7B,IAAI5zB,CAAC;MACL,IAAM8zB,YAAY,GAAG,GAAG,GAAGxmB,EAAE,CAACymB,oBAAoB,EAAE;MACpD,KAAK/zB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoN,KAAK,EAAE,EAAEpN,CAAC,EAAE;QAC1B0sB,KAAK,IAAIpf,EAAE,CAAC0mB,aAAa,CAACh0B,CAAC,EAAE8W,IAAI,EAAEgd,YAAY,CAAC;MAClD;MACA,KAAK9zB,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QACtC,IAAMkvB,GAAG,GAAGxB,IAAI,CAAC1tB,CAAC,CAAC;QACnB,IAAIisB,UAAU,GAAGS,KAAK;QACtB,IAAIR,QAAQ,GAAGQ,KAAK,GAAGpf,EAAE,CAAC0mB,aAAa,CAACh0B,CAAC,EAAE8W,IAAI,EAAEgd,YAAY,CAAC;QAC9D,IAAIzG,WAAW,GAAG/gB,KAAK,CAACkd,iBAAiB,CAACxpB,CAAC,CAAC,GAAGsV,KAAK,CAAC2e,6BAA6B,CAAC5Z,OAAO,CAACnD,IAAI,CAAClX,CAAC,CAAC,CAAC,GAAG,CAAC;QACvG0sB,KAAK,GAAGR,QAAQ;QAChB,IAAIzO,KAAK,EAAE;UACT,IAAIqR,aAAa,CAACG,YAAY,EAAE;YAC9B5B,WAAW,GAAG,CAAC;UACjB;UACA,IAAIyB,aAAa,CAACF,aAAa,EAAE;YAC/B3C,UAAU,GAAGC,QAAQ,GAAG0H,iBAAiB;UAC3C;QACF;QACA,IAAMvgB,UAAU,GAAG;UACjBvQ,CAAC,EAAEisB,OAAO;UACV/rB,CAAC,EAAEgsB,OAAO;UACV5B,WAAW,EAAE,CAAC;UACdC,WAAW,EAAXA,WAAW;UACXpB,UAAU,EAAVA,UAAU;UACVC,QAAQ,EAARA,QAAQ;UACR1X,OAAO,EAAElH,EAAE,CAACgU,yBAAyB,CAACthB,CAAC,EAAEkvB,GAAG,CAACnd,MAAM,GAAG,QAAQ,GAAG+E,IAAI;QACvE,CAAC;QACDxJ,EAAE,CAACqV,aAAa,CAACuM,GAAG,EAAElvB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC5C;IACF;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA2nB,qBAAA,EAAuB;MAAA,IAAAG,MAAA;MACrB,IAAM7Z,OAAO,GAAG,IAAI,CAACiC,UAAU,EAAE;MACjC,IAAMhF,IAAI,GAAG,IAAI,CAAC+B,WAAW;MAC7B,IAAIsF,KAAK,GAAG,CAAC;MACbrH,IAAI,CAACJ,IAAI,CAACpK,OAAO,CAAC,UAACyN,OAAO,EAAE9D,KAAK,EAAK;QACpC,IAAI,CAACoS,KAAK,CAACxO,OAAO,CAACnD,IAAI,CAACT,KAAK,CAAC,CAAC,IAAIyd,MAAI,CAAC5nB,KAAK,CAACkd,iBAAiB,CAAC/S,KAAK,CAAC,EAAE;UACtEkI,KAAK,EAAE;QACT;MACF,CAAC,CAAC;MACF,OAAOA,KAAK;IACd;EAAC;IAAAxS,GAAA;IAAAC,KAAA,EACD,SAAA4nB,cAAcvd,KAAK,EAAEK,IAAI,EAAEgd,YAAY,EAAE;MACvC,OAAO,IAAI,CAACxnB,KAAK,CAACkd,iBAAiB,CAAC/S,KAAK,CAAC,GACtChV,SAAS,CAAC,IAAI,CAAC6f,yBAAyB,CAAC7K,KAAK,EAAEK,IAAI,CAAC,CAAC4V,KAAK,IAAIoH,YAAY,CAAC,GAC5E,CAAC;IACP;EAAC;EAAA,OAAAZ,mBAAA;AAAA,EA5F+BhY,iBAAiB;AA8FnDgY,mBAAmB,CAACtb,EAAE,GAAG,WAAW;AACpCsb,mBAAmB,CAAC7yB,QAAQ,GAAG;EAC7BohB,eAAe,EAAE,KAAK;EACtB1O,SAAS,EAAE;IACT6b,aAAa,EAAE,IAAI;IACnBK,YAAY,EAAE;EAChB,CAAC;EACDzb,UAAU,EAAE;IACVd,OAAO,EAAE;MACPjG,IAAI,EAAE,QAAQ;MACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa;IAC/E;EACF,CAAC;EACDyJ,SAAS,EAAE,GAAG;EACdmP,UAAU,EAAE;AACd,CAAC;AACDiH,mBAAmB,CAACjtB,SAAS,GAAG;EAC9B0pB,WAAW,EAAE,CAAC;EACdrE,OAAO,EAAE;IACPsE,MAAM,EAAE;MACNzQ,MAAM,EAAE;QACN0Q,cAAc,WAAAA,eAACvjB,KAAK,EAAE;UACpB,IAAM4K,IAAI,GAAG5K,KAAK,CAAC4K,IAAI;UACvB,IAAIA,IAAI,CAACiI,MAAM,CAACxR,MAAM,IAAIuJ,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE;YAC9C,IAAgBmiB,UAAU,GAAKxjB,KAAK,CAACsjB,MAAM,CAACpb,OAAO,CAA5C2K,MAAM,CAAG2Q,UAAU;YAC1B,OAAO5Y,IAAI,CAACiI,MAAM,CAAC4Q,GAAG,CAAC,UAAClP,KAAK,EAAE7gB,CAAC,EAAK;cACnC,IAAMsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAAC,CAAC,CAAC;cACpC,IAAM0S,KAAK,GAAG1Y,IAAI,CAAC6B,UAAU,CAACiI,QAAQ,CAACphB,CAAC,CAAC;cACzC,OAAO;gBACLiwB,IAAI,EAAEpP,KAAK;gBACXqP,SAAS,EAAEF,KAAK,CAACG,eAAe;gBAChCC,WAAW,EAAEJ,KAAK,CAACK,WAAW;gBAC9BC,SAAS,EAAEN,KAAK,CAACV,WAAW;gBAC5BQ,UAAU,EAAEA,UAAU;gBACtBS,MAAM,EAAE,CAACjkB,KAAK,CAACkd,iBAAiB,CAACxpB,CAAC,CAAC;gBACnCyW,KAAK,EAAEzW;cACT,CAAC;YACH,CAAC,CAAC;UACJ;UACA,OAAO,EAAE;QACX;MACF,CAAC;MACDwwB,OAAO,WAAAA,QAAC5wB,CAAC,EAAE6wB,UAAU,EAAEb,MAAM,EAAE;QAC7BA,MAAM,CAACtjB,KAAK,CAACokB,oBAAoB,CAACD,UAAU,CAACha,KAAK,CAAC;QACnDmZ,MAAM,CAACtjB,KAAK,CAAC0F,MAAM,EAAE;MACvB;IACF,CAAC;IACDuZ,OAAO,EAAE;MACP7e,SAAS,EAAE;QACT8e,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACD3K,KAAK,WAAAA,MAACU,OAAO,EAAE;UACb,OAAOA,OAAO,CAACjV,KAAK,CAAC4K,IAAI,CAACiI,MAAM,CAACoC,OAAO,CAAC/G,SAAS,CAAC,GAAG,IAAI,GAAG+G,OAAO,CAACsP,cAAc;QACrF;MACF;IACF;EACF,CAAC;EACD9W,MAAM,EAAE;IACNva,CAAC,EAAE;MACDiN,IAAI,EAAE,cAAc;MACpB0nB,UAAU,EAAE;QACVC,OAAO,EAAE;MACX,CAAC;MACD9J,WAAW,EAAE,IAAI;MACjBF,IAAI,EAAE;QACJiK,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE;QACXF,OAAO,EAAE;MACX,CAAC;MACDnI,UAAU,EAAE;IACd;EACF;AACF,CAAC;AAAC,IAEIsI,aAAa,0BAAAC,mBAAA;EAAA1N,SAAA,CAAAyN,aAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAzN,YAAA,CAAAuN,aAAA;EAAA,SAAAA,cAAA;IAAA5oB,eAAA,OAAA4oB,aAAA;IAAA,OAAAE,OAAA,CAAAtlB,KAAA,OAAAzB,SAAA;EAAA;EAAA,OAAAxB,YAAA,CAAAqoB,aAAA;AAAA,EAASvH,kBAAkB;AAE9CuH,aAAa,CAAC3c,EAAE,GAAG,KAAK;AACxB2c,aAAa,CAACl0B,QAAQ,GAAG;EACvBurB,MAAM,EAAE,CAAC;EACTF,QAAQ,EAAE,CAAC;EACXC,aAAa,EAAE,GAAG;EAClBN,MAAM,EAAE;AACV,CAAC;AAAC,IAEIqJ,eAAe,0BAAAC,mBAAA;EAAA7N,SAAA,CAAA4N,eAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAA5N,YAAA,CAAA0N,eAAA;EAAA,SAAAA,gBAAA;IAAA/oB,eAAA,OAAA+oB,eAAA;IAAA,OAAAE,OAAA,CAAAzlB,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAwoB,eAAA;IAAAvoB,GAAA;IAAAC,KAAA,EACnB,SAAAwU,iBAAiBnK,KAAK,EAAE;MACtB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAMoL,MAAM,GAAGpL,EAAE,CAAC+L,WAAW,CAACX,MAAM;MACpC,IAAMU,MAAM,GAAG9L,EAAE,CAACuS,SAAS,CAACpJ,KAAK,CAAC;MAClC,OAAO;QACLoK,KAAK,EAAEnI,MAAM,CAAC0G,SAAS,EAAE,CAAC3I,KAAK,CAAC;QAChCrK,KAAK,EAAE,EAAE,GAAGsM,MAAM,CAACoI,gBAAgB,CAAC1H,MAAM,CAACV,MAAM,CAACe,IAAI,CAAC;MACzD,CAAC;IACH;EAAC;IAAAtN,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC+L,WAAW;MAC3B,IAAM6X,IAAI,GAAG5Z,IAAI,CAAC+C,OAAO;MACzB,IAAMyQ,MAAM,GAAGxT,IAAI,CAACJ,IAAI,IAAI,EAAE;MAC9B,IAAMiI,MAAM,GAAG7H,IAAI,CAACiC,MAAM,CAAC6F,SAAS,EAAE;MACtC8R,IAAI,CAACpG,MAAM,GAAGA,MAAM;MACpB,IAAIhU,IAAI,KAAK,QAAQ,EAAE;QACrB,IAAMtC,OAAO,GAAGlH,EAAE,CAAC+T,4BAA4B,CAACvK,IAAI,CAAC;QACrD,IAAI,CAACxJ,EAAE,CAACkH,OAAO,CAACkd,QAAQ,EAAE;UACxBld,OAAO,CAAC8a,WAAW,GAAG,CAAC;QACzB;QACA,IAAMjc,UAAU,GAAG;UACjB7B,KAAK,EAAE,IAAI;UACXqjB,SAAS,EAAE1V,MAAM,CAACxR,MAAM,KAAKmd,MAAM,CAACnd,MAAM;UAC1C6G,OAAO,EAAPA;QACF,CAAC;QACDlH,EAAE,CAACqV,aAAa,CAACuO,IAAI,EAAEjlB,SAAS,EAAEoH,UAAU,EAAEyD,IAAI,CAAC;MACrD;MACAxJ,EAAE,CAACwW,cAAc,CAACgH,MAAM,EAAE,CAAC,EAAEA,MAAM,CAACnd,MAAM,EAAEmJ,IAAI,CAAC;IACnD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAA0X,eAAegH,MAAM,EAAE1d,KAAK,EAAEuR,KAAK,EAAE7H,IAAI,EAAE;MACzC,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAACgP,UAAU,EAAE;MAC/B,IAAMhH,KAAK,GAAGhI,EAAE,CAAC+L,WAAW,CAAC+D,MAAM;MACnC,IAAMK,KAAK,GAAG3G,IAAI,KAAK,OAAO;MAC9B,KAAK,IAAI9W,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE3e,CAAC,EAAE,EAAE;QAC1C,IAAMgrB,KAAK,GAAGF,MAAM,CAAC9qB,CAAC,CAAC;QACvB,IAAMwU,OAAO,GAAGlH,EAAE,CAACgU,yBAAyB,CAACthB,CAAC,EAAEgrB,KAAK,CAACjZ,MAAM,GAAG,QAAQ,GAAG+E,IAAI,CAAC;QAC/E,IAAMge,aAAa,GAAGxf,KAAK,CAACyf,wBAAwB,CAAC/0B,CAAC,EAAEqa,OAAO,CAACnD,IAAI,CAAClX,CAAC,CAAC,CAAC;QACxE,IAAM8C,CAAC,GAAG2a,KAAK,GAAGnI,KAAK,CAACoe,OAAO,GAAGoB,aAAa,CAAChyB,CAAC;QACjD,IAAME,CAAC,GAAGya,KAAK,GAAGnI,KAAK,CAACqe,OAAO,GAAGmB,aAAa,CAAC9xB,CAAC;QACjD,IAAMqQ,UAAU,GAAG;UACjBvQ,CAAC,EAADA,CAAC;UACDE,CAAC,EAADA,CAAC;UACD0pB,KAAK,EAAEoI,aAAa,CAACpI,KAAK;UAC1BtB,IAAI,EAAEvC,KAAK,CAAC/lB,CAAC,CAAC,IAAI+lB,KAAK,CAAC7lB,CAAC,CAAC;UAC1BwR,OAAO,EAAPA;QACF,CAAC;QACDlH,EAAE,CAACqV,aAAa,CAACqI,KAAK,EAAEhrB,CAAC,EAAEqT,UAAU,EAAEyD,IAAI,CAAC;MAC9C;IACF;EAAC;EAAA,OAAA4d,eAAA;AAAA,EAnD2BxZ,iBAAiB;AAqD/CwZ,eAAe,CAAC9c,EAAE,GAAG,OAAO;AAC5B8c,eAAe,CAACr0B,QAAQ,GAAG;EACzBwd,kBAAkB,EAAE,MAAM;EAC1B4D,eAAe,EAAE,OAAO;EACxB3E,SAAS,EAAE,GAAG;EACd4U,QAAQ,EAAE,IAAI;EACdzQ,QAAQ,EAAE;IACRiQ,IAAI,EAAE;MACJ8D,IAAI,EAAE;IACR;EACF;AACF,CAAC;AACDN,eAAe,CAACzuB,SAAS,GAAG;EAC1B0pB,WAAW,EAAE,CAAC;EACd5V,MAAM,EAAE;IACNva,CAAC,EAAE;MACDiN,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAAC,IAEIwoB,iBAAiB,0BAAAC,eAAA;EAAApO,SAAA,CAAAmO,iBAAA,EAAAC,eAAA;EAAA,IAAAC,OAAA,GAAAnO,YAAA,CAAAiO,iBAAA;EAAA,SAAAA,kBAAA;IAAAtpB,eAAA,OAAAspB,iBAAA;IAAA,OAAAE,OAAA,CAAAhmB,KAAA,OAAAzB,SAAA;EAAA;EAAA,OAAAxB,YAAA,CAAA+oB,iBAAA;AAAA,EAASlE,cAAc;AAE9CkE,iBAAiB,CAACrd,EAAE,GAAG,SAAS;AAChCqd,iBAAiB,CAAC50B,QAAQ,GAAG;EAC3BqxB,QAAQ,EAAE,KAAK;EACfsD,IAAI,EAAE;AACR,CAAC;AACDC,iBAAiB,CAAChvB,SAAS,GAAG;EAC5BgkB,WAAW,EAAE;IACXnT,IAAI,EAAE;EACR,CAAC;EACDwU,OAAO,EAAE;IACPC,OAAO,EAAE;MACP7e,SAAS,EAAE;QACT8e,KAAK,WAAAA,MAAA,EAAG;UACN,OAAO,EAAE;QACX,CAAC;QACD3K,KAAK,WAAAA,MAAC3S,IAAI,EAAE;UACV,OAAO,GAAG,GAAGA,IAAI,CAAC2S,KAAK,GAAG,IAAI,GAAG3S,IAAI,CAAC2iB,cAAc,GAAG,GAAG;QAC5D;MACF;IACF;EACF,CAAC;EACD9W,MAAM,EAAE;IACNjX,CAAC,EAAE;MACD2J,IAAI,EAAE;IACR,CAAC;IACDzJ,CAAC,EAAE;MACDyJ,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAED,IAAI2oB,WAAW,GAAG,aAAaviB,MAAM,CAACqP,MAAM,CAAC;EAC7CmT,SAAS,EAAE,IAAI;EACfzO,aAAa,EAAEA,aAAa;EAC5B2D,gBAAgB,EAAEA,gBAAgB;EAClCyC,kBAAkB,EAAEA,kBAAkB;EACtC+D,cAAc,EAAEA,cAAc;EAC9BmC,mBAAmB,EAAEA,mBAAmB;EACxCqB,aAAa,EAAEA,aAAa;EAC5BG,eAAe,EAAEA,eAAe;EAChCO,iBAAiB,EAAEA;AACnB,CAAC,CAAC;AAEF,SAASK,QAAQA,CAAA,EAAG;EAClB,MAAM,IAAIC,KAAK,CAAC,iFAAiF,CAAC;AACpG;AAAC,IACKC,WAAW;EACf,SAAAA,YAAYhhB,OAAO,EAAE;IAAA7I,eAAA,OAAA6pB,WAAA;IACnB,IAAI,CAAChhB,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC9B;EAACtI,YAAA,CAAAspB,WAAA;IAAArpB,GAAA;IAAAC,KAAA,EACD,SAAAqpB,QAAA,EAAU;MACR,OAAOH,QAAQ,EAAE;IACnB;EAAC;IAAAnpB,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMtS,KAAK,EAAEspB,MAAM,EAAE;MACnB,OAAOJ,QAAQ,EAAE;IACnB;EAAC;IAAAnpB,GAAA;IAAAC,KAAA,EACD,SAAAspB,OAAOC,SAAS,EAAED,OAAM,EAAE;MACxB,OAAOJ,QAAQ,EAAE;IACnB;EAAC;IAAAnpB,GAAA;IAAAC,KAAA,EACD,SAAA6C,IAAI0mB,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAE;MAC3B,OAAOP,QAAQ,EAAE;IACnB;EAAC;IAAAnpB,GAAA;IAAAC,KAAA,EACD,SAAA0pB,KAAKp2B,CAAC,EAAEQ,CAAC,EAAE21B,IAAI,EAAE;MACf,OAAOP,QAAQ,EAAE;IACnB;EAAC;IAAAnpB,GAAA;IAAAC,KAAA,EACD,SAAA2pB,QAAQJ,SAAS,EAAEE,IAAI,EAAEG,OAAO,EAAE;MAChC,OAAOV,QAAQ,EAAE;IACnB;EAAC;IAAAnpB,GAAA;IAAAC,KAAA,EACD,SAAA6pB,MAAMN,SAAS,EAAEE,IAAI,EAAE;MACrB,OAAOP,QAAQ,EAAE;IACnB;EAAC;EAAA,OAAAE,WAAA;AAAA;AAEHA,WAAW,CAACU,QAAQ,GAAG,UAASC,OAAO,EAAE;EACvCtjB,MAAM,CAACqC,MAAM,CAACsgB,WAAW,CAAClR,SAAS,EAAE6R,OAAO,CAAC;AAC/C,CAAC;AACD,IAAIC,QAAQ,GAAG;EACbC,KAAK,EAAEb;AACT,CAAC;AAED,SAASc,mBAAmBA,CAAC12B,CAAC,EAAE0M,KAAK,EAAE;EACrC,IAAI,QAAQ,IAAI1M,CAAC,EAAE;IACjB,OAAO;MACLkD,CAAC,EAAElD,CAAC,CAACkD,CAAC;MACNE,CAAC,EAAEpD,CAAC,CAACoD;IACP,CAAC;EACH;EACA,OAAOD,qBAAqB,CAACnD,CAAC,EAAE0M,KAAK,CAAC;AACxC;AACA,SAASiqB,uBAAuBA,CAACjqB,KAAK,EAAEkqB,OAAO,EAAE;EAC/C,IAAMlgB,QAAQ,GAAGhK,KAAK,CAACmqB,4BAA4B,EAAE;EACrD,IAAIhgB,KAAK,EAAES,IAAI,EAAEqD,OAAO;EACxB,KAAK,IAAIva,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAAA,IAAA02B,WAAA,GACpCpgB,QAAQ,CAACtW,CAAC,CAAC;IAA1ByW,KAAK,GAAAigB,WAAA,CAALjgB,KAAK;IAAES,IAAI,GAAAwf,WAAA,CAAJxf,IAAI;IACb,KAAK,IAAI9V,CAAC,GAAG,CAAC,EAAEu1B,IAAI,GAAGzf,IAAI,CAACvJ,MAAM,EAAEvM,CAAC,GAAGu1B,IAAI,EAAE,EAAEv1B,CAAC,EAAE;MACjDmZ,OAAO,GAAGrD,IAAI,CAAC9V,CAAC,CAAC;MACjB,IAAI,CAACmZ,OAAO,CAAC6Q,IAAI,EAAE;QACjBoL,OAAO,CAACjc,OAAO,EAAE9D,KAAK,EAAErV,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAASw1B,YAAYA,CAACC,OAAO,EAAEpd,IAAI,EAAErN,KAAK,EAAE0qB,SAAS,EAAE;EACrD,IAAO3d,UAAU,GAAmB0d,OAAO,CAApC1d,UAAU;IAAEjC,IAAI,GAAa2f,OAAO,CAAxB3f,IAAI;IAAE2H,OAAO,GAAIgY,OAAO,CAAlBhY,OAAO;EAChC,IAAMtF,MAAM,GAAGJ,UAAU,CAACE,WAAW,CAACE,MAAM;EAC5C,IAAIA,MAAM,IAAIE,IAAI,KAAKF,MAAM,CAACE,IAAI,IAAIoF,OAAO,IAAI3H,IAAI,CAACvJ,MAAM,EAAE;IAC5D,IAAMopB,YAAY,GAAGxd,MAAM,CAACyd,cAAc,GAAG7zB,aAAa,GAAGN,YAAY;IACzE,IAAI,CAACi0B,SAAS,EAAE;MACd,OAAOC,YAAY,CAAC7f,IAAI,EAAEuC,IAAI,EAAErN,KAAK,CAAC;IACxC,CAAC,MAAM,IAAI+M,UAAU,CAACwC,cAAc,EAAE;MACpC,IAAMsb,EAAE,GAAG/f,IAAI,CAAC,CAAC,CAAC;MAClB,IAAM8I,KAAK,GAAG,OAAOiX,EAAE,CAACC,QAAQ,KAAK,UAAU,IAAID,EAAE,CAACC,QAAQ,CAACzd,IAAI,CAAC;MACpE,IAAIuG,KAAK,EAAE;QACT,IAAM5S,KAAK,GAAG2pB,YAAY,CAAC7f,IAAI,EAAEuC,IAAI,EAAErN,KAAK,GAAG4T,KAAK,CAAC;QACrD,IAAMtK,GAAG,GAAGqhB,YAAY,CAAC7f,IAAI,EAAEuC,IAAI,EAAErN,KAAK,GAAG4T,KAAK,CAAC;QACnD,OAAO;UAACyS,EAAE,EAAErlB,KAAK,CAACqlB,EAAE;UAAEC,EAAE,EAAEhd,GAAG,CAACgd;QAAE,CAAC;MACnC;IACF;EACF;EACA,OAAO;IAACD,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAExb,IAAI,CAACvJ,MAAM,GAAG;EAAC,CAAC;AACrC;AACA,SAASwpB,sBAAsBA,CAAC7qB,KAAK,EAAEmN,IAAI,EAAE2d,QAAQ,EAAEZ,OAAO,EAAEM,SAAS,EAAE;EACzE,IAAMxgB,QAAQ,GAAGhK,KAAK,CAACmqB,4BAA4B,EAAE;EACrD,IAAMrqB,KAAK,GAAGgrB,QAAQ,CAAC3d,IAAI,CAAC;EAC5B,KAAK,IAAIzZ,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACrD,IAAAq3B,YAAA,GAAsB/gB,QAAQ,CAACtW,CAAC,CAAC;MAA1ByW,KAAK,GAAA4gB,YAAA,CAAL5gB,KAAK;MAAES,IAAI,GAAAmgB,YAAA,CAAJngB,IAAI;IAClB,IAAAogB,aAAA,GAAiBV,YAAY,CAACtgB,QAAQ,CAACtW,CAAC,CAAC,EAAEyZ,IAAI,EAAErN,KAAK,EAAE0qB,SAAS,CAAC;MAA3DrE,EAAE,GAAA6E,aAAA,CAAF7E,EAAE;MAAEC,EAAE,GAAA4E,aAAA,CAAF5E,EAAE;IACb,KAAK,IAAItxB,CAAC,GAAGqxB,EAAE,EAAErxB,CAAC,IAAIsxB,EAAE,EAAE,EAAEtxB,CAAC,EAAE;MAC7B,IAAMmZ,OAAO,GAAGrD,IAAI,CAAC9V,CAAC,CAAC;MACvB,IAAI,CAACmZ,OAAO,CAAC6Q,IAAI,EAAE;QACjBoL,OAAO,CAACjc,OAAO,EAAE9D,KAAK,EAAErV,CAAC,CAAC;MAC5B;IACF;EACF;AACF;AACA,SAASm2B,wBAAwBA,CAAC9d,IAAI,EAAE;EACtC,IAAM+d,IAAI,GAAG/d,IAAI,CAACqP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,IAAM2O,IAAI,GAAGhe,IAAI,CAACqP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;EACrC,OAAO,UAAS4O,GAAG,EAAEC,GAAG,EAAE;IACxB,IAAMC,MAAM,GAAGJ,IAAI,GAAGtqB,IAAI,CAAC8X,GAAG,CAAC0S,GAAG,CAAC50B,CAAC,GAAG60B,GAAG,CAAC70B,CAAC,CAAC,GAAG,CAAC;IACjD,IAAM+0B,MAAM,GAAGJ,IAAI,GAAGvqB,IAAI,CAAC8X,GAAG,CAAC0S,GAAG,CAAC10B,CAAC,GAAG20B,GAAG,CAAC30B,CAAC,CAAC,GAAG,CAAC;IACjD,OAAOkK,IAAI,CAAC4qB,IAAI,CAAC5qB,IAAI,CAAC6qB,GAAG,CAACH,MAAM,EAAE,CAAC,CAAC,GAAG1qB,IAAI,CAAC6qB,GAAG,CAACF,MAAM,EAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;AACH;AACA,SAASG,iBAAiBA,CAAC1rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAEwe,gBAAgB,EAAE;EAClE,IAAMjqB,KAAK,GAAG,EAAE;EAChB,IAAI,CAAC/K,cAAc,CAACm0B,QAAQ,EAAE9qB,KAAK,CAAC6U,SAAS,EAAE7U,KAAK,CAAC4rB,WAAW,CAAC,EAAE;IACjE,OAAOlqB,KAAK;EACd;EACA,IAAMmqB,cAAc,GAAG,SAAjBA,cAAcA,CAAY5d,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAI8D,OAAO,CAAC6d,OAAO,CAAChB,QAAQ,CAACt0B,CAAC,EAAEs0B,QAAQ,CAACp0B,CAAC,EAAEi1B,gBAAgB,CAAC,EAAE;MAC7DjqB,KAAK,CAACgB,IAAI,CAAC;QAACuL,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACD0gB,sBAAsB,CAAC7qB,KAAK,EAAEmN,IAAI,EAAE2d,QAAQ,EAAEe,cAAc,EAAE,IAAI,CAAC;EACnE,OAAOnqB,KAAK;AACd;AACA,SAASqqB,eAAeA,CAAC/rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAEqd,SAAS,EAAEmB,gBAAgB,EAAE;EAC3E,IAAMK,cAAc,GAAGf,wBAAwB,CAAC9d,IAAI,CAAC;EACrD,IAAI8e,WAAW,GAAGtgB,MAAM,CAACE,iBAAiB;EAC1C,IAAInK,KAAK,GAAG,EAAE;EACd,IAAI,CAAC/K,cAAc,CAACm0B,QAAQ,EAAE9qB,KAAK,CAAC6U,SAAS,EAAE7U,KAAK,CAAC4rB,WAAW,CAAC,EAAE;IACjE,OAAOlqB,KAAK;EACd;EACA,IAAMmqB,cAAc,GAAG,SAAjBA,cAAcA,CAAY5d,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAE;IAC5D,IAAIqgB,SAAS,IAAI,CAACvc,OAAO,CAAC6d,OAAO,CAAChB,QAAQ,CAACt0B,CAAC,EAAEs0B,QAAQ,CAACp0B,CAAC,EAAEi1B,gBAAgB,CAAC,EAAE;MAC3E;IACF;IACA,IAAM3P,MAAM,GAAG/N,OAAO,CAACie,cAAc,CAACP,gBAAgB,CAAC;IACvD,IAAI,CAACh1B,cAAc,CAACqlB,MAAM,EAAEhc,KAAK,CAAC6U,SAAS,EAAE7U,KAAK,CAAC4rB,WAAW,CAAC,EAAE;MAC/D;IACF;IACA,IAAMO,QAAQ,GAAGH,cAAc,CAAClB,QAAQ,EAAE9O,MAAM,CAAC;IACjD,IAAImQ,QAAQ,GAAGF,WAAW,EAAE;MAC1BvqB,KAAK,GAAG,CAAC;QAACuM,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;MACxC8hB,WAAW,GAAGE,QAAQ;IACxB,CAAC,MAAM,IAAIA,QAAQ,KAAKF,WAAW,EAAE;MACnCvqB,KAAK,CAACgB,IAAI,CAAC;QAACuL,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;IAC5C;EACF,CAAC;EACD0gB,sBAAsB,CAAC7qB,KAAK,EAAEmN,IAAI,EAAE2d,QAAQ,EAAEe,cAAc,CAAC;EAC7D,OAAOnqB,KAAK;AACd;AACA,SAAS0qB,YAAYA,CAACpsB,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,EAAE;EACzD,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC12B,CAAC,EAAE0M,KAAK,CAAC;EAC9C,IAAM0B,KAAK,GAAG,EAAE;EAChB,IAAMyL,IAAI,GAAGjF,OAAO,CAACiF,IAAI;EACzB,IAAMkf,WAAW,GAAGlf,IAAI,KAAK,GAAG,GAAG,UAAU,GAAG,UAAU;EAC1D,IAAImf,cAAc,GAAG,KAAK;EAC1BrC,uBAAuB,CAACjqB,KAAK,EAAE,UAACiO,OAAO,EAAExD,YAAY,EAAEN,KAAK,EAAK;IAC/D,IAAI8D,OAAO,CAACoe,WAAW,CAAC,CAACvB,QAAQ,CAAC3d,IAAI,CAAC,EAAEwe,gBAAgB,CAAC,EAAE;MAC1DjqB,KAAK,CAACgB,IAAI,CAAC;QAACuL,OAAO,EAAPA,OAAO;QAAExD,YAAY,EAAZA,YAAY;QAAEN,KAAK,EAALA;MAAK,CAAC,CAAC;IAC5C;IACA,IAAI8D,OAAO,CAAC6d,OAAO,CAAChB,QAAQ,CAACt0B,CAAC,EAAEs0B,QAAQ,CAACp0B,CAAC,EAAEi1B,gBAAgB,CAAC,EAAE;MAC7DW,cAAc,GAAG,IAAI;IACvB;EACF,CAAC,CAAC;EACF,IAAIpkB,OAAO,CAACsiB,SAAS,IAAI,CAAC8B,cAAc,EAAE;IACxC,OAAO,EAAE;EACX;EACA,OAAO5qB,KAAK;AACd;AACA,IAAI6qB,WAAW,GAAG;EAChBC,KAAK,EAAE;IACLriB,KAAK,WAAAA,MAACnK,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,EAAE;MACzC,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC12B,CAAC,EAAE0M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,GAAG;MAChC,IAAMzL,KAAK,GAAGwG,OAAO,CAACsiB,SAAS,GAC3BkB,iBAAiB,CAAC1rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAEwe,gBAAgB,CAAC,GAC1DI,eAAe,CAAC/rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAE,KAAK,EAAEwe,gBAAgB,CAAC;MACnE,IAAMhX,QAAQ,GAAG,EAAE;MACnB,IAAI,CAACjT,KAAK,CAACL,MAAM,EAAE;QACjB,OAAO,EAAE;MACX;MACArB,KAAK,CAACmqB,4BAA4B,EAAE,CAAC3pB,OAAO,CAAC,UAACwK,IAAI,EAAK;QACrD,IAAMb,KAAK,GAAGzI,KAAK,CAAC,CAAC,CAAC,CAACyI,KAAK;QAC5B,IAAM8D,OAAO,GAAGjD,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;QAChC,IAAI8D,OAAO,IAAI,CAACA,OAAO,CAAC6Q,IAAI,EAAE;UAC5BnK,QAAQ,CAACjS,IAAI,CAAC;YAACuL,OAAO,EAAPA,OAAO;YAAExD,YAAY,EAAEO,IAAI,CAACb,KAAK;YAAEA,KAAK,EAALA;UAAK,CAAC,CAAC;QAC3D;MACF,CAAC,CAAC;MACF,OAAOwK,QAAQ;IACjB,CAAC;IACD5G,OAAO,WAAAA,QAAC/N,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,EAAE;MAC3C,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC12B,CAAC,EAAE0M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,IAAI;MACjC,IAAIzL,KAAK,GAAGwG,OAAO,CAACsiB,SAAS,GACzBkB,iBAAiB,CAAC1rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAEwe,gBAAgB,CAAC,GAC5DI,eAAe,CAAC/rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAE,KAAK,EAAEwe,gBAAgB,CAAC;MACjE,IAAIjqB,KAAK,CAACL,MAAM,GAAG,CAAC,EAAE;QACpB,IAAMoJ,YAAY,GAAG/I,KAAK,CAAC,CAAC,CAAC,CAAC+I,YAAY;QAC1C,IAAMG,IAAI,GAAG5K,KAAK,CAACgR,cAAc,CAACvG,YAAY,CAAC,CAACG,IAAI;QACpDlJ,KAAK,GAAG,EAAE;QACV,KAAK,IAAIhO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkX,IAAI,CAACvJ,MAAM,EAAE,EAAE3N,CAAC,EAAE;UACpCgO,KAAK,CAACgB,IAAI,CAAC;YAACuL,OAAO,EAAErD,IAAI,CAAClX,CAAC,CAAC;YAAE+W,YAAY,EAAZA,YAAY;YAAEN,KAAK,EAAEzW;UAAC,CAAC,CAAC;QACxD;MACF;MACA,OAAOgO,KAAK;IACd,CAAC;IACDgd,KAAK,WAAAA,MAAC1e,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,EAAE;MACzC,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC12B,CAAC,EAAE0M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,IAAI;MACjC,OAAOue,iBAAiB,CAAC1rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAEwe,gBAAgB,CAAC;IACnE,CAAC;IACDc,OAAO,WAAAA,QAACzsB,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,EAAE;MAC3C,IAAMb,QAAQ,GAAGd,mBAAmB,CAAC12B,CAAC,EAAE0M,KAAK,CAAC;MAC9C,IAAMmN,IAAI,GAAGjF,OAAO,CAACiF,IAAI,IAAI,IAAI;MACjC,OAAO4e,eAAe,CAAC/rB,KAAK,EAAE8qB,QAAQ,EAAE3d,IAAI,EAAEjF,OAAO,CAACsiB,SAAS,EAAEmB,gBAAgB,CAAC;IACpF,CAAC;IACDn1B,CAAC,WAAAA,EAACwJ,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,EAAE;MACrCzjB,OAAO,CAACiF,IAAI,GAAG,GAAG;MAClB,OAAOif,YAAY,CAACpsB,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,CAAC;IAC1D,CAAC;IACDj1B,CAAC,WAAAA,EAACsJ,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,EAAE;MACrCzjB,OAAO,CAACiF,IAAI,GAAG,GAAG;MAClB,OAAOif,YAAY,CAACpsB,KAAK,EAAE1M,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,CAAC;IAC1D;EACF;AACF,CAAC;AAED,IAAMe,gBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;AAC3D,SAASC,gBAAgBA,CAACC,KAAK,EAAE9B,QAAQ,EAAE;EACzC,OAAO8B,KAAK,CAAClf,MAAM,CAAC,UAAA1Z,CAAC;IAAA,OAAIA,CAAC,CAAC64B,GAAG,KAAK/B,QAAQ;EAAA,EAAC;AAC9C;AACA,SAASgC,2BAA2BA,CAACF,KAAK,EAAEzf,IAAI,EAAE;EAChD,OAAOyf,KAAK,CAAClf,MAAM,CAAC,UAAA1Z,CAAC;IAAA,OAAI04B,gBAAgB,CAAClQ,OAAO,CAACxoB,CAAC,CAAC64B,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI74B,CAAC,CAAC+4B,GAAG,CAAC5f,IAAI,KAAKA,IAAI;EAAA,EAAC;AACzF;AACA,SAAS6f,YAAYA,CAACJ,KAAK,EAAEzjB,OAAO,EAAE;EACpC,OAAOyjB,KAAK,CAACvU,IAAI,CAAC,UAACjlB,CAAC,EAAEQ,CAAC,EAAK;IAC1B,IAAMq5B,EAAE,GAAG9jB,OAAO,GAAGvV,CAAC,GAAGR,CAAC;IAC1B,IAAM85B,EAAE,GAAG/jB,OAAO,GAAG/V,CAAC,GAAGQ,CAAC;IAC1B,OAAOq5B,EAAE,CAAC7J,MAAM,KAAK8J,EAAE,CAAC9J,MAAM,GAC5B6J,EAAE,CAAC9iB,KAAK,GAAG+iB,EAAE,CAAC/iB,KAAK,GACnB8iB,EAAE,CAAC7J,MAAM,GAAG8J,EAAE,CAAC9J,MAAM;EACzB,CAAC,CAAC;AACJ;AACA,SAAS+J,SAASA,CAACC,KAAK,EAAE;EACxB,IAAMC,WAAW,GAAG,EAAE;EACtB,IAAI35B,CAAC,EAAEwW,IAAI,EAAE6iB,GAAG;EAChB,KAAKr5B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG,CAACkjB,KAAK,IAAI,EAAE,EAAE/rB,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACtDq5B,GAAG,GAAGK,KAAK,CAAC15B,CAAC,CAAC;IACd25B,WAAW,CAAC3qB,IAAI,CAAC;MACfyH,KAAK,EAAEzW,CAAC;MACRq5B,GAAG,EAAHA,GAAG;MACHF,GAAG,EAAEE,GAAG,CAACjC,QAAQ;MACjBxP,UAAU,EAAEyR,GAAG,CAACxR,YAAY,EAAE;MAC9B6H,MAAM,EAAE2J,GAAG,CAAC3J;IACd,CAAC,CAAC;EACJ;EACA,OAAOiK,WAAW;AACpB;AACA,SAASC,aAAaA,CAACC,OAAO,EAAEC,MAAM,EAAE;EACtC,IAAI95B,CAAC,EAAEwW,IAAI,EAAEujB,MAAM;EACnB,KAAK/5B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGqjB,OAAO,CAAClsB,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAChD+5B,MAAM,GAAGF,OAAO,CAAC75B,CAAC,CAAC;IACnB,IAAI+5B,MAAM,CAACnS,UAAU,EAAE;MACrBmS,MAAM,CAACvR,KAAK,GAAGuR,MAAM,CAACV,GAAG,CAACW,QAAQ,IAAIF,MAAM,CAACG,cAAc;MAC3DF,MAAM,CAACxR,MAAM,GAAGuR,MAAM,CAACI,aAAa;IACtC,CAAC,MAAM;MACLH,MAAM,CAACvR,KAAK,GAAGsR,MAAM,CAACK,YAAY;MAClCJ,MAAM,CAACxR,MAAM,GAAGwR,MAAM,CAACV,GAAG,CAACW,QAAQ,IAAIF,MAAM,CAACM,eAAe;IAC/D;EACF;AACF;AACA,SAASC,gBAAgBA,CAACX,KAAK,EAAE;EAC/B,IAAMC,WAAW,GAAGF,SAAS,CAACC,KAAK,CAAC;EACpC,IAAMM,QAAQ,GAAGV,YAAY,CAACK,WAAW,CAAC3f,MAAM,CAAC,UAAAsgB,IAAI;IAAA,OAAIA,IAAI,CAACjB,GAAG,CAACW,QAAQ;EAAA,EAAC,EAAE,IAAI,CAAC;EAClF,IAAM/jB,IAAI,GAAGqjB,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC;EACtE,IAAM5jB,KAAK,GAAGujB,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,OAAO,CAAC,CAAC;EAClE,IAAM7jB,GAAG,GAAGwjB,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC;EACpE,IAAM3jB,MAAM,GAAGsjB,YAAY,CAACL,gBAAgB,CAACU,WAAW,EAAE,QAAQ,CAAC,CAAC;EACpE,IAAMY,gBAAgB,GAAGnB,2BAA2B,CAACO,WAAW,EAAE,GAAG,CAAC;EACtE,IAAMa,cAAc,GAAGpB,2BAA2B,CAACO,WAAW,EAAE,GAAG,CAAC;EACpE,OAAO;IACLK,QAAQ,EAARA,QAAQ;IACRS,UAAU,EAAExkB,IAAI,CAAC0B,MAAM,CAAC7B,GAAG,CAAC;IAC5B4kB,cAAc,EAAE3kB,KAAK,CAAC4B,MAAM,CAAC6iB,cAAc,CAAC,CAAC7iB,MAAM,CAAC3B,MAAM,CAAC,CAAC2B,MAAM,CAAC4iB,gBAAgB,CAAC;IACpFpZ,SAAS,EAAE8X,gBAAgB,CAACU,WAAW,EAAE,WAAW,CAAC;IACrDgB,QAAQ,EAAE1kB,IAAI,CAAC0B,MAAM,CAAC5B,KAAK,CAAC,CAAC4B,MAAM,CAAC6iB,cAAc,CAAC;IACnD5S,UAAU,EAAE9R,GAAG,CAAC6B,MAAM,CAAC3B,MAAM,CAAC,CAAC2B,MAAM,CAAC4iB,gBAAgB;EACxD,CAAC;AACH;AACA,SAASK,cAAcA,CAACC,UAAU,EAAE1Z,SAAS,EAAEzhB,CAAC,EAAEQ,CAAC,EAAE;EACnD,OAAOgN,IAAI,CAACuC,GAAG,CAACorB,UAAU,CAACn7B,CAAC,CAAC,EAAEyhB,SAAS,CAACzhB,CAAC,CAAC,CAAC,GAAGwN,IAAI,CAACuC,GAAG,CAACorB,UAAU,CAAC36B,CAAC,CAAC,EAAEihB,SAAS,CAACjhB,CAAC,CAAC,CAAC;AACtF;AACA,SAAS46B,gBAAgBA,CAACD,UAAU,EAAEE,UAAU,EAAE;EAChDF,UAAU,CAAC/kB,GAAG,GAAG5I,IAAI,CAACuC,GAAG,CAACorB,UAAU,CAAC/kB,GAAG,EAAEilB,UAAU,CAACjlB,GAAG,CAAC;EACzD+kB,UAAU,CAAC5kB,IAAI,GAAG/I,IAAI,CAACuC,GAAG,CAACorB,UAAU,CAAC5kB,IAAI,EAAE8kB,UAAU,CAAC9kB,IAAI,CAAC;EAC5D4kB,UAAU,CAAC7kB,MAAM,GAAG9I,IAAI,CAACuC,GAAG,CAACorB,UAAU,CAAC7kB,MAAM,EAAE+kB,UAAU,CAAC/kB,MAAM,CAAC;EAClE6kB,UAAU,CAAC9kB,KAAK,GAAG7I,IAAI,CAACuC,GAAG,CAACorB,UAAU,CAAC9kB,KAAK,EAAEglB,UAAU,CAAChlB,KAAK,CAAC;AACjE;AACA,SAASilB,UAAUA,CAAC7Z,SAAS,EAAE2Y,MAAM,EAAEC,MAAM,EAAE;EAC7C,IAAMV,GAAG,GAAGU,MAAM,CAACV,GAAG;EACtB,IAAMwB,UAAU,GAAG1Z,SAAS,CAAC0Z,UAAU;EACvC,IAAI,CAAC56B,QAAQ,CAAC85B,MAAM,CAACZ,GAAG,CAAC,EAAE;IACzB,IAAIY,MAAM,CAAC9kB,IAAI,EAAE;MACfkM,SAAS,CAAC4Y,MAAM,CAACZ,GAAG,CAAC,IAAIY,MAAM,CAAC9kB,IAAI;IACtC;IACA8kB,MAAM,CAAC9kB,IAAI,GAAG8kB,MAAM,CAACnS,UAAU,GAAGyR,GAAG,CAAC9Q,MAAM,GAAG8Q,GAAG,CAAC7Q,KAAK;IACxDrH,SAAS,CAAC4Y,MAAM,CAACZ,GAAG,CAAC,IAAIY,MAAM,CAAC9kB,IAAI;EACtC;EACA,IAAIokB,GAAG,CAAC4B,UAAU,EAAE;IAClBH,gBAAgB,CAACD,UAAU,EAAExB,GAAG,CAAC4B,UAAU,EAAE,CAAC;EAChD;EACA,IAAMC,QAAQ,GAAGhuB,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEqqB,MAAM,CAACqB,UAAU,GAAGP,cAAc,CAACC,UAAU,EAAE1Z,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EACxG,IAAMia,SAAS,GAAGluB,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEqqB,MAAM,CAACuB,WAAW,GAAGT,cAAc,CAACC,UAAU,EAAE1Z,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;EAC1G,IAAMma,YAAY,GAAGJ,QAAQ,KAAK/Z,SAAS,CAACve,CAAC;EAC7C,IAAM24B,aAAa,GAAGH,SAAS,KAAKja,SAAS,CAACngB,CAAC;EAC/CmgB,SAAS,CAACve,CAAC,GAAGs4B,QAAQ;EACtB/Z,SAAS,CAACngB,CAAC,GAAGo6B,SAAS;EACvB,OAAOrB,MAAM,CAACnS,UAAU,GACpB;IAAC4T,IAAI,EAAEF,YAAY;IAAEG,KAAK,EAAEF;EAAa,CAAC,GAC1C;IAACC,IAAI,EAAED,aAAa;IAAEE,KAAK,EAAEH;EAAY,CAAC;AAChD;AACA,SAASI,gBAAgBA,CAACva,SAAS,EAAE;EACnC,IAAM0Z,UAAU,GAAG1Z,SAAS,CAAC0Z,UAAU;EACvC,SAASc,SAASA,CAACxC,GAAG,EAAE;IACtB,IAAMyC,MAAM,GAAG1uB,IAAI,CAACuC,GAAG,CAACorB,UAAU,CAAC1B,GAAG,CAAC,GAAGhY,SAAS,CAACgY,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5DhY,SAAS,CAACgY,GAAG,CAAC,IAAIyC,MAAM;IACxB,OAAOA,MAAM;EACf;EACAza,SAAS,CAACne,CAAC,IAAI24B,SAAS,CAAC,KAAK,CAAC;EAC/Bxa,SAAS,CAACre,CAAC,IAAI64B,SAAS,CAAC,MAAM,CAAC;EAChCA,SAAS,CAAC,OAAO,CAAC;EAClBA,SAAS,CAAC,QAAQ,CAAC;AACrB;AACA,SAASE,UAAUA,CAACjU,UAAU,EAAEzG,SAAS,EAAE;EACzC,IAAM0Z,UAAU,GAAG1Z,SAAS,CAAC0Z,UAAU;EACvC,SAASiB,kBAAkBA,CAACC,SAAS,EAAE;IACrC,IAAMC,MAAM,GAAG;MAAC/lB,IAAI,EAAE,CAAC;MAAEH,GAAG,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAC,CAAC;IACrD+lB,SAAS,CAACjvB,OAAO,CAAC,UAACqsB,GAAG,EAAK;MACzB6C,MAAM,CAAC7C,GAAG,CAAC,GAAGjsB,IAAI,CAACuC,GAAG,CAAC0R,SAAS,CAACgY,GAAG,CAAC,EAAE0B,UAAU,CAAC1B,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAO6C,MAAM;EACf;EACA,OAAOpU,UAAU,GACbkU,kBAAkB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,GACrCA,kBAAkB,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3C;AACA,SAASG,QAAQA,CAACvC,KAAK,EAAEvY,SAAS,EAAE2Y,MAAM,EAAE;EAC1C,IAAMoC,UAAU,GAAG,EAAE;EACrB,IAAIl8B,CAAC,EAAEwW,IAAI,EAAEujB,MAAM,EAAEV,GAAG,EAAE8C,KAAK,EAAElJ,OAAO;EACxC,KAAKjzB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkjB,KAAK,CAAC/rB,MAAM,EAAEwuB,KAAK,GAAG,CAAC,EAAEn8B,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACzD+5B,MAAM,GAAGL,KAAK,CAAC15B,CAAC,CAAC;IACjBq5B,GAAG,GAAGU,MAAM,CAACV,GAAG;IAChBA,GAAG,CAACrnB,MAAM,CACR+nB,MAAM,CAACvR,KAAK,IAAIrH,SAAS,CAACve,CAAC,EAC3Bm3B,MAAM,CAACxR,MAAM,IAAIpH,SAAS,CAACngB,CAAC,EAC5B66B,UAAU,CAAC9B,MAAM,CAACnS,UAAU,EAAEzG,SAAS,CAAC,CACzC;IACD,IAAAib,WAAA,GAAsBpB,UAAU,CAAC7Z,SAAS,EAAE2Y,MAAM,EAAEC,MAAM,CAAC;MAApDyB,IAAI,GAAAY,WAAA,CAAJZ,IAAI;MAAEC,KAAK,GAAAW,WAAA,CAALX,KAAK;IAClBU,KAAK,IAAIX,IAAI,IAAIU,UAAU,CAACvuB,MAAM;IAClCslB,OAAO,GAAGA,OAAO,IAAIwI,KAAK;IAC1B,IAAI,CAACpC,GAAG,CAACW,QAAQ,EAAE;MACjBkC,UAAU,CAACltB,IAAI,CAAC+qB,MAAM,CAAC;IACzB;EACF;EACA,OAAOoC,KAAK,IAAIF,QAAQ,CAACC,UAAU,EAAE/a,SAAS,EAAE2Y,MAAM,CAAC,IAAI7G,OAAO;AACpE;AACA,SAASoJ,UAAUA,CAAC3C,KAAK,EAAEvY,SAAS,EAAE2Y,MAAM,EAAE;EAC5C,IAAMwC,WAAW,GAAGxC,MAAM,CAACyC,OAAO;EAClC,IAAIz5B,CAAC,GAAGqe,SAAS,CAACre,CAAC;EACnB,IAAIE,CAAC,GAAGme,SAAS,CAACne,CAAC;EACnB,IAAIhD,CAAC,EAAEwW,IAAI,EAAEujB,MAAM,EAAEV,GAAG;EACxB,KAAKr5B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkjB,KAAK,CAAC/rB,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC9C+5B,MAAM,GAAGL,KAAK,CAAC15B,CAAC,CAAC;IACjBq5B,GAAG,GAAGU,MAAM,CAACV,GAAG;IAChB,IAAIU,MAAM,CAACnS,UAAU,EAAE;MACrByR,GAAG,CAACpjB,IAAI,GAAGojB,GAAG,CAACW,QAAQ,GAAGsC,WAAW,CAACrmB,IAAI,GAAGkL,SAAS,CAAClL,IAAI;MAC3DojB,GAAG,CAACtjB,KAAK,GAAGsjB,GAAG,CAACW,QAAQ,GAAGF,MAAM,CAACqB,UAAU,GAAGmB,WAAW,CAACvmB,KAAK,GAAGoL,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACve,CAAC;MAC/Fy2B,GAAG,CAACvjB,GAAG,GAAG9S,CAAC;MACXq2B,GAAG,CAACrjB,MAAM,GAAGhT,CAAC,GAAGq2B,GAAG,CAAC9Q,MAAM;MAC3B8Q,GAAG,CAAC7Q,KAAK,GAAG6Q,GAAG,CAACtjB,KAAK,GAAGsjB,GAAG,CAACpjB,IAAI;MAChCjT,CAAC,GAAGq2B,GAAG,CAACrjB,MAAM;IAChB,CAAC,MAAM;MACLqjB,GAAG,CAACpjB,IAAI,GAAGnT,CAAC;MACZu2B,GAAG,CAACtjB,KAAK,GAAGjT,CAAC,GAAGu2B,GAAG,CAAC7Q,KAAK;MACzB6Q,GAAG,CAACvjB,GAAG,GAAGujB,GAAG,CAACW,QAAQ,GAAGsC,WAAW,CAACxmB,GAAG,GAAGqL,SAAS,CAACrL,GAAG;MACxDujB,GAAG,CAACrjB,MAAM,GAAGqjB,GAAG,CAACW,QAAQ,GAAGF,MAAM,CAACuB,WAAW,GAAGiB,WAAW,CAACtmB,MAAM,GAAGmL,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACngB,CAAC;MACjGq4B,GAAG,CAAC9Q,MAAM,GAAG8Q,GAAG,CAACrjB,MAAM,GAAGqjB,GAAG,CAACvjB,GAAG;MACjChT,CAAC,GAAGu2B,GAAG,CAACtjB,KAAK;IACf;EACF;EACAoL,SAAS,CAACre,CAAC,GAAGA,CAAC;EACfqe,SAAS,CAACne,CAAC,GAAGA,CAAC;AACjB;AACA3C,QAAQ,CAACuO,GAAG,CAAC,QAAQ,EAAE;EACrB2tB,OAAO,EAAE;IACPzmB,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AACF,IAAI4jB,OAAO,GAAG;EACZ2C,MAAM,WAAAA,OAAClwB,KAAK,EAAE4B,IAAI,EAAE;IAClB,IAAI,CAAC5B,KAAK,CAACotB,KAAK,EAAE;MAChBptB,KAAK,CAACotB,KAAK,GAAG,EAAE;IAClB;IACAxrB,IAAI,CAAC8rB,QAAQ,GAAG9rB,IAAI,CAAC8rB,QAAQ,IAAI,KAAK;IACtC9rB,IAAI,CAACkpB,QAAQ,GAAGlpB,IAAI,CAACkpB,QAAQ,IAAI,KAAK;IACtClpB,IAAI,CAACwhB,MAAM,GAAGxhB,IAAI,CAACwhB,MAAM,IAAI,CAAC;IAC9BxhB,IAAI,CAACuuB,OAAO,GAAGvuB,IAAI,CAACuuB,OAAO,IAAI,YAAW;MACxC,OAAO,CAAC;QACNv5B,CAAC,EAAE,CAAC;QACJ+K,IAAI,WAAAA,KAACkT,SAAS,EAAE;UACdjT,IAAI,CAACD,IAAI,CAACkT,SAAS,CAAC;QACtB;MACF,CAAC,CAAC;IACJ,CAAC;IACD7U,KAAK,CAACotB,KAAK,CAAC1qB,IAAI,CAACd,IAAI,CAAC;EACxB,CAAC;EACDwuB,SAAS,WAAAA,UAACpwB,KAAK,EAAEqwB,UAAU,EAAE;IAC3B,IAAMlmB,KAAK,GAAGnK,KAAK,CAACotB,KAAK,GAAGptB,KAAK,CAACotB,KAAK,CAAC5Q,OAAO,CAAC6T,UAAU,CAAC,GAAG,CAAC,CAAC;IAChE,IAAIlmB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBnK,KAAK,CAACotB,KAAK,CAAC1V,MAAM,CAACvN,KAAK,EAAE,CAAC,CAAC;IAC9B;EACF,CAAC;EACD1C,SAAS,WAAAA,UAACzH,KAAK,EAAE4B,IAAI,EAAEsG,OAAO,EAAE;IAC9BtG,IAAI,CAAC8rB,QAAQ,GAAGxlB,OAAO,CAACwlB,QAAQ;IAChC9rB,IAAI,CAACkpB,QAAQ,GAAG5iB,OAAO,CAAC4iB,QAAQ;IAChClpB,IAAI,CAACwhB,MAAM,GAAGlb,OAAO,CAACkb,MAAM;EAC9B,CAAC;EACD1d,MAAM,WAAAA,OAAC1F,KAAK,EAAEkc,KAAK,EAAED,MAAM,EAAEqU,UAAU,EAAE;IACvC,IAAI,CAACtwB,KAAK,EAAE;MACV;IACF;IACA,IAAMiwB,OAAO,GAAGl5B,SAAS,CAACiJ,KAAK,CAACkI,OAAO,CAACulB,MAAM,CAACwC,OAAO,CAAC;IACvD,IAAMtC,cAAc,GAAG/sB,IAAI,CAACuC,GAAG,CAAC+Y,KAAK,GAAG+T,OAAO,CAAC/T,KAAK,EAAE,CAAC,CAAC;IACzD,IAAM4R,eAAe,GAAGltB,IAAI,CAACuC,GAAG,CAAC8Y,MAAM,GAAGgU,OAAO,CAAChU,MAAM,EAAE,CAAC,CAAC;IAC5D,IAAMmR,KAAK,GAAGW,gBAAgB,CAAC/tB,KAAK,CAACotB,KAAK,CAAC;IAC3C,IAAMmD,aAAa,GAAGnD,KAAK,CAACiB,QAAQ;IACpC,IAAMmC,eAAe,GAAGpD,KAAK,CAAC9R,UAAU;IACxCrkB,IAAI,CAAC+I,KAAK,CAACotB,KAAK,EAAE,UAAAL,GAAG,EAAI;MACvB,IAAI,OAAOA,GAAG,CAAC0D,YAAY,KAAK,UAAU,EAAE;QAC1C1D,GAAG,CAAC0D,YAAY,EAAE;MACpB;IACF,CAAC,CAAC;IACF,IAAMC,uBAAuB,GAAGH,aAAa,CAACvtB,MAAM,CAAC,UAACkf,KAAK,EAAE8L,IAAI;MAAA,OAC/DA,IAAI,CAACjB,GAAG,CAAC7kB,OAAO,IAAI8lB,IAAI,CAACjB,GAAG,CAAC7kB,OAAO,CAAC4f,OAAO,KAAK,KAAK,GAAG5F,KAAK,GAAGA,KAAK,GAAG,CAAC;IAAA,GAAE,CAAC,CAAC,IAAI,CAAC;IACrF,IAAMsL,MAAM,GAAGjnB,MAAM,CAACqP,MAAM,CAAC;MAC3BiZ,UAAU,EAAE3S,KAAK;MACjB6S,WAAW,EAAE9S,MAAM;MACnBgU,OAAO,EAAPA,OAAO;MACPtC,cAAc,EAAdA,cAAc;MACdG,eAAe,EAAfA,eAAe;MACfD,YAAY,EAAEF,cAAc,GAAG,CAAC,GAAG+C,uBAAuB;MAC1D9C,aAAa,EAAEE,eAAe,GAAG;IACnC,CAAC,CAAC;IACF,IAAMS,UAAU,GAAGhoB,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEqnB,OAAO,CAAC;IAC7CzB,gBAAgB,CAACD,UAAU,EAAEx3B,SAAS,CAACu5B,UAAU,CAAC,CAAC;IACnD,IAAMzb,SAAS,GAAGtO,MAAM,CAACqC,MAAM,CAAC;MAC9B2lB,UAAU,EAAVA,UAAU;MACVj4B,CAAC,EAAEq3B,cAAc;MACjBj5B,CAAC,EAAEo5B,eAAe;MAClBt3B,CAAC,EAAEy5B,OAAO,CAACtmB,IAAI;MACfjT,CAAC,EAAEu5B,OAAO,CAACzmB;IACb,CAAC,EAAEymB,OAAO,CAAC;IACX3C,aAAa,CAACiD,aAAa,CAACllB,MAAM,CAACmlB,eAAe,CAAC,EAAEhD,MAAM,CAAC;IAC5DmC,QAAQ,CAACvC,KAAK,CAACM,QAAQ,EAAE7Y,SAAS,EAAE2Y,MAAM,CAAC;IAC3CmC,QAAQ,CAACY,aAAa,EAAE1b,SAAS,EAAE2Y,MAAM,CAAC;IAC1C,IAAImC,QAAQ,CAACa,eAAe,EAAE3b,SAAS,EAAE2Y,MAAM,CAAC,EAAE;MAChDmC,QAAQ,CAACY,aAAa,EAAE1b,SAAS,EAAE2Y,MAAM,CAAC;IAC5C;IACA4B,gBAAgB,CAACva,SAAS,CAAC;IAC3Bkb,UAAU,CAAC3C,KAAK,CAACe,UAAU,EAAEtZ,SAAS,EAAE2Y,MAAM,CAAC;IAC/C3Y,SAAS,CAACre,CAAC,IAAIqe,SAAS,CAACve,CAAC;IAC1Bue,SAAS,CAACne,CAAC,IAAIme,SAAS,CAACngB,CAAC;IAC1Bq7B,UAAU,CAAC3C,KAAK,CAACgB,cAAc,EAAEvZ,SAAS,EAAE2Y,MAAM,CAAC;IACnDxtB,KAAK,CAAC6U,SAAS,GAAG;MAChBlL,IAAI,EAAEkL,SAAS,CAAClL,IAAI;MACpBH,GAAG,EAAEqL,SAAS,CAACrL,GAAG;MAClBC,KAAK,EAAEoL,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACve,CAAC;MACnCoT,MAAM,EAAEmL,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACngB,CAAC;MACnCunB,MAAM,EAAEpH,SAAS,CAACngB,CAAC;MACnBwnB,KAAK,EAAErH,SAAS,CAACve;IACnB,CAAC;IACDW,IAAI,CAACm2B,KAAK,CAACvY,SAAS,EAAE,UAAC4Y,MAAM,EAAK;MAChC,IAAMV,GAAG,GAAGU,MAAM,CAACV,GAAG;MACtBxmB,MAAM,CAACqC,MAAM,CAACmkB,GAAG,EAAE/sB,KAAK,CAAC6U,SAAS,CAAC;MACnCkY,GAAG,CAACrnB,MAAM,CAACmP,SAAS,CAACve,CAAC,EAAEue,SAAS,CAACngB,CAAC,CAAC;IACtC,CAAC,CAAC;EACJ;AACF,CAAC;AAAC,IAEIi8B,YAAY;EAAA,SAAAA,aAAA;IAAAtxB,eAAA,OAAAsxB,YAAA;EAAA;EAAA/wB,YAAA,CAAA+wB,YAAA;IAAA9wB,GAAA;IAAAC,KAAA,EAChB,SAAA8wB,eAAeC,MAAM,EAAExN,WAAW,EAAE,CAAC;EAAC;IAAAxjB,GAAA;IAAAC,KAAA,EACtC,SAAAgxB,eAAe7b,OAAO,EAAE;MACtB,OAAO,KAAK;IACd;EAAC;IAAApV,GAAA;IAAAC,KAAA,EACD,SAAAixB,iBAAiB/wB,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE,CAAC;EAAC;IAAAnxB,GAAA;IAAAC,KAAA,EAC1C,SAAAmxB,oBAAoBjxB,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE,CAAC;EAAC;IAAAnxB,GAAA;IAAAC,KAAA,EAC7C,SAAAoxB,oBAAA,EAAsB;MACpB,OAAO,CAAC;IACV;EAAC;IAAArxB,GAAA;IAAAC,KAAA,EACD,SAAA3I,eAAe8W,OAAO,EAAEiO,KAAK,EAAED,MAAM,EAAEoH,WAAW,EAAE;MAClDnH,KAAK,GAAGtb,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE+Y,KAAK,IAAIjO,OAAO,CAACiO,KAAK,CAAC;MAC3CD,MAAM,GAAGA,MAAM,IAAIhO,OAAO,CAACgO,MAAM;MACjC,OAAO;QACLC,KAAK,EAALA,KAAK;QACLD,MAAM,EAAErb,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEkgB,WAAW,GAAGziB,IAAI,CAACoE,KAAK,CAACkX,KAAK,GAAGmH,WAAW,CAAC,GAAGpH,MAAM;MAC5E,CAAC;IACH;EAAC;IAAApc,GAAA;IAAAC,KAAA,EACD,SAAAqxB,WAAWN,MAAM,EAAE;MACjB,OAAO,IAAI;IACb;EAAC;EAAA,OAAAF,YAAA;AAAA;AAAA,IAGGS,aAAa,0BAAAC,aAAA;EAAA7W,SAAA,CAAA4W,aAAA,EAAAC,aAAA;EAAA,IAAAC,OAAA,GAAA5W,YAAA,CAAA0W,aAAA;EAAA,SAAAA,cAAA;IAAA/xB,eAAA,OAAA+xB,aAAA;IAAA,OAAAE,OAAA,CAAAzuB,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAwxB,aAAA;IAAAvxB,GAAA;IAAAC,KAAA,EACjB,SAAA8wB,eAAehvB,IAAI,EAAE;MACnB,OAAOA,IAAI,IAAIA,IAAI,CAACsQ,UAAU,IAAItQ,IAAI,CAACsQ,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI;IACjE;EAAC;EAAA,OAAAkf,aAAA;AAAA,EAHyBT,YAAY;AAMxC,IAAMY,WAAW,GAAG,UAAU;AAC9B,IAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAE,WAAW;EACtBC,QAAQ,EAAE,SAAS;EACnBC,YAAY,EAAE,YAAY;EAC1BC,WAAW,EAAE,WAAW;EACxBC,WAAW,EAAE,WAAW;EACxBC,SAAS,EAAE,SAAS;EACpBC,YAAY,EAAE,UAAU;EACxBC,UAAU,EAAE;AACd,CAAC;AACD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAGpyB,KAAK;EAAA,OAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE;AAAA;AAC7D,SAASqyB,UAAUA,CAACtB,MAAM,EAAExN,WAAW,EAAE;EACvC,IAAMK,KAAK,GAAGmN,MAAM,CAACnN,KAAK;EAC1B,IAAM0O,YAAY,GAAGvB,MAAM,CAACwB,YAAY,CAAC,QAAQ,CAAC;EAClD,IAAMC,WAAW,GAAGzB,MAAM,CAACwB,YAAY,CAAC,OAAO,CAAC;EAChDxB,MAAM,CAACU,WAAW,CAAC,GAAG;IACpB7wB,OAAO,EAAE;MACPub,MAAM,EAAEmW,YAAY;MACpBlW,KAAK,EAAEoW,WAAW;MAClB5O,KAAK,EAAE;QACLoE,OAAO,EAAEpE,KAAK,CAACoE,OAAO;QACtB7L,MAAM,EAAEyH,KAAK,CAACzH,MAAM;QACpBC,KAAK,EAAEwH,KAAK,CAACxH;MACf;IACF;EACF,CAAC;EACDwH,KAAK,CAACoE,OAAO,GAAGpE,KAAK,CAACoE,OAAO,IAAI,OAAO;EACxCpE,KAAK,CAAC6O,SAAS,GAAG7O,KAAK,CAAC6O,SAAS,IAAI,YAAY;EACjD,IAAIL,aAAa,CAACI,WAAW,CAAC,EAAE;IAC9B,IAAME,YAAY,GAAGj7B,YAAY,CAACs5B,MAAM,EAAE,OAAO,CAAC;IAClD,IAAI2B,YAAY,KAAK7yB,SAAS,EAAE;MAC9BkxB,MAAM,CAAC3U,KAAK,GAAGsW,YAAY;IAC7B;EACF;EACA,IAAIN,aAAa,CAACE,YAAY,CAAC,EAAE;IAC/B,IAAIvB,MAAM,CAACnN,KAAK,CAACzH,MAAM,KAAK,EAAE,EAAE;MAC9B4U,MAAM,CAAC5U,MAAM,GAAG4U,MAAM,CAAC3U,KAAK,IAAImH,WAAW,IAAI,CAAC,CAAC;IACnD,CAAC,MAAM;MACL,IAAMoP,aAAa,GAAGl7B,YAAY,CAACs5B,MAAM,EAAE,QAAQ,CAAC;MACpD,IAAI4B,aAAa,KAAK9yB,SAAS,EAAE;QAC/BkxB,MAAM,CAAC5U,MAAM,GAAGwW,aAAa;MAC/B;IACF;EACF;EACA,OAAO5B,MAAM;AACf;AACA,IAAM6B,oBAAoB,GAAG/6B,4BAA4B,GAAG;EAACg7B,OAAO,EAAE;AAAI,CAAC,GAAG,KAAK;AACnF,SAASC,WAAWA,CAACC,IAAI,EAAE1yB,IAAI,EAAE6wB,QAAQ,EAAE;EACzC6B,IAAI,CAAC9B,gBAAgB,CAAC5wB,IAAI,EAAE6wB,QAAQ,EAAE0B,oBAAoB,CAAC;AAC7D;AACA,SAASI,cAAcA,CAAC9yB,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE;EAC7ChxB,KAAK,CAAC6wB,MAAM,CAACI,mBAAmB,CAAC9wB,IAAI,EAAE6wB,QAAQ,EAAE0B,oBAAoB,CAAC;AACxE;AACA,SAASK,eAAeA,CAACvwB,KAAK,EAAExC,KAAK,EAAE;EACrC,IAAMG,IAAI,GAAGqxB,WAAW,CAAChvB,KAAK,CAACrC,IAAI,CAAC,IAAIqC,KAAK,CAACrC,IAAI;EAClD,IAAA6yB,qBAAA,GAAev8B,qBAAqB,CAAC+L,KAAK,EAAExC,KAAK,CAAC;IAA3CxJ,CAAC,GAAAw8B,qBAAA,CAADx8B,CAAC;IAAEE,CAAC,GAAAs8B,qBAAA,CAADt8B,CAAC;EACX,OAAO;IACLyJ,IAAI,EAAJA,IAAI;IACJH,KAAK,EAALA,KAAK;IACLizB,MAAM,EAAEzwB,KAAK;IACbhM,CAAC,EAAEA,CAAC,KAAKmJ,SAAS,GAAGnJ,CAAC,GAAG,IAAI;IAC7BE,CAAC,EAAEA,CAAC,KAAKiJ,SAAS,GAAGjJ,CAAC,GAAG;EAC3B,CAAC;AACH;AACA,SAASw8B,oBAAoBA,CAAClzB,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAG7wB,KAAK,CAAC6wB,MAAM;EAC3B,IAAMsC,SAAS,GAAGtC,MAAM,IAAIx5B,cAAc,CAACw5B,MAAM,CAAC;EAClD,IAAM5iB,OAAO,GAAGklB,SAAS,IAAItC,MAAM;EACnC,IAAMuC,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,UAAAC,OAAO,EAAI;IAC/C,IAAMzlB,MAAM,GAAGxW,cAAc,CAAC4W,OAAO,CAAC;IACtCqlB,OAAO,CAAC9yB,OAAO,CAAC,UAAAoZ,KAAK,EAAI;MACvB,KAAK,IAAIlmB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkmB,KAAK,CAAC2Z,UAAU,CAAClyB,MAAM,EAAE3N,CAAC,EAAE,EAAE;QAChD,IAAM8/B,KAAK,GAAG5Z,KAAK,CAAC2Z,UAAU,CAAC7/B,CAAC,CAAC;QACjC,IAAI8/B,KAAK,KAAKvlB,OAAO,IAAIulB,KAAK,KAAK3lB,MAAM,EAAE;UACzCmjB,QAAQ,CAACpX,KAAK,CAACpV,MAAM,CAAC;QACxB;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF4uB,QAAQ,CAACK,OAAO,CAACC,QAAQ,EAAE;IAACC,SAAS,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;EAC5D,OAAOR,QAAQ;AACjB;AACA,SAASS,oBAAoBA,CAAC7zB,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAG7wB,KAAK,CAAC6wB,MAAM;EAC3B,IAAMsC,SAAS,GAAGtC,MAAM,IAAIx5B,cAAc,CAACw5B,MAAM,CAAC;EAClD,IAAI,CAACsC,SAAS,EAAE;IACd;EACF;EACA,IAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,UAAAC,OAAO,EAAI;IAC/CA,OAAO,CAAC9yB,OAAO,CAAC,UAAAoZ,KAAK,EAAI;MACvB,KAAK,IAAIlmB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkmB,KAAK,CAACka,YAAY,CAACzyB,MAAM,EAAE3N,CAAC,EAAE,EAAE;QAClD,IAAIkmB,KAAK,CAACka,YAAY,CAACpgC,CAAC,CAAC,KAAKm9B,MAAM,EAAE;UACpCG,QAAQ,EAAE;UACV;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFoC,QAAQ,CAACK,OAAO,CAACN,SAAS,EAAE;IAACQ,SAAS,EAAE;EAAI,CAAC,CAAC;EAC9C,OAAOP,QAAQ;AACjB;AACA,IAAMW,kBAAkB,GAAG,IAAIv0B,GAAG,EAAE;AACpC,IAAIw0B,mBAAmB,GAAG,CAAC;AAC3B,SAASC,cAAcA,CAAA,EAAG;EACxB,IAAMC,GAAG,GAAGhzB,MAAM,CAACizB,gBAAgB;EACnC,IAAID,GAAG,KAAKF,mBAAmB,EAAE;IAC/B;EACF;EACAA,mBAAmB,GAAGE,GAAG;EACzBH,kBAAkB,CAACvzB,OAAO,CAAC,UAACwG,MAAM,EAAEhH,KAAK,EAAK;IAC5C,IAAIA,KAAK,CAACo0B,uBAAuB,KAAKF,GAAG,EAAE;MACzCltB,MAAM,EAAE;IACV;EACF,CAAC,CAAC;AACJ;AACA,SAASqtB,6BAA6BA,CAACr0B,KAAK,EAAEgH,MAAM,EAAE;EACpD,IAAI,CAAC+sB,kBAAkB,CAACprB,IAAI,EAAE;IAC5BzH,MAAM,CAAC6vB,gBAAgB,CAAC,QAAQ,EAAEkD,cAAc,CAAC;EACnD;EACAF,kBAAkB,CAACzxB,GAAG,CAACtC,KAAK,EAAEgH,MAAM,CAAC;AACvC;AACA,SAASstB,+BAA+BA,CAACt0B,KAAK,EAAE;EAC9C+zB,kBAAkB,CAACvwB,MAAM,CAACxD,KAAK,CAAC;EAChC,IAAI,CAAC+zB,kBAAkB,CAACprB,IAAI,EAAE;IAC5BzH,MAAM,CAAC+vB,mBAAmB,CAAC,QAAQ,EAAEgD,cAAc,CAAC;EACtD;AACF;AACA,SAASM,oBAAoBA,CAACv0B,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAG7wB,KAAK,CAAC6wB,MAAM;EAC3B,IAAMsC,SAAS,GAAGtC,MAAM,IAAIx5B,cAAc,CAACw5B,MAAM,CAAC;EAClD,IAAI,CAACsC,SAAS,EAAE;IACd;EACF;EACA,IAAMnsB,MAAM,GAAGvP,SAAS,CAAC,UAACykB,KAAK,EAAED,MAAM,EAAK;IAC1C,IAAM3lB,CAAC,GAAG68B,SAAS,CAACqB,WAAW;IAC/BxD,QAAQ,CAAC9U,KAAK,EAAED,MAAM,CAAC;IACvB,IAAI3lB,CAAC,GAAG68B,SAAS,CAACqB,WAAW,EAAE;MAC7BxD,QAAQ,EAAE;IACZ;EACF,CAAC,EAAE9vB,MAAM,CAAC;EACV,IAAMkyB,QAAQ,GAAG,IAAIqB,cAAc,CAAC,UAAAnB,OAAO,EAAI;IAC7C,IAAM1Z,KAAK,GAAG0Z,OAAO,CAAC,CAAC,CAAC;IACxB,IAAMpX,KAAK,GAAGtC,KAAK,CAAC8a,WAAW,CAACxY,KAAK;IACrC,IAAMD,MAAM,GAAGrC,KAAK,CAAC8a,WAAW,CAACzY,MAAM;IACvC,IAAIC,KAAK,KAAK,CAAC,IAAID,MAAM,KAAK,CAAC,EAAE;MAC/B;IACF;IACAjV,MAAM,CAACkV,KAAK,EAAED,MAAM,CAAC;EACvB,CAAC,CAAC;EACFmX,QAAQ,CAACK,OAAO,CAACN,SAAS,CAAC;EAC3BkB,6BAA6B,CAACr0B,KAAK,EAAEgH,MAAM,CAAC;EAC5C,OAAOosB,QAAQ;AACjB;AACA,SAASuB,eAAeA,CAAC30B,KAAK,EAAEG,IAAI,EAAEizB,QAAQ,EAAE;EAC9C,IAAIA,QAAQ,EAAE;IACZA,QAAQ,CAACwB,UAAU,EAAE;EACvB;EACA,IAAIz0B,IAAI,KAAK,QAAQ,EAAE;IACrBm0B,+BAA+B,CAACt0B,KAAK,CAAC;EACxC;AACF;AACA,SAAS60B,oBAAoBA,CAAC70B,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE;EACnD,IAAMH,MAAM,GAAG7wB,KAAK,CAAC6wB,MAAM;EAC3B,IAAMiE,KAAK,GAAGr9B,SAAS,CAAC,UAAC+K,KAAK,EAAK;IACjC,IAAIxC,KAAK,CAAC8O,GAAG,KAAK,IAAI,EAAE;MACtBkiB,QAAQ,CAAC+B,eAAe,CAACvwB,KAAK,EAAExC,KAAK,CAAC,CAAC;IACzC;EACF,CAAC,EAAEA,KAAK,EAAE,UAAC+0B,IAAI,EAAK;IAClB,IAAMvyB,KAAK,GAAGuyB,IAAI,CAAC,CAAC,CAAC;IACrB,OAAO,CAACvyB,KAAK,EAAEA,KAAK,CAACid,OAAO,EAAEjd,KAAK,CAACkd,OAAO,CAAC;EAC9C,CAAC,CAAC;EACFkT,WAAW,CAAC/B,MAAM,EAAE1wB,IAAI,EAAE20B,KAAK,CAAC;EAChC,OAAOA,KAAK;AACd;AAAC,IACKE,WAAW,0BAAAC,cAAA;EAAAza,SAAA,CAAAwa,WAAA,EAAAC,cAAA;EAAA,IAAAC,QAAA,GAAAxa,YAAA,CAAAsa,WAAA;EAAA,SAAAA,YAAA;IAAA31B,eAAA,OAAA21B,WAAA;IAAA,OAAAE,QAAA,CAAAryB,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAo1B,WAAA;IAAAn1B,GAAA;IAAAC,KAAA,EACf,SAAA8wB,eAAeC,MAAM,EAAExN,WAAW,EAAE;MAClC,IAAMpO,OAAO,GAAG4b,MAAM,IAAIA,MAAM,CAAC3e,UAAU,IAAI2e,MAAM,CAAC3e,UAAU,CAAC,IAAI,CAAC;MACtE,IAAI+C,OAAO,IAAIA,OAAO,CAAC4b,MAAM,KAAKA,MAAM,EAAE;QACxCsB,UAAU,CAACtB,MAAM,EAAExN,WAAW,CAAC;QAC/B,OAAOpO,OAAO;MAChB;MACA,OAAO,IAAI;IACb;EAAC;IAAApV,GAAA;IAAAC,KAAA,EACD,SAAAgxB,eAAe7b,OAAO,EAAE;MACtB,IAAM4b,MAAM,GAAG5b,OAAO,CAAC4b,MAAM;MAC7B,IAAI,CAACA,MAAM,CAACU,WAAW,CAAC,EAAE;QACxB,OAAO,KAAK;MACd;MACA,IAAM7wB,OAAO,GAAGmwB,MAAM,CAACU,WAAW,CAAC,CAAC7wB,OAAO;MAC3C,CAAC,QAAQ,EAAE,OAAO,CAAC,CAACF,OAAO,CAAC,UAACiE,IAAI,EAAK;QACpC,IAAM3E,KAAK,GAAGY,OAAO,CAAC+D,IAAI,CAAC;QAC3B,IAAI1P,aAAa,CAAC+K,KAAK,CAAC,EAAE;UACxB+wB,MAAM,CAACsE,eAAe,CAAC1wB,IAAI,CAAC;QAC9B,CAAC,MAAM;UACLosB,MAAM,CAACuE,YAAY,CAAC3wB,IAAI,EAAE3E,KAAK,CAAC;QAClC;MACF,CAAC,CAAC;MACF,IAAM4jB,KAAK,GAAGhjB,OAAO,CAACgjB,KAAK,IAAI,CAAC,CAAC;MACjCnd,MAAM,CAACC,IAAI,CAACkd,KAAK,CAAC,CAACljB,OAAO,CAAC,UAACX,GAAG,EAAK;QAClCgxB,MAAM,CAACnN,KAAK,CAAC7jB,GAAG,CAAC,GAAG6jB,KAAK,CAAC7jB,GAAG,CAAC;MAChC,CAAC,CAAC;MACFgxB,MAAM,CAAC3U,KAAK,GAAG2U,MAAM,CAAC3U,KAAK;MAC3B,OAAO2U,MAAM,CAACU,WAAW,CAAC;MAC1B,OAAO,IAAI;IACb;EAAC;IAAA1xB,GAAA;IAAAC,KAAA,EACD,SAAAixB,iBAAiB/wB,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,EAAE;MACtC,IAAI,CAACC,mBAAmB,CAACjxB,KAAK,EAAEG,IAAI,CAAC;MACrC,IAAMk1B,OAAO,GAAGr1B,KAAK,CAACs1B,QAAQ,KAAKt1B,KAAK,CAACs1B,QAAQ,GAAG,CAAC,CAAC,CAAC;MACvD,IAAMC,QAAQ,GAAG;QACfC,MAAM,EAAEtC,oBAAoB;QAC5BuC,MAAM,EAAE5B,oBAAoB;QAC5B7sB,MAAM,EAAEutB;MACV,CAAC;MACD,IAAMrK,OAAO,GAAGqL,QAAQ,CAACp1B,IAAI,CAAC,IAAI00B,oBAAoB;MACtDQ,OAAO,CAACl1B,IAAI,CAAC,GAAG+pB,OAAO,CAAClqB,KAAK,EAAEG,IAAI,EAAE6wB,QAAQ,CAAC;IAChD;EAAC;IAAAnxB,GAAA;IAAAC,KAAA,EACD,SAAAmxB,oBAAoBjxB,KAAK,EAAEG,IAAI,EAAE;MAC/B,IAAMk1B,OAAO,GAAGr1B,KAAK,CAACs1B,QAAQ,KAAKt1B,KAAK,CAACs1B,QAAQ,GAAG,CAAC,CAAC,CAAC;MACvD,IAAMR,KAAK,GAAGO,OAAO,CAACl1B,IAAI,CAAC;MAC3B,IAAI,CAAC20B,KAAK,EAAE;QACV;MACF;MACA,IAAMS,QAAQ,GAAG;QACfC,MAAM,EAAEb,eAAe;QACvBc,MAAM,EAAEd,eAAe;QACvB3tB,MAAM,EAAE2tB;MACV,CAAC;MACD,IAAMzK,OAAO,GAAGqL,QAAQ,CAACp1B,IAAI,CAAC,IAAI2yB,cAAc;MAChD5I,OAAO,CAAClqB,KAAK,EAAEG,IAAI,EAAE20B,KAAK,CAAC;MAC3BO,OAAO,CAACl1B,IAAI,CAAC,GAAGR,SAAS;IAC3B;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAoxB,oBAAA,EAAsB;MACpB,OAAOhwB,MAAM,CAACizB,gBAAgB;IAChC;EAAC;IAAAt0B,GAAA;IAAAC,KAAA,EACD,SAAA3I,eAAe05B,MAAM,EAAE3U,KAAK,EAAED,MAAM,EAAEoH,WAAW,EAAE;MACjD,OAAOlsB,eAAc,CAAC05B,MAAM,EAAE3U,KAAK,EAAED,MAAM,EAAEoH,WAAW,CAAC;IAC3D;EAAC;IAAAxjB,GAAA;IAAAC,KAAA,EACD,SAAAqxB,WAAWN,MAAM,EAAE;MACjB,IAAMsC,SAAS,GAAG97B,cAAc,CAACw5B,MAAM,CAAC;MACxC,OAAO,CAAC,EAAEsC,SAAS,IAAI97B,cAAc,CAAC87B,SAAS,CAAC,CAAC;IACnD;EAAC;EAAA,OAAA6B,WAAA;AAAA,EAlEuBrE,YAAY;AAAA,IAqEhC+E,OAAO;EACX,SAAAA,QAAA,EAAc;IAAAr2B,eAAA,OAAAq2B,OAAA;IACZ,IAAI,CAACl/B,CAAC,GAAGmJ,SAAS;IAClB,IAAI,CAACjJ,CAAC,GAAGiJ,SAAS;IAClB,IAAI,CAAC8F,MAAM,GAAG,KAAK;IACnB,IAAI,CAACyC,OAAO,GAAGvI,SAAS;IACxB,IAAI,CAAC4I,WAAW,GAAG5I,SAAS;EAC9B;EAACC,YAAA,CAAA81B,OAAA;IAAA71B,GAAA;IAAAC,KAAA,EACD,SAAA61B,gBAAgBhK,gBAAgB,EAAE;MAChC,IAAAiK,cAAA,GAAe,IAAI,CAACC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAElK,gBAAgB,CAAC;QAAnDn1B,CAAC,GAAAo/B,cAAA,CAADp/B,CAAC;QAAEE,CAAC,GAAAk/B,cAAA,CAADl/B,CAAC;MACX,OAAO;QAACF,CAAC,EAADA,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC;IACf;EAAC;IAAAmJ,GAAA;IAAAC,KAAA,EACD,SAAAg2B,SAAA,EAAW;MACT,OAAO3/B,QAAQ,CAAC,IAAI,CAACK,CAAC,CAAC,IAAIL,QAAQ,CAAC,IAAI,CAACO,CAAC,CAAC;IAC7C;EAAC;IAAAmJ,GAAA;IAAAC,KAAA,EACD,SAAA+1B,SAASptB,KAAK,EAAEstB,KAAK,EAAE;MACrB,IAAM/0B,EAAE,GAAG,IAAI;MACf,IAAMf,KAAK,GAAG,IAAI,CAACsI,WAAW;MAC9B,IAAI,CAACwtB,KAAK,IAAI,CAAC91B,KAAK,EAAE;QACpB,OAAOe,EAAE;MACX;MACA,IAAMg1B,GAAG,GAAG,CAAC,CAAC;MACdvtB,KAAK,CAACjI,OAAO,CAAC,UAAAiE,IAAI,EAAI;QACpBuxB,GAAG,CAACvxB,IAAI,CAAC,GAAGxE,KAAK,CAACwE,IAAI,CAAC,IAAIxE,KAAK,CAACwE,IAAI,CAAC,CAACgB,MAAM,EAAE,GAAGxF,KAAK,CAACwE,IAAI,CAAC,CAACc,GAAG,GAAGvE,EAAE,CAACyD,IAAI,CAAC;MAC9E,CAAC,CAAC;MACF,OAAOuxB,GAAG;IACZ;EAAC;EAAA,OAAAN,OAAA;AAAA;AAEHA,OAAO,CAAC3hC,QAAQ,GAAG,CAAC,CAAC;AACrB2hC,OAAO,CAACO,aAAa,GAAGt2B,SAAS;AAEjC,IAAMu2B,UAAU,GAAG;EACjBluB,MAAM,WAAAA,OAAClI,KAAK,EAAE;IACZ,OAAOjM,OAAO,CAACiM,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,GAAGA,KAAK;EAC5C,CAAC;EACDq2B,OAAO,WAAAA,QAACC,SAAS,EAAEjsB,KAAK,EAAEyO,KAAK,EAAE;IAC/B,IAAIwd,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,IAAMtT,MAAM,GAAG,IAAI,CAAC9iB,KAAK,CAACkI,OAAO,CAAC4a,MAAM;IACxC,IAAIuT,QAAQ;IACZ,IAAIC,KAAK,GAAGF,SAAS;IACrB,IAAIxd,KAAK,CAACvX,MAAM,GAAG,CAAC,EAAE;MACpB,IAAMk1B,OAAO,GAAG31B,IAAI,CAACuC,GAAG,CAACvC,IAAI,CAAC8X,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC9Y,KAAK,CAAC,EAAEc,IAAI,CAAC8X,GAAG,CAACE,KAAK,CAACA,KAAK,CAACvX,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK,CAAC,CAAC;MAC3F,IAAIy2B,OAAO,GAAG,IAAI,IAAIA,OAAO,GAAG,KAAK,EAAE;QACrCF,QAAQ,GAAG,YAAY;MACzB;MACAC,KAAK,GAAGE,cAAc,CAACJ,SAAS,EAAExd,KAAK,CAAC;IAC1C;IACA,IAAM6d,QAAQ,GAAG5+B,KAAK,CAAC+I,IAAI,CAAC8X,GAAG,CAAC4d,KAAK,CAAC,CAAC;IACvC,IAAMI,UAAU,GAAG91B,IAAI,CAACuC,GAAG,CAACvC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAACoE,KAAK,CAACyxB,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACvE,IAAMvuB,OAAO,GAAG;MAACmuB,QAAQ,EAARA,QAAQ;MAAEM,qBAAqB,EAAED,UAAU;MAAEE,qBAAqB,EAAEF;IAAU,CAAC;IAChGnwB,MAAM,CAACqC,MAAM,CAACV,OAAO,EAAE,IAAI,CAACA,OAAO,CAAC0Q,KAAK,CAACwQ,MAAM,CAAC;IACjD,OAAOzzB,YAAY,CAACygC,SAAS,EAAEtT,MAAM,EAAE5a,OAAO,CAAC;EACjD,CAAC;EACD2uB,WAAW,WAAAA,YAACT,SAAS,EAAEjsB,KAAK,EAAEyO,KAAK,EAAE;IACnC,IAAIwd,SAAS,KAAK,CAAC,EAAE;MACnB,OAAO,GAAG;IACZ;IACA,IAAMxwB,MAAM,GAAGwwB,SAAS,GAAIx1B,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAE7qB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAACu+B,SAAS,CAAC,CAAC,CAAE;IACvE,IAAIxwB,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,IAAIA,MAAM,KAAK,CAAC,EAAE;MAChD,OAAOswB,UAAU,CAACC,OAAO,CAACl1B,IAAI,CAAC,IAAI,EAAEm1B,SAAS,EAAEjsB,KAAK,EAAEyO,KAAK,CAAC;IAC/D;IACA,OAAO,EAAE;EACX;AACF,CAAC;AACD,SAAS4d,cAAcA,CAACJ,SAAS,EAAExd,KAAK,EAAE;EACxC,IAAI0d,KAAK,GAAG1d,KAAK,CAACvX,MAAM,GAAG,CAAC,GAAGuX,KAAK,CAAC,CAAC,CAAC,CAAC9Y,KAAK,GAAG8Y,KAAK,CAAC,CAAC,CAAC,CAAC9Y,KAAK,GAAG8Y,KAAK,CAAC,CAAC,CAAC,CAAC9Y,KAAK,GAAG8Y,KAAK,CAAC,CAAC,CAAC,CAAC9Y,KAAK;EAChG,IAAIc,IAAI,CAAC8X,GAAG,CAAC4d,KAAK,CAAC,IAAI,CAAC,IAAIF,SAAS,KAAKx1B,IAAI,CAACoE,KAAK,CAACoxB,SAAS,CAAC,EAAE;IAC/DE,KAAK,GAAGF,SAAS,GAAGx1B,IAAI,CAACoE,KAAK,CAACoxB,SAAS,CAAC;EAC3C;EACA,OAAOE,KAAK;AACd;AACA,IAAIQ,KAAK,GAAG;EAACZ,UAAU,EAAVA;AAAU,CAAC;AAExBniC,QAAQ,CAACuO,GAAG,CAAC,OAAO,EAAE;EACpBwlB,OAAO,EAAE,IAAI;EACbjK,MAAM,EAAE,KAAK;EACb1U,OAAO,EAAE,KAAK;EACd6U,WAAW,EAAE,KAAK;EAClB+Y,MAAM,EAAE,OAAO;EACfC,KAAK,EAAE,CAAC;EACRlZ,IAAI,EAAE;IACJgK,OAAO,EAAE,IAAI;IACb9D,SAAS,EAAE,CAAC;IACZiT,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,IAAI;IACrBC,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE,CAAC;IACbC,SAAS,EAAE,SAAAA,UAACxoB,IAAI,EAAE3G,OAAO;MAAA,OAAKA,OAAO,CAAC8b,SAAS;IAAA;IAC/CsT,SAAS,EAAE,SAAAA,UAACzoB,IAAI,EAAE3G,OAAO;MAAA,OAAKA,OAAO,CAACzU,KAAK;IAAA;IAC3CoqB,MAAM,EAAE,KAAK;IACb0Z,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE,GAAG;IACrBxU,WAAW,EAAE;EACf,CAAC;EACD9D,KAAK,EAAE;IACL4I,OAAO,EAAE,KAAK;IACdnE,IAAI,EAAE,EAAE;IACRsM,OAAO,EAAE;MACPzmB,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV;EACF,CAAC;EACDkP,KAAK,EAAE;IACL6e,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,KAAK;IACbC,eAAe,EAAE,CAAC;IAClBC,eAAe,EAAE,EAAE;IACnB5H,OAAO,EAAE,CAAC;IACVnI,OAAO,EAAE,IAAI;IACbgQ,QAAQ,EAAE,IAAI;IACdC,eAAe,EAAE,CAAC;IAClBC,WAAW,EAAE,CAAC;IACd7/B,QAAQ,EAAE2+B,KAAK,CAACZ,UAAU,CAACluB,MAAM;IACjCiwB,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,CAAC,CAAC;IACTC,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,MAAM;IAClBC,iBAAiB,EAAE,KAAK;IACxBC,aAAa,EAAE,2BAA2B;IAC1CC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AACFxkC,QAAQ,CAACykC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnDzkC,QAAQ,CAACykC,KAAK,CAAC,YAAY,EAAE,OAAO,EAAE,EAAE,EAAE,aAAa,CAAC;AACxDzkC,QAAQ,CAACykC,KAAK,CAAC,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,aAAa,CAAC;AAC9DzkC,QAAQ,CAACykC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC;AACnDzkC,QAAQ,CAAC2S,QAAQ,CAAC,OAAO,EAAE;EACzBC,SAAS,EAAE,KAAK;EAChBE,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAK,CAACA,IAAI,CAAC2xB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC3xB,IAAI,CAAC2xB,UAAU,CAAC,OAAO,CAAC,IAAI3xB,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,QAAQ;EAAA;EAC1HF,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,gBAAgB;EAAA;AAC1E,CAAC,CAAC;AACF/S,QAAQ,CAAC2S,QAAQ,CAAC,QAAQ,EAAE;EAC1BC,SAAS,EAAE;AACb,CAAC,CAAC;AACF5S,QAAQ,CAAC2S,QAAQ,CAAC,aAAa,EAAE;EAC/BG,WAAW,EAAE,SAAAA,YAACC,IAAI;IAAA,OAAKA,IAAI,KAAK,iBAAiB,IAAIA,IAAI,KAAK,UAAU;EAAA;EACxEF,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,iBAAiB;EAAA;AAClD,CAAC,CAAC;AAEF,SAASgxB,QAAQA,CAAC9uB,KAAK,EAAE4P,KAAK,EAAE;EAC9B,IAAM8f,QAAQ,GAAG1vB,KAAK,CAACd,OAAO,CAAC0Q,KAAK;EACpC,IAAM+f,UAAU,GAAGD,QAAQ,CAACE,aAAa,IAAIC,iBAAiB,CAAC7vB,KAAK,CAAC;EACrE,IAAM8vB,YAAY,GAAGJ,QAAQ,CAACR,KAAK,CAACa,OAAO,GAAGC,eAAe,CAACpgB,KAAK,CAAC,GAAG,EAAE;EACzE,IAAMqgB,eAAe,GAAGH,YAAY,CAACz3B,MAAM;EAC3C,IAAM63B,KAAK,GAAGJ,YAAY,CAAC,CAAC,CAAC;EAC7B,IAAM1c,IAAI,GAAG0c,YAAY,CAACG,eAAe,GAAG,CAAC,CAAC;EAC9C,IAAME,QAAQ,GAAG,EAAE;EACnB,IAAIF,eAAe,GAAGN,UAAU,EAAE;IAChCS,UAAU,CAACxgB,KAAK,EAAEugB,QAAQ,EAAEL,YAAY,EAAEG,eAAe,GAAGN,UAAU,CAAC;IACvE,OAAOQ,QAAQ;EACjB;EACA,IAAM9X,OAAO,GAAGgY,gBAAgB,CAACP,YAAY,EAAElgB,KAAK,EAAE+f,UAAU,CAAC;EACjE,IAAIM,eAAe,GAAG,CAAC,EAAE;IACvB,IAAIvlC,CAAC,EAAEwW,IAAI;IACX,IAAMovB,eAAe,GAAGL,eAAe,GAAG,CAAC,GAAGr4B,IAAI,CAAC24B,KAAK,CAAC,CAACnd,IAAI,GAAG8c,KAAK,KAAKD,eAAe,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;IACvGna,IAAI,CAAClG,KAAK,EAAEugB,QAAQ,EAAE9X,OAAO,EAAEtsB,aAAa,CAACukC,eAAe,CAAC,GAAG,CAAC,GAAGJ,KAAK,GAAGI,eAAe,EAAEJ,KAAK,CAAC;IACnG,KAAKxlC,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG+uB,eAAe,GAAG,CAAC,EAAEvlC,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;MACrDorB,IAAI,CAAClG,KAAK,EAAEugB,QAAQ,EAAE9X,OAAO,EAAEyX,YAAY,CAACplC,CAAC,CAAC,EAAEolC,YAAY,CAACplC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtE;IACAorB,IAAI,CAAClG,KAAK,EAAEugB,QAAQ,EAAE9X,OAAO,EAAEjF,IAAI,EAAErnB,aAAa,CAACukC,eAAe,CAAC,GAAG1gB,KAAK,CAACvX,MAAM,GAAG+a,IAAI,GAAGkd,eAAe,CAAC;IAC5G,OAAOH,QAAQ;EACjB;EACAra,IAAI,CAAClG,KAAK,EAAEugB,QAAQ,EAAE9X,OAAO,CAAC;EAC9B,OAAO8X,QAAQ;AACjB;AACA,SAASN,iBAAiBA,CAAC7vB,KAAK,EAAE;EAChC,IAAM6U,MAAM,GAAG7U,KAAK,CAACd,OAAO,CAAC2V,MAAM;EACnC,IAAMuZ,UAAU,GAAGpuB,KAAK,CAACwwB,SAAS,EAAE;EACpC,IAAMC,QAAQ,GAAGzwB,KAAK,CAACuP,OAAO,GAAG6e,UAAU,IAAIvZ,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9D,IAAM6b,QAAQ,GAAG1wB,KAAK,CAAC2wB,UAAU,GAAGvC,UAAU;EAC9C,OAAOx2B,IAAI,CAACoE,KAAK,CAACpE,IAAI,CAACC,GAAG,CAAC44B,QAAQ,EAAEC,QAAQ,CAAC,CAAC;AACjD;AACA,SAASL,gBAAgBA,CAACP,YAAY,EAAElgB,KAAK,EAAE+f,UAAU,EAAE;EACzD,IAAMiB,gBAAgB,GAAGC,cAAc,CAACf,YAAY,CAAC;EACrD,IAAMzX,OAAO,GAAGzI,KAAK,CAACvX,MAAM,GAAGs3B,UAAU;EACzC,IAAI,CAACiB,gBAAgB,EAAE;IACrB,OAAOh5B,IAAI,CAACuC,GAAG,CAACke,OAAO,EAAE,CAAC,CAAC;EAC7B;EACA,IAAMyY,OAAO,GAAG/hC,UAAU,CAAC6hC,gBAAgB,CAAC;EAC5C,KAAK,IAAIlmC,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG4vB,OAAO,CAACz4B,MAAM,GAAG,CAAC,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;IACxD,IAAMqQ,MAAM,GAAG+1B,OAAO,CAACpmC,CAAC,CAAC;IACzB,IAAIqQ,MAAM,GAAGsd,OAAO,EAAE;MACpB,OAAOtd,MAAM;IACf;EACF;EACA,OAAOnD,IAAI,CAACuC,GAAG,CAACke,OAAO,EAAE,CAAC,CAAC;AAC7B;AACA,SAAS2X,eAAeA,CAACpgB,KAAK,EAAE;EAC9B,IAAMmhB,MAAM,GAAG,EAAE;EACjB,IAAIrmC,CAAC,EAAEwW,IAAI;EACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG0O,KAAK,CAACvX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;IAC9C,IAAIklB,KAAK,CAACllB,CAAC,CAAC,CAACwkC,KAAK,EAAE;MAClB6B,MAAM,CAACr3B,IAAI,CAAChP,CAAC,CAAC;IAChB;EACF;EACA,OAAOqmC,MAAM;AACf;AACA,SAASX,UAAUA,CAACxgB,KAAK,EAAEugB,QAAQ,EAAEL,YAAY,EAAEzX,OAAO,EAAE;EAC1D,IAAIhP,KAAK,GAAG,CAAC;EACb,IAAIoH,IAAI,GAAGqf,YAAY,CAAC,CAAC,CAAC;EAC1B,IAAIplC,CAAC;EACL2tB,OAAO,GAAGzgB,IAAI,CAACo5B,IAAI,CAAC3Y,OAAO,CAAC;EAC5B,KAAK3tB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGklB,KAAK,CAACvX,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACjC,IAAIA,CAAC,KAAK+lB,IAAI,EAAE;MACd0f,QAAQ,CAACz2B,IAAI,CAACkW,KAAK,CAACllB,CAAC,CAAC,CAAC;MACvB2e,KAAK,EAAE;MACPoH,IAAI,GAAGqf,YAAY,CAACzmB,KAAK,GAAGgP,OAAO,CAAC;IACtC;EACF;AACF;AACA,SAASvC,IAAIA,CAAClG,KAAK,EAAEugB,QAAQ,EAAE9X,OAAO,EAAE4Y,UAAU,EAAEC,QAAQ,EAAE;EAC5D,IAAMp5B,KAAK,GAAG7M,cAAc,CAACgmC,UAAU,EAAE,CAAC,CAAC;EAC3C,IAAM7wB,GAAG,GAAGxI,IAAI,CAACC,GAAG,CAAC5M,cAAc,CAACimC,QAAQ,EAAEthB,KAAK,CAACvX,MAAM,CAAC,EAAEuX,KAAK,CAACvX,MAAM,CAAC;EAC1E,IAAIgR,KAAK,GAAG,CAAC;EACb,IAAIhR,MAAM,EAAE3N,CAAC,EAAE+lB,IAAI;EACnB4H,OAAO,GAAGzgB,IAAI,CAACo5B,IAAI,CAAC3Y,OAAO,CAAC;EAC5B,IAAI6Y,QAAQ,EAAE;IACZ74B,MAAM,GAAG64B,QAAQ,GAAGD,UAAU;IAC9B5Y,OAAO,GAAGhgB,MAAM,GAAGT,IAAI,CAACoE,KAAK,CAAC3D,MAAM,GAAGggB,OAAO,CAAC;EACjD;EACA5H,IAAI,GAAG3Y,KAAK;EACZ,OAAO2Y,IAAI,GAAG,CAAC,EAAE;IACfpH,KAAK,EAAE;IACPoH,IAAI,GAAG7Y,IAAI,CAAC24B,KAAK,CAACz4B,KAAK,GAAGuR,KAAK,GAAGgP,OAAO,CAAC;EAC5C;EACA,KAAK3tB,CAAC,GAAGkN,IAAI,CAACuC,GAAG,CAACrC,KAAK,EAAE,CAAC,CAAC,EAAEpN,CAAC,GAAG0V,GAAG,EAAE1V,CAAC,EAAE,EAAE;IACzC,IAAIA,CAAC,KAAK+lB,IAAI,EAAE;MACd0f,QAAQ,CAACz2B,IAAI,CAACkW,KAAK,CAACllB,CAAC,CAAC,CAAC;MACvB2e,KAAK,EAAE;MACPoH,IAAI,GAAG7Y,IAAI,CAAC24B,KAAK,CAACz4B,KAAK,GAAGuR,KAAK,GAAGgP,OAAO,CAAC;IAC5C;EACF;AACF;AACA,SAASwY,cAAcA,CAACtiB,GAAG,EAAE;EAC3B,IAAM4iB,GAAG,GAAG5iB,GAAG,CAAClW,MAAM;EACtB,IAAI3N,CAAC,EAAE81B,IAAI;EACX,IAAI2Q,GAAG,GAAG,CAAC,EAAE;IACX,OAAO,KAAK;EACd;EACA,KAAK3Q,IAAI,GAAGjS,GAAG,CAAC,CAAC,CAAC,EAAE7jB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGymC,GAAG,EAAE,EAAEzmC,CAAC,EAAE;IACvC,IAAI6jB,GAAG,CAAC7jB,CAAC,CAAC,GAAG6jB,GAAG,CAAC7jB,CAAC,GAAG,CAAC,CAAC,KAAK81B,IAAI,EAAE;MAChC,OAAO,KAAK;IACd;EACF;EACA,OAAOA,IAAI;AACb;AAEA,IAAM4Q,YAAY,GAAG,SAAfA,YAAYA,CAAIjC,KAAK;EAAA,OAAKA,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA,KAAK,KAAK,OAAO,GAAG,MAAM,GAAGA,KAAK;AAAA;AAC/F,IAAMkC,cAAc,GAAG,SAAjBA,cAAcA,CAAIrxB,KAAK,EAAEsxB,IAAI,EAAEzc,MAAM;EAAA,OAAKyc,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,MAAM,GAAGtxB,KAAK,CAACsxB,IAAI,CAAC,GAAGzc,MAAM,GAAG7U,KAAK,CAACsxB,IAAI,CAAC,GAAGzc,MAAM;AAAA;AAC/H,SAAS0c,MAAMA,CAAChjB,GAAG,EAAEijB,QAAQ,EAAE;EAC7B,IAAMT,MAAM,GAAG,EAAE;EACjB,IAAMU,SAAS,GAAGljB,GAAG,CAAClW,MAAM,GAAGm5B,QAAQ;EACvC,IAAML,GAAG,GAAG5iB,GAAG,CAAClW,MAAM;EACtB,IAAI3N,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGymC,GAAG,EAAEzmC,CAAC,IAAI+mC,SAAS,EAAE;IAC9BV,MAAM,CAACr3B,IAAI,CAAC6U,GAAG,CAAC3W,IAAI,CAACoE,KAAK,CAACtR,CAAC,CAAC,CAAC,CAAC;EACjC;EACA,OAAOqmC,MAAM;AACf;AACA,SAASW,mBAAmBA,CAAC1xB,KAAK,EAAEmB,KAAK,EAAEwwB,eAAe,EAAE;EAC1D,IAAMt5B,MAAM,GAAG2H,KAAK,CAAC4P,KAAK,CAACvX,MAAM;EACjC,IAAMu5B,UAAU,GAAGh6B,IAAI,CAACC,GAAG,CAACsJ,KAAK,EAAE9I,MAAM,GAAG,CAAC,CAAC;EAC9C,IAAMP,KAAK,GAAGkI,KAAK,CAAC2T,WAAW;EAC/B,IAAMvT,GAAG,GAAGJ,KAAK,CAAC4T,SAAS;EAC3B,IAAMie,OAAO,GAAG,IAAI;EACpB,IAAIC,SAAS,GAAG9xB,KAAK,CAAC6P,eAAe,CAAC+hB,UAAU,CAAC;EACjD,IAAI/c,MAAM;EACV,IAAI8c,eAAe,EAAE;IACnB,IAAIt5B,MAAM,KAAK,CAAC,EAAE;MAChBwc,MAAM,GAAGjd,IAAI,CAACuC,GAAG,CAAC23B,SAAS,GAAGh6B,KAAK,EAAEsI,GAAG,GAAG0xB,SAAS,CAAC;IACvD,CAAC,MAAM,IAAI3wB,KAAK,KAAK,CAAC,EAAE;MACtB0T,MAAM,GAAG,CAAC7U,KAAK,CAAC6P,eAAe,CAAC,CAAC,CAAC,GAAGiiB,SAAS,IAAI,CAAC;IACrD,CAAC,MAAM;MACLjd,MAAM,GAAG,CAACid,SAAS,GAAG9xB,KAAK,CAAC6P,eAAe,CAAC+hB,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC;IAClE;IACAE,SAAS,IAAIF,UAAU,GAAGzwB,KAAK,GAAG0T,MAAM,GAAG,CAACA,MAAM;IAClD,IAAIid,SAAS,GAAGh6B,KAAK,GAAG+5B,OAAO,IAAIC,SAAS,GAAG1xB,GAAG,GAAGyxB,OAAO,EAAE;MAC5D;IACF;EACF;EACA,OAAOC,SAAS;AAClB;AACA,SAASC,cAAcA,CAACC,MAAM,EAAE35B,MAAM,EAAE;EACtCpK,IAAI,CAAC+jC,MAAM,EAAE,UAAC3lB,KAAK,EAAK;IACtB,IAAM4lB,EAAE,GAAG5lB,KAAK,CAAC4lB,EAAE;IACnB,IAAMC,KAAK,GAAGD,EAAE,CAAC55B,MAAM,GAAG,CAAC;IAC3B,IAAI3N,CAAC;IACL,IAAIwnC,KAAK,GAAG75B,MAAM,EAAE;MAClB,KAAK3N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwnC,KAAK,EAAE,EAAExnC,CAAC,EAAE;QAC1B,OAAO2hB,KAAK,CAACzK,IAAI,CAACqwB,EAAE,CAACvnC,CAAC,CAAC,CAAC;MAC1B;MACAunC,EAAE,CAACvjB,MAAM,CAAC,CAAC,EAAEwjB,KAAK,CAAC;IACrB;EACF,CAAC,CAAC;AACJ;AACA,SAASC,iBAAiBA,CAACjzB,OAAO,EAAE;EAClC,OAAOA,OAAO,CAACivB,SAAS,GAAGjvB,OAAO,CAACkvB,UAAU,GAAG,CAAC;AACnD;AACA,SAASgE,cAAcA,CAAClzB,OAAO,EAAEmzB,QAAQ,EAAE;EACzC,IAAI,CAACnzB,OAAO,CAAC4f,OAAO,EAAE;IACpB,OAAO,CAAC;EACV;EACA,IAAMwT,IAAI,GAAGjiC,MAAM,CAAC6O,OAAO,CAACozB,IAAI,EAAED,QAAQ,CAAC;EAC3C,IAAMpL,OAAO,GAAGl5B,SAAS,CAACmR,OAAO,CAAC+nB,OAAO,CAAC;EAC1C,IAAMsL,KAAK,GAAG1nC,OAAO,CAACqU,OAAO,CAACyb,IAAI,CAAC,GAAGzb,OAAO,CAACyb,IAAI,CAACtiB,MAAM,GAAG,CAAC;EAC7D,OAAQk6B,KAAK,GAAGD,IAAI,CAACE,UAAU,GAAIvL,OAAO,CAAChU,MAAM;AACnD;AACA,SAASwf,kBAAkBA,CAAC5tB,MAAM,EAAE7E,KAAK,EAAE;EACzC,OAAOzC,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1C7E,KAAK,EAALA,KAAK;IACL7I,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASu7B,iBAAiBA,CAAC7tB,MAAM,EAAE1D,KAAK,EAAEpI,IAAI,EAAE;EAC9C,OAAOwE,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1C9L,IAAI,EAAJA,IAAI;IACJoI,KAAK,EAALA,KAAK;IACLhK,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAASw7B,UAAUA,CAACxD,KAAK,EAAErN,QAAQ,EAAE3hB,OAAO,EAAE;EAC5C,IAAI6sB,GAAG,GAAGz8B,kBAAkB,CAAC4+B,KAAK,CAAC;EACnC,IAAKhvB,OAAO,IAAI2hB,QAAQ,KAAK,OAAO,IAAM,CAAC3hB,OAAO,IAAI2hB,QAAQ,KAAK,OAAQ,EAAE;IAC3EkL,GAAG,GAAGoE,YAAY,CAACpE,GAAG,CAAC;EACzB;EACA,OAAOA,GAAG;AACZ;AACA,SAAS4F,SAASA,CAAC5yB,KAAK,EAAE6U,MAAM,EAAEiN,QAAQ,EAAEqN,KAAK,EAAE;EACjD,IAAO3uB,GAAG,GAAyBR,KAAK,CAAjCQ,GAAG;IAAEG,IAAI,GAAmBX,KAAK,CAA5BW,IAAI;IAAED,MAAM,GAAWV,KAAK,CAAtBU,MAAM;IAAED,KAAK,GAAIT,KAAK,CAAdS,KAAK;EAC/B,IAAI2V,QAAQ,GAAG,CAAC;EAChB,IAAIyC,QAAQ,EAAEga,MAAM,EAAEC,MAAM;EAC5B,IAAI9yB,KAAK,CAACuS,YAAY,EAAE,EAAE;IACxBsgB,MAAM,GAAGpiC,cAAc,CAAC0+B,KAAK,EAAExuB,IAAI,EAAEF,KAAK,CAAC;IAC3CqyB,MAAM,GAAGzB,cAAc,CAACrxB,KAAK,EAAE8hB,QAAQ,EAAEjN,MAAM,CAAC;IAChDgE,QAAQ,GAAGpY,KAAK,GAAGE,IAAI;EACzB,CAAC,MAAM;IACLkyB,MAAM,GAAGxB,cAAc,CAACrxB,KAAK,EAAE8hB,QAAQ,EAAEjN,MAAM,CAAC;IAChDie,MAAM,GAAGriC,cAAc,CAAC0+B,KAAK,EAAEzuB,MAAM,EAAEF,GAAG,CAAC;IAC3C4V,QAAQ,GAAG0L,QAAQ,KAAK,MAAM,GAAG,CAAC/0B,OAAO,GAAGA,OAAO;EACrD;EACA,OAAO;IAAC8lC,MAAM,EAANA,MAAM;IAAEC,MAAM,EAANA,MAAM;IAAEja,QAAQ,EAARA,QAAQ;IAAEzC,QAAQ,EAARA;EAAQ,CAAC;AAC7C;AAAC,IACK2c,KAAK,0BAAAC,QAAA;EAAAxhB,SAAA,CAAAuhB,KAAA,EAAAC,QAAA;EAAA,IAAAC,QAAA,GAAAvhB,YAAA,CAAAqhB,KAAA;EACT,SAAAA,MAAYx3B,GAAG,EAAE;IAAA,IAAA23B,MAAA;IAAA78B,eAAA,OAAA08B,KAAA;IACfG,MAAA,GAAAD,QAAA,CAAAh7B,IAAA;IACAi7B,MAAA,CAAK5wB,EAAE,GAAG/G,GAAG,CAAC+G,EAAE;IAChB4wB,MAAA,CAAK/7B,IAAI,GAAGoE,GAAG,CAACpE,IAAI;IACpB+7B,MAAA,CAAKh0B,OAAO,GAAGvI,SAAS;IACxBu8B,MAAA,CAAKptB,GAAG,GAAGvK,GAAG,CAACuK,GAAG;IAClBotB,MAAA,CAAKl8B,KAAK,GAAGuE,GAAG,CAACvE,KAAK;IACtBk8B,MAAA,CAAK1yB,GAAG,GAAG7J,SAAS;IACpBu8B,MAAA,CAAKxyB,MAAM,GAAG/J,SAAS;IACvBu8B,MAAA,CAAKvyB,IAAI,GAAGhK,SAAS;IACrBu8B,MAAA,CAAKzyB,KAAK,GAAG9J,SAAS;IACtBu8B,MAAA,CAAKhgB,KAAK,GAAGvc,SAAS;IACtBu8B,MAAA,CAAKjgB,MAAM,GAAGtc,SAAS;IACvBu8B,MAAA,CAAKC,QAAQ,GAAG;MACdxyB,IAAI,EAAE,CAAC;MACPF,KAAK,EAAE,CAAC;MACRD,GAAG,EAAE,CAAC;MACNE,MAAM,EAAE;IACV,CAAC;IACDwyB,MAAA,CAAKra,QAAQ,GAAGliB,SAAS;IACzBu8B,MAAA,CAAKpa,SAAS,GAAGniB,SAAS;IAC1Bu8B,MAAA,CAAKE,UAAU,GAAGz8B,SAAS;IAC3Bu8B,MAAA,CAAKG,aAAa,GAAG18B,SAAS;IAC9Bu8B,MAAA,CAAKI,WAAW,GAAG38B,SAAS;IAC5Bu8B,MAAA,CAAKK,YAAY,GAAG58B,SAAS;IAC7Bu8B,MAAA,CAAK/uB,IAAI,GAAGxN,SAAS;IACrBu8B,MAAA,CAAKM,aAAa,GAAG78B,SAAS;IAC9Bu8B,MAAA,CAAKr7B,GAAG,GAAGlB,SAAS;IACpBu8B,MAAA,CAAK/4B,GAAG,GAAGxD,SAAS;IACpBu8B,MAAA,CAAKO,MAAM,GAAG98B,SAAS;IACvBu8B,MAAA,CAAKtjB,KAAK,GAAG,EAAE;IACfsjB,MAAA,CAAKQ,cAAc,GAAG,IAAI;IAC1BR,MAAA,CAAKS,WAAW,GAAG,IAAI;IACvBT,MAAA,CAAKU,WAAW,GAAG,IAAI;IACvBV,MAAA,CAAK3jB,OAAO,GAAG,CAAC;IAChB2jB,MAAA,CAAKvC,UAAU,GAAG,CAAC;IACnBuC,MAAA,CAAKW,iBAAiB,GAAG,CAAC,CAAC;IAC3BX,MAAA,CAAKvf,WAAW,GAAGhd,SAAS;IAC5Bu8B,MAAA,CAAKtf,SAAS,GAAGjd,SAAS;IAC1Bu8B,MAAA,CAAKxR,cAAc,GAAG,KAAK;IAC3BwR,MAAA,CAAKY,QAAQ,GAAGn9B,SAAS;IACzBu8B,MAAA,CAAKa,QAAQ,GAAGp9B,SAAS;IACzBu8B,MAAA,CAAKc,aAAa,GAAGr9B,SAAS;IAC9Bu8B,MAAA,CAAKe,aAAa,GAAGt9B,SAAS;IAC9Bu8B,MAAA,CAAKgB,YAAY,GAAG,CAAC;IACrBhB,MAAA,CAAKiB,YAAY,GAAG,CAAC;IACrBjB,MAAA,CAAKhkB,MAAM,GAAG,CAAC,CAAC;IAChBgkB,MAAA,CAAKkB,iBAAiB,GAAG,KAAK;IAC9BlB,MAAA,CAAKzsB,QAAQ,GAAG9P,SAAS;IAAC,OAAAu8B,MAAA;EAC5B;EAACt8B,YAAA,CAAAm8B,KAAA;IAAAl8B,GAAA;IAAAC,KAAA,EACD,SAAAu9B,KAAKn1B,OAAO,EAAE;MACZ,IAAMlH,EAAE,GAAG,IAAI;MACfA,EAAE,CAACkH,OAAO,GAAGA,OAAO,CAACo1B,UAAU,CAACt8B,EAAE,CAACkR,UAAU,EAAE,CAAC;MAChDlR,EAAE,CAACmM,IAAI,GAAGjF,OAAO,CAACiF,IAAI;MACtBnM,EAAE,CAAC+7B,QAAQ,GAAG/7B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAACrH,GAAG,CAAC;MACnCG,EAAE,CAAC87B,QAAQ,GAAG97B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAAC/E,GAAG,CAAC;MACnCnC,EAAE,CAACi8B,aAAa,GAAGj8B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAACq1B,YAAY,CAAC;MACjDv8B,EAAE,CAACg8B,aAAa,GAAGh8B,EAAE,CAACoR,KAAK,CAAClK,OAAO,CAACs1B,YAAY,CAAC;IACnD;EAAC;IAAA39B,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,OAAOgE,GAAG;IACZ;EAAC;IAAAtO,GAAA;IAAAC,KAAA,EACD,SAAAyL,cAAA,EAAgB;MACd,IAAKwxB,QAAQ,GAA4C,IAAI,CAAxDA,QAAQ;QAAED,QAAQ,GAAkC,IAAI,CAA9CA,QAAQ;QAAEG,aAAa,GAAmB,IAAI,CAApCA,aAAa;QAAED,aAAa,GAAI,IAAI,CAArBA,aAAa;MACrDD,QAAQ,GAAG9kC,eAAe,CAAC8kC,QAAQ,EAAEpxB,MAAM,CAACE,iBAAiB,CAAC;MAC9DixB,QAAQ,GAAG7kC,eAAe,CAAC6kC,QAAQ,EAAEnxB,MAAM,CAACC,iBAAiB,CAAC;MAC9DqxB,aAAa,GAAGhlC,eAAe,CAACglC,aAAa,EAAEtxB,MAAM,CAACE,iBAAiB,CAAC;MACxEmxB,aAAa,GAAG/kC,eAAe,CAAC+kC,aAAa,EAAErxB,MAAM,CAACC,iBAAiB,CAAC;MACxE,OAAO;QACL/K,GAAG,EAAE5I,eAAe,CAAC8kC,QAAQ,EAAEE,aAAa,CAAC;QAC7C95B,GAAG,EAAElL,eAAe,CAAC6kC,QAAQ,EAAEE,aAAa,CAAC;QAC7CvxB,UAAU,EAAEhX,cAAc,CAACsoC,QAAQ,CAAC;QACpCrxB,UAAU,EAAEjX,cAAc,CAACqoC,QAAQ;MACrC,CAAC;IACH;EAAC;IAAAj9B,GAAA;IAAAC,KAAA,EACD,SAAA+T,UAAUC,QAAQ,EAAE;MAClB,IAAM9S,EAAE,GAAG,IAAI;MACf,IAAAy8B,iBAAA,GAAyCz8B,EAAE,CAACuK,aAAa,EAAE;QAAtD1K,GAAG,GAAA48B,iBAAA,CAAH58B,GAAG;QAAEsC,GAAG,GAAAs6B,iBAAA,CAAHt6B,GAAG;QAAEsI,UAAU,GAAAgyB,iBAAA,CAAVhyB,UAAU;QAAEC,UAAU,GAAA+xB,iBAAA,CAAV/xB,UAAU;MACrC,IAAIgI,KAAK;MACT,IAAIjI,UAAU,IAAIC,UAAU,EAAE;QAC5B,OAAO;UAAC7K,GAAG,EAAHA,GAAG;UAAEsC,GAAG,EAAHA;QAAG,CAAC;MACnB;MACA,IAAMiV,KAAK,GAAGpX,EAAE,CAACwL,uBAAuB,EAAE;MAC1C,KAAK,IAAI9Y,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkO,KAAK,CAAC/W,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAClDggB,KAAK,GAAG0E,KAAK,CAAC1kB,CAAC,CAAC,CAACmZ,UAAU,CAACgH,SAAS,CAAC7S,EAAE,EAAE8S,QAAQ,CAAC;QACnD,IAAI,CAACrI,UAAU,EAAE;UACf5K,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAE6S,KAAK,CAAC7S,GAAG,CAAC;QAChC;QACA,IAAI,CAAC6K,UAAU,EAAE;UACfvI,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAEuQ,KAAK,CAACvQ,GAAG,CAAC;QAChC;MACF;MACA,OAAO;QACLtC,GAAG,EAAE5I,eAAe,CAAC4I,GAAG,EAAE5I,eAAe,CAACkL,GAAG,EAAEtC,GAAG,CAAC,CAAC;QACpDsC,GAAG,EAAElL,eAAe,CAACkL,GAAG,EAAElL,eAAe,CAAC4I,GAAG,EAAEsC,GAAG,CAAC;MACrD,CAAC;IACH;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAA6uB,WAAA,EAAa;MACX,IAAM3tB,EAAE,GAAG,IAAI;MACf,OAAO;QACL2I,IAAI,EAAE3I,EAAE,CAACs7B,WAAW,IAAI,CAAC;QACzB9yB,GAAG,EAAExI,EAAE,CAACo7B,UAAU,IAAI,CAAC;QACvB3yB,KAAK,EAAEzI,EAAE,CAACu7B,YAAY,IAAI,CAAC;QAC3B7yB,MAAM,EAAE1I,EAAE,CAACq7B,aAAa,IAAI;MAC9B,CAAC;IACH;EAAC;IAAAx8B,GAAA;IAAAC,KAAA,EACD,SAAA49B,SAAA,EAAW;MACT,OAAO,IAAI,CAAC9kB,KAAK;IACnB;EAAC;IAAA/Y,GAAA;IAAAC,KAAA,EACD,SAAAgT,UAAA,EAAY;MACV,IAAMlI,IAAI,GAAG,IAAI,CAAC5K,KAAK,CAAC4K,IAAI;MAC5B,OAAO,IAAI,CAAC1C,OAAO,CAAC2K,MAAM,KAAK,IAAI,CAAC0I,YAAY,EAAE,GAAG3Q,IAAI,CAAC+yB,OAAO,GAAG/yB,IAAI,CAACgzB,OAAO,CAAC,IAAIhzB,IAAI,CAACiI,MAAM,IAAI,EAAE;IACxG;EAAC;IAAAhT,GAAA;IAAAC,KAAA,EACD,SAAA2wB,aAAA,EAAe;MACb,IAAI,CAACvY,MAAM,GAAG,CAAC,CAAC;MAChB,IAAI,CAACklB,iBAAiB,GAAG,KAAK;IAChC;EAAC;IAAAv9B,GAAA;IAAAC,KAAA,EACD,SAAA+9B,aAAA,EAAe;MACb1lC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC21B,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7C;EAAC;IAAAh+B,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOmc,QAAQ,EAAEC,SAAS,EAAEgc,OAAO,EAAE;MACnC,IAAM98B,EAAE,GAAG,IAAI;MACf,IAAM03B,QAAQ,GAAG13B,EAAE,CAACkH,OAAO,CAAC0Q,KAAK;MACjC,IAAMmlB,UAAU,GAAGrF,QAAQ,CAACqF,UAAU;MACtC/8B,EAAE,CAAC68B,YAAY,EAAE;MACjB78B,EAAE,CAAC6gB,QAAQ,GAAGA,QAAQ;MACtB7gB,EAAE,CAAC8gB,SAAS,GAAGA,SAAS;MACxB9gB,EAAE,CAACm7B,QAAQ,GAAG2B,OAAO,GAAGv3B,MAAM,CAACqC,MAAM,CAAC;QACpCe,IAAI,EAAE,CAAC;QACPF,KAAK,EAAE,CAAC;QACRD,GAAG,EAAE,CAAC;QACNE,MAAM,EAAE;MACV,CAAC,EAAEo0B,OAAO,CAAC;MACX98B,EAAE,CAAC4X,KAAK,GAAG,IAAI;MACf5X,EAAE,CAAC47B,WAAW,GAAG,IAAI;MACrB57B,EAAE,CAAC07B,cAAc,GAAG,IAAI;MACxB17B,EAAE,CAAC27B,WAAW,GAAG,IAAI;MACrB37B,EAAE,CAACg9B,mBAAmB,EAAE;MACxBh9B,EAAE,CAACi9B,aAAa,EAAE;MAClBj9B,EAAE,CAACk9B,kBAAkB,EAAE;MACvBl9B,EAAE,CAAC24B,UAAU,GAAG34B,EAAE,CAACua,YAAY,EAAE,GAC7Bva,EAAE,CAACkb,KAAK,GAAG4hB,OAAO,CAACn0B,IAAI,GAAGm0B,OAAO,CAACr0B,KAAK,GACvCzI,EAAE,CAACib,MAAM,GAAG6hB,OAAO,CAACt0B,GAAG,GAAGs0B,OAAO,CAACp0B,MAAM;MAC5C,IAAI,CAAC1I,EAAE,CAACo8B,iBAAiB,EAAE;QACzBp8B,EAAE,CAACm9B,gBAAgB,EAAE;QACrBn9B,EAAE,CAACo9B,mBAAmB,EAAE;QACxBp9B,EAAE,CAACq9B,eAAe,EAAE;QACpBr9B,EAAE,CAACy7B,MAAM,GAAGpkC,SAAS,CAAC2I,EAAE,EAAEA,EAAE,CAACkH,OAAO,CAAC8uB,KAAK,CAAC;QAC3Ch2B,EAAE,CAACo8B,iBAAiB,GAAG,IAAI;MAC7B;MACAp8B,EAAE,CAACs9B,gBAAgB,EAAE;MACrBt9B,EAAE,CAAC4X,KAAK,GAAG5X,EAAE,CAACu9B,UAAU,EAAE,IAAI,EAAE;MAChCv9B,EAAE,CAACw9B,eAAe,EAAE;MACpB,IAAMC,eAAe,GAAGV,UAAU,GAAG/8B,EAAE,CAAC4X,KAAK,CAACvX,MAAM;MACpDL,EAAE,CAAC09B,qBAAqB,CAACD,eAAe,GAAGlE,MAAM,CAACv5B,EAAE,CAAC4X,KAAK,EAAEmlB,UAAU,CAAC,GAAG/8B,EAAE,CAAC4X,KAAK,CAAC;MACnF5X,EAAE,CAACyG,SAAS,EAAE;MACdzG,EAAE,CAAC29B,4BAA4B,EAAE;MACjC39B,EAAE,CAAC49B,sBAAsB,EAAE;MAC3B59B,EAAE,CAAC69B,2BAA2B,EAAE;MAChC,IAAInG,QAAQ,CAAC5Q,OAAO,KAAK4Q,QAAQ,CAACZ,QAAQ,IAAIY,QAAQ,CAACoG,MAAM,KAAK,MAAM,CAAC,EAAE;QACzE99B,EAAE,CAAC4X,KAAK,GAAGkf,QAAQ,CAAC92B,EAAE,EAAEA,EAAE,CAAC4X,KAAK,CAAC;QACjC5X,EAAE,CAAC47B,WAAW,GAAG,IAAI;MACvB;MACA,IAAI6B,eAAe,EAAE;QACnBz9B,EAAE,CAAC09B,qBAAqB,CAAC19B,EAAE,CAAC4X,KAAK,CAAC;MACpC;MACA5X,EAAE,CAAC+9B,SAAS,EAAE;MACd/9B,EAAE,CAACg+B,GAAG,EAAE;MACRh+B,EAAE,CAACi+B,QAAQ,EAAE;MACbj+B,EAAE,CAACk+B,WAAW,EAAE;IAClB;EAAC;IAAAr/B,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAIm+B,aAAa,GAAGn+B,EAAE,CAACkH,OAAO,CAACiB,OAAO;MACtC,IAAIi2B,UAAU,EAAEC,QAAQ;MACxB,IAAIr+B,EAAE,CAACua,YAAY,EAAE,EAAE;QACrB6jB,UAAU,GAAGp+B,EAAE,CAAC2I,IAAI;QACpB01B,QAAQ,GAAGr+B,EAAE,CAACyI,KAAK;MACrB,CAAC,MAAM;QACL21B,UAAU,GAAGp+B,EAAE,CAACwI,GAAG;QACnB61B,QAAQ,GAAGr+B,EAAE,CAAC0I,MAAM;QACpBy1B,aAAa,GAAG,CAACA,aAAa;MAChC;MACAn+B,EAAE,CAAC2b,WAAW,GAAGyiB,UAAU;MAC3Bp+B,EAAE,CAAC4b,SAAS,GAAGyiB,QAAQ;MACvBr+B,EAAE,CAAC0pB,cAAc,GAAGyU,aAAa;MACjCn+B,EAAE,CAACuX,OAAO,GAAG8mB,QAAQ,GAAGD,UAAU;MAClCp+B,EAAE,CAACs+B,cAAc,GAAGt+B,EAAE,CAACkH,OAAO,CAACq3B,aAAa;IAC9C;EAAC;IAAA1/B,GAAA;IAAAC,KAAA,EACD,SAAAo/B,YAAA,EAAc;MACZ/mC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACg3B,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5C;EAAC;IAAAr/B,GAAA;IAAAC,KAAA,EACD,SAAAk+B,oBAAA,EAAsB;MACpB7lC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC81B,mBAAmB,EAAE,CAAC,IAAI,CAAC,CAAC;IACpD;EAAC;IAAAn+B,GAAA;IAAAC,KAAA,EACD,SAAAm+B,cAAA,EAAgB;MACd,IAAMj9B,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACua,YAAY,EAAE,EAAE;QACrBva,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAAC6gB,QAAQ;QACtB7gB,EAAE,CAAC2I,IAAI,GAAG,CAAC;QACX3I,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAACkb,KAAK;MACrB,CAAC,MAAM;QACLlb,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAAC8gB,SAAS;QACxB9gB,EAAE,CAACwI,GAAG,GAAG,CAAC;QACVxI,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACib,MAAM;MACvB;MACAjb,EAAE,CAACs7B,WAAW,GAAG,CAAC;MAClBt7B,EAAE,CAACo7B,UAAU,GAAG,CAAC;MACjBp7B,EAAE,CAACu7B,YAAY,GAAG,CAAC;MACnBv7B,EAAE,CAACq7B,aAAa,GAAG,CAAC;IACtB;EAAC;IAAAx8B,GAAA;IAAAC,KAAA,EACD,SAAAo+B,mBAAA,EAAqB;MACnB/lC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACg2B,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC;IACnD;EAAC;IAAAr+B,GAAA;IAAAC,KAAA,EACD,SAAA0/B,WAAW14B,IAAI,EAAE;MACf,IAAM9F,EAAE,GAAG,IAAI;MACfA,EAAE,CAAChB,KAAK,CAACy/B,aAAa,CAAC34B,IAAI,EAAE9F,EAAE,CAACkR,UAAU,EAAE,CAAC;MAC7C/Z,QAAQ,CAAC6I,EAAE,CAACkH,OAAO,CAACpB,IAAI,CAAC,EAAE,CAAC9F,EAAE,CAAC,CAAC;IAClC;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAq+B,iBAAA,EAAmB;MACjB,IAAI,CAACqB,UAAU,CAAC,kBAAkB,CAAC;IACrC;EAAC;IAAA3/B,GAAA;IAAAC,KAAA,EACD,SAAAs+B,oBAAA,EAAsB,CAAC;EAAC;IAAAv+B,GAAA;IAAAC,KAAA,EACxB,SAAAu+B,gBAAA,EAAkB;MAChB,IAAI,CAACmB,UAAU,CAAC,iBAAiB,CAAC;IACpC;EAAC;IAAA3/B,GAAA;IAAAC,KAAA,EACD,SAAAw+B,iBAAA,EAAmB;MACjB,IAAI,CAACkB,UAAU,CAAC,kBAAkB,CAAC;IACrC;EAAC;IAAA3/B,GAAA;IAAAC,KAAA,EACD,SAAAy+B,WAAA,EAAa;MACX,OAAO,EAAE;IACX;EAAC;IAAA1+B,GAAA;IAAAC,KAAA,EACD,SAAA0+B,gBAAA,EAAkB;MAChB,IAAI,CAACgB,UAAU,CAAC,iBAAiB,CAAC;IACpC;EAAC;IAAA3/B,GAAA;IAAAC,KAAA,EACD,SAAA4/B,4BAAA,EAA8B;MAC5BvnC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACw3B,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D;EAAC;IAAA7/B,GAAA;IAAAC,KAAA,EACD,SAAA6/B,mBAAmB/mB,KAAK,EAAE;MACxB,IAAM5X,EAAE,GAAG,IAAI;MACf,IAAM03B,QAAQ,GAAG13B,EAAE,CAACkH,OAAO,CAAC0Q,KAAK;MACjC,IAAIllB,CAAC,EAAEwW,IAAI,EAAEnI,IAAI;MACjB,KAAKrO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG0O,KAAK,CAACvX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QAC9CqO,IAAI,GAAG6W,KAAK,CAACllB,CAAC,CAAC;QACfqO,IAAI,CAACwS,KAAK,GAAGpc,QAAQ,CAACugC,QAAQ,CAACvgC,QAAQ,EAAE,CAAC4J,IAAI,CAACjC,KAAK,EAAEpM,CAAC,EAAEklB,KAAK,CAAC,EAAE5X,EAAE,CAAC;MACtE;IACF;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAA8/B,2BAAA,EAA6B;MAC3BznC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC03B,0BAA0B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3D;EAAC;IAAA//B,GAAA;IAAAC,KAAA,EACD,SAAA6+B,6BAAA,EAA+B;MAC7BxmC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAACy2B,4BAA4B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7D;EAAC;IAAA9+B,GAAA;IAAAC,KAAA,EACD,SAAA8+B,uBAAA,EAAyB;MACvB,IAAM59B,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMwwB,QAAQ,GAAGxwB,OAAO,CAAC0Q,KAAK;MAC9B,IAAMinB,QAAQ,GAAG7+B,EAAE,CAAC4X,KAAK,CAACvX,MAAM;MAChC,IAAMo2B,WAAW,GAAGiB,QAAQ,CAACjB,WAAW,IAAI,CAAC;MAC7C,IAAMC,WAAW,GAAGgB,QAAQ,CAAChB,WAAW;MACxC,IAAI8E,aAAa,GAAG/E,WAAW;MAC/B,IAAIJ,SAAS,EAAEvV,SAAS,EAAEge,gBAAgB;MAC1C,IAAI,CAAC9+B,EAAE,CAAC++B,UAAU,EAAE,IAAI,CAACrH,QAAQ,CAAC5Q,OAAO,IAAI2P,WAAW,IAAIC,WAAW,IAAImI,QAAQ,IAAI,CAAC,IAAI,CAAC7+B,EAAE,CAACua,YAAY,EAAE,EAAE;QAC9Gva,EAAE,CAACw7B,aAAa,GAAG/E,WAAW;QAC9B;MACF;MACA,IAAMuI,UAAU,GAAGh/B,EAAE,CAACi/B,cAAc,EAAE;MACtC,IAAMC,aAAa,GAAGF,UAAU,CAACG,MAAM,CAACjkB,KAAK;MAC7C,IAAMkkB,cAAc,GAAGJ,UAAU,CAACK,OAAO,CAACpkB,MAAM;MAChD,IAAM4F,QAAQ,GAAGxrB,WAAW,CAAC2K,EAAE,CAAChB,KAAK,CAACkc,KAAK,GAAGgkB,aAAa,EAAE,CAAC,EAAEl/B,EAAE,CAAC6gB,QAAQ,CAAC;MAC5EwV,SAAS,GAAGnvB,OAAO,CAAC2V,MAAM,GAAG7c,EAAE,CAAC6gB,QAAQ,GAAGge,QAAQ,GAAGhe,QAAQ,IAAIge,QAAQ,GAAG,CAAC,CAAC;MAC/E,IAAIK,aAAa,GAAG,CAAC,GAAG7I,SAAS,EAAE;QACjCA,SAAS,GAAGxV,QAAQ,IAAIge,QAAQ,IAAI33B,OAAO,CAAC2V,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;QAC9DiE,SAAS,GAAG9gB,EAAE,CAAC8gB,SAAS,GAAGqZ,iBAAiB,CAACjzB,OAAO,CAAC4V,IAAI,CAAC,GAC1D4a,QAAQ,CAACzI,OAAO,GAAGmL,cAAc,CAAClzB,OAAO,CAACgX,KAAK,EAAEle,EAAE,CAAChB,KAAK,CAACkI,OAAO,CAACozB,IAAI,CAAC;QACvEwE,gBAAgB,GAAGl/B,IAAI,CAAC4qB,IAAI,CAAC0U,aAAa,GAAGA,aAAa,GAAGE,cAAc,GAAGA,cAAc,CAAC;QAC7F5D,aAAa,GAAGjkC,SAAS,CAACqI,IAAI,CAACC,GAAG,CAChCD,IAAI,CAAC0/B,IAAI,CAAC1/B,IAAI,CAACC,GAAG,CAAC,CAACm/B,UAAU,CAACK,OAAO,CAACpkB,MAAM,GAAG,CAAC,IAAIob,SAAS,EAAE,CAAC,CAAC,CAAC,EACnEz2B,IAAI,CAAC0/B,IAAI,CAAC1/B,IAAI,CAACC,GAAG,CAACihB,SAAS,GAAGge,gBAAgB,EAAE,CAAC,CAAC,CAAC,GAAGl/B,IAAI,CAAC0/B,IAAI,CAACF,cAAc,GAAGN,gBAAgB,CAAC,CACpG,CAAC;QACFtD,aAAa,GAAG57B,IAAI,CAACuC,GAAG,CAACs0B,WAAW,EAAE72B,IAAI,CAACC,GAAG,CAAC62B,WAAW,EAAE8E,aAAa,CAAC,CAAC;MAC7E;MACAx7B,EAAE,CAACw7B,aAAa,GAAGA,aAAa;IAClC;EAAC;IAAA38B,GAAA;IAAAC,KAAA,EACD,SAAA++B,4BAAA,EAA8B;MAC5B1mC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC22B,2BAA2B,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5D;EAAC;IAAAh/B,GAAA;IAAAC,KAAA,EACD,SAAAi/B,UAAA,EAAY;MACV5mC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC62B,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;IAC1C;EAAC;IAAAl/B,GAAA;IAAAC,KAAA,EACD,SAAAk/B,IAAA,EAAM;MACJ,IAAMh+B,EAAE,GAAG,IAAI;MACf,IAAMimB,OAAO,GAAG;QACd/K,KAAK,EAAE,CAAC;QACRD,MAAM,EAAE;MACV,CAAC;MACD,IAAOjc,KAAK,GAAkEgB,EAAE,CAAzEhB,KAAK;QAAAugC,YAAA,GAAkEv/B,EAAE,CAAlEkH,OAAO;QAAUwwB,QAAQ,GAAA6H,YAAA,CAAf3nB,KAAK;QAAmB4nB,SAAS,GAAAD,YAAA,CAAhBrhB,KAAK;QAAmBuhB,QAAQ,GAAAF,YAAA,CAAdziB,IAAI;MAC/D,IAAMgK,OAAO,GAAG9mB,EAAE,CAAC++B,UAAU,EAAE;MAC/B,IAAMxkB,YAAY,GAAGva,EAAE,CAACua,YAAY,EAAE;MACtC,IAAIuM,OAAO,EAAE;QACX,IAAM4Y,WAAW,GAAGtF,cAAc,CAACoF,SAAS,EAAExgC,KAAK,CAACkI,OAAO,CAACozB,IAAI,CAAC;QACjE,IAAI/f,YAAY,EAAE;UAChB0L,OAAO,CAAC/K,KAAK,GAAGlb,EAAE,CAAC6gB,QAAQ;UAC3BoF,OAAO,CAAChL,MAAM,GAAGkf,iBAAiB,CAACsF,QAAQ,CAAC,GAAGC,WAAW;QAC5D,CAAC,MAAM;UACLzZ,OAAO,CAAChL,MAAM,GAAGjb,EAAE,CAAC8gB,SAAS;UAC7BmF,OAAO,CAAC/K,KAAK,GAAGif,iBAAiB,CAACsF,QAAQ,CAAC,GAAGC,WAAW;QAC3D;QACA,IAAIhI,QAAQ,CAAC5Q,OAAO,IAAI9mB,EAAE,CAAC4X,KAAK,CAACvX,MAAM,EAAE;UACvC,IAAAs/B,kBAAA,GAAuC3/B,EAAE,CAACi/B,cAAc,EAAE;YAAnD/G,KAAK,GAAAyH,kBAAA,CAALzH,KAAK;YAAE9c,IAAI,GAAAukB,kBAAA,CAAJvkB,IAAI;YAAE+jB,MAAM,GAAAQ,kBAAA,CAANR,MAAM;YAAEE,OAAO,GAAAM,kBAAA,CAAPN,OAAO;UACnC,IAAMO,WAAW,GAAGlI,QAAQ,CAACzI,OAAO,GAAG,CAAC;UACxC,IAAM4Q,YAAY,GAAG1rC,SAAS,CAAC6L,EAAE,CAACw7B,aAAa,CAAC;UAChD,IAAM1c,GAAG,GAAGlf,IAAI,CAACkf,GAAG,CAAC+gB,YAAY,CAAC;UAClC,IAAM7gB,GAAG,GAAGpf,IAAI,CAACof,GAAG,CAAC6gB,YAAY,CAAC;UAClC,IAAItlB,YAAY,EAAE;YAChB,IAAMulB,WAAW,GAAGpI,QAAQ,CAACf,MAAM,GAAG,CAAC,GAAG3X,GAAG,GAAGmgB,MAAM,CAACjkB,KAAK,GAAG4D,GAAG,GAAGugB,OAAO,CAACpkB,MAAM;YACnFgL,OAAO,CAAChL,MAAM,GAAGrb,IAAI,CAACC,GAAG,CAACG,EAAE,CAAC8gB,SAAS,EAAEmF,OAAO,CAAChL,MAAM,GAAG6kB,WAAW,GAAGF,WAAW,CAAC;UACrF,CAAC,MAAM;YACL,IAAMG,UAAU,GAAGrI,QAAQ,CAACf,MAAM,GAAG,CAAC,GAAG7X,GAAG,GAAGqgB,MAAM,CAACjkB,KAAK,GAAG8D,GAAG,GAAGqgB,OAAO,CAACpkB,MAAM;YAClFgL,OAAO,CAAC/K,KAAK,GAAGtb,IAAI,CAACC,GAAG,CAACG,EAAE,CAAC6gB,QAAQ,EAAEoF,OAAO,CAAC/K,KAAK,GAAG6kB,UAAU,GAAGH,WAAW,CAAC;UACjF;UACA5/B,EAAE,CAACggC,iBAAiB,CAAC9H,KAAK,EAAE9c,IAAI,EAAE4D,GAAG,EAAEF,GAAG,CAAC;QAC7C;MACF;MACA9e,EAAE,CAACigC,cAAc,EAAE;MACnB,IAAI1lB,YAAY,EAAE;QAChBva,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAACuX,OAAO,GAAGvY,KAAK,CAACkc,KAAK,GAAGlb,EAAE,CAACm7B,QAAQ,CAACxyB,IAAI,GAAG3I,EAAE,CAACm7B,QAAQ,CAAC1yB,KAAK;QAC1EzI,EAAE,CAACib,MAAM,GAAGgL,OAAO,CAAChL,MAAM;MAC5B,CAAC,MAAM;QACLjb,EAAE,CAACkb,KAAK,GAAG+K,OAAO,CAAC/K,KAAK;QACxBlb,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAACuX,OAAO,GAAGvY,KAAK,CAACic,MAAM,GAAGjb,EAAE,CAACm7B,QAAQ,CAAC3yB,GAAG,GAAGxI,EAAE,CAACm7B,QAAQ,CAACzyB,MAAM;MAC9E;IACF;EAAC;IAAA7J,GAAA;IAAAC,KAAA,EACD,SAAAkhC,kBAAkB9H,KAAK,EAAE9c,IAAI,EAAE4D,GAAG,EAAEF,GAAG,EAAE;MACvC,IAAM9e,EAAE,GAAG,IAAI;MACf,IAAAkgC,YAAA,GAA4ClgC,EAAE,CAACkH,OAAO;QAAAi5B,kBAAA,GAAAD,YAAA,CAA/CtoB,KAAK;QAAGuf,KAAK,GAAAgJ,kBAAA,CAALhJ,KAAK;QAAElI,OAAO,GAAAkR,kBAAA,CAAPlR,OAAO;QAAGnF,QAAQ,GAAAoW,YAAA,CAARpW,QAAQ;MACxC,IAAMsW,SAAS,GAAGpgC,EAAE,CAACw7B,aAAa,KAAK,CAAC;MACxC,IAAM6E,gBAAgB,GAAGvW,QAAQ,KAAK,KAAK,IAAI9pB,EAAE,CAACmM,IAAI,KAAK,GAAG;MAC9D,IAAInM,EAAE,CAACua,YAAY,EAAE,EAAE;QACrB,IAAM+lB,UAAU,GAAGtgC,EAAE,CAAC6X,eAAe,CAAC,CAAC,CAAC,GAAG7X,EAAE,CAAC2I,IAAI;QAClD,IAAM43B,WAAW,GAAGvgC,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAAC6X,eAAe,CAAC7X,EAAE,CAAC4X,KAAK,CAACvX,MAAM,GAAG,CAAC,CAAC;QACtE,IAAIi7B,WAAW,GAAG,CAAC;QACnB,IAAIC,YAAY,GAAG,CAAC;QACpB,IAAI6E,SAAS,EAAE;UACb,IAAIC,gBAAgB,EAAE;YACpB/E,WAAW,GAAGxc,GAAG,GAAGoZ,KAAK,CAAChd,KAAK;YAC/BqgB,YAAY,GAAGvc,GAAG,GAAG5D,IAAI,CAACH,MAAM;UAClC,CAAC,MAAM;YACLqgB,WAAW,GAAGtc,GAAG,GAAGkZ,KAAK,CAACjd,MAAM;YAChCsgB,YAAY,GAAGzc,GAAG,GAAG1D,IAAI,CAACF,KAAK;UACjC;QACF,CAAC,MAAM,IAAIic,KAAK,KAAK,OAAO,EAAE;UAC5BoE,YAAY,GAAGngB,IAAI,CAACF,KAAK;QAC3B,CAAC,MAAM,IAAIic,KAAK,KAAK,KAAK,EAAE;UAC1BmE,WAAW,GAAGpD,KAAK,CAAChd,KAAK;QAC3B,CAAC,MAAM;UACLogB,WAAW,GAAGpD,KAAK,CAAChd,KAAK,GAAG,CAAC;UAC7BqgB,YAAY,GAAGngB,IAAI,CAACF,KAAK,GAAG,CAAC;QAC/B;QACAlb,EAAE,CAACs7B,WAAW,GAAG17B,IAAI,CAACuC,GAAG,CAAC,CAACm5B,WAAW,GAAGgF,UAAU,GAAGrR,OAAO,IAAIjvB,EAAE,CAACkb,KAAK,IAAIlb,EAAE,CAACkb,KAAK,GAAGolB,UAAU,CAAC,EAAE,CAAC,CAAC;QACvGtgC,EAAE,CAACu7B,YAAY,GAAG37B,IAAI,CAACuC,GAAG,CAAC,CAACo5B,YAAY,GAAGgF,WAAW,GAAGtR,OAAO,IAAIjvB,EAAE,CAACkb,KAAK,IAAIlb,EAAE,CAACkb,KAAK,GAAGqlB,WAAW,CAAC,EAAE,CAAC,CAAC;MAC7G,CAAC,MAAM;QACL,IAAInF,UAAU,GAAGhgB,IAAI,CAACH,MAAM,GAAG,CAAC;QAChC,IAAIogB,aAAa,GAAGnD,KAAK,CAACjd,MAAM,GAAG,CAAC;QACpC,IAAIkc,KAAK,KAAK,OAAO,EAAE;UACrBiE,UAAU,GAAG,CAAC;UACdC,aAAa,GAAGnD,KAAK,CAACjd,MAAM;QAC9B,CAAC,MAAM,IAAIkc,KAAK,KAAK,KAAK,EAAE;UAC1BiE,UAAU,GAAGhgB,IAAI,CAACH,MAAM;UACxBogB,aAAa,GAAG,CAAC;QACnB;QACAr7B,EAAE,CAACo7B,UAAU,GAAGA,UAAU,GAAGnM,OAAO;QACpCjvB,EAAE,CAACq7B,aAAa,GAAGA,aAAa,GAAGpM,OAAO;MAC5C;IACF;EAAC;IAAApwB,GAAA;IAAAC,KAAA,EACD,SAAAmhC,eAAA,EAAiB;MACf,IAAMjgC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACm7B,QAAQ,EAAE;QACfn7B,EAAE,CAACm7B,QAAQ,CAACxyB,IAAI,GAAG/I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACs7B,WAAW,EAAEt7B,EAAE,CAACm7B,QAAQ,CAACxyB,IAAI,CAAC;QAC7D3I,EAAE,CAACm7B,QAAQ,CAAC3yB,GAAG,GAAG5I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACo7B,UAAU,EAAEp7B,EAAE,CAACm7B,QAAQ,CAAC3yB,GAAG,CAAC;QAC1DxI,EAAE,CAACm7B,QAAQ,CAAC1yB,KAAK,GAAG7I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACu7B,YAAY,EAAEv7B,EAAE,CAACm7B,QAAQ,CAAC1yB,KAAK,CAAC;QAChEzI,EAAE,CAACm7B,QAAQ,CAACzyB,MAAM,GAAG9I,IAAI,CAACuC,GAAG,CAACnC,EAAE,CAACq7B,aAAa,EAAEr7B,EAAE,CAACm7B,QAAQ,CAACzyB,MAAM,CAAC;MACrE;IACF;EAAC;IAAA7J,GAAA;IAAAC,KAAA,EACD,SAAAm/B,SAAA,EAAW;MACT9mC,QAAQ,CAAC,IAAI,CAAC+P,OAAO,CAAC+2B,QAAQ,EAAE,CAAC,IAAI,CAAC,CAAC;IACzC;EAAC;IAAAp/B,GAAA;IAAAC,KAAA,EACD,SAAAyb,aAAA,EAAe;MACb,IAAAimB,aAAA,GAAyB,IAAI,CAACt5B,OAAO;QAA9BiF,IAAI,GAAAq0B,aAAA,CAAJr0B,IAAI;QAAE2d,QAAQ,GAAA0W,aAAA,CAAR1W,QAAQ;MACrB,OAAOA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAI3d,IAAI,KAAK,GAAG;IACpE;EAAC;IAAAtN,GAAA;IAAAC,KAAA,EACD,SAAA2hC,WAAA,EAAa;MACX,OAAO,IAAI,CAACv5B,OAAO,CAACwlB,QAAQ;IAC9B;EAAC;IAAA7tB,GAAA;IAAAC,KAAA,EACD,SAAA4+B,sBAAsB9lB,KAAK,EAAE;MAC3B,IAAM5X,EAAE,GAAG,IAAI;MACfA,EAAE,CAAC0+B,2BAA2B,EAAE;MAChC1+B,EAAE,CAAC2+B,kBAAkB,CAAC/mB,KAAK,CAAC;MAC5B,IAAIllB,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG0O,KAAK,CAACvX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QAC9C,IAAIqB,aAAa,CAAC6jB,KAAK,CAACllB,CAAC,CAAC,CAAC6gB,KAAK,CAAC,EAAE;UACjCqE,KAAK,CAAClB,MAAM,CAAChkB,CAAC,EAAE,CAAC,CAAC;UAClBwW,IAAI,EAAE;UACNxW,CAAC,EAAE;QACL;MACF;MACAsN,EAAE,CAAC4+B,0BAA0B,EAAE;IACjC;EAAC;IAAA//B,GAAA;IAAAC,KAAA,EACD,SAAAmgC,eAAA,EAAiB;MACf,IAAMj/B,EAAE,GAAG,IAAI;MACf,IAAIg/B,UAAU,GAAGh/B,EAAE,CAAC47B,WAAW;MAC/B,IAAI,CAACoD,UAAU,EAAE;QACf,IAAMjC,UAAU,GAAG/8B,EAAE,CAACkH,OAAO,CAAC0Q,KAAK,CAACmlB,UAAU;QAC9C,IAAInlB,KAAK,GAAG5X,EAAE,CAAC4X,KAAK;QACpB,IAAImlB,UAAU,GAAGnlB,KAAK,CAACvX,MAAM,EAAE;UAC7BuX,KAAK,GAAG2hB,MAAM,CAAC3hB,KAAK,EAAEmlB,UAAU,CAAC;QACnC;QACA/8B,EAAE,CAAC47B,WAAW,GAAGoD,UAAU,GAAGh/B,EAAE,CAAC0gC,kBAAkB,CAAC9oB,KAAK,EAAEA,KAAK,CAACvX,MAAM,CAAC;MAC1E;MACA,OAAO2+B,UAAU;IACnB;EAAC;IAAAngC,GAAA;IAAAC,KAAA,EACD,SAAA4hC,mBAAmB9oB,KAAK,EAAEvX,MAAM,EAAE;MAChC,IAAOyN,GAAG,GAA+B,IAAI,CAAtCA,GAAG;QAAqBksB,MAAM,GAAI,IAAI,CAAjC6B,iBAAiB;MAC7B,IAAM8E,MAAM,GAAG,EAAE;MACjB,IAAMC,OAAO,GAAG,EAAE;MAClB,IAAIC,eAAe,GAAG,CAAC;MACvB,IAAIC,gBAAgB,GAAG,CAAC;MACxB,IAAIpuC,CAAC,EAAEoB,CAAC,EAAEu1B,IAAI,EAAE9V,KAAK,EAAEwtB,QAAQ,EAAEC,UAAU,EAAE3sB,KAAK,EAAEmmB,UAAU,EAAEtf,KAAK,EAAED,MAAM,EAAEgmB,WAAW;MAC1F,KAAKvuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;QAC3B6gB,KAAK,GAAGqE,KAAK,CAACllB,CAAC,CAAC,CAAC6gB,KAAK;QACtBwtB,QAAQ,GAAG,IAAI,CAACG,uBAAuB,CAACxuC,CAAC,CAAC;QAC1Cob,GAAG,CAACwsB,IAAI,GAAG0G,UAAU,GAAGD,QAAQ,CAACI,MAAM;QACvC9sB,KAAK,GAAG2lB,MAAM,CAACgH,UAAU,CAAC,GAAGhH,MAAM,CAACgH,UAAU,CAAC,IAAI;UAACp3B,IAAI,EAAE,CAAC,CAAC;UAAEqwB,EAAE,EAAE;QAAE,CAAC;QACrEO,UAAU,GAAGuG,QAAQ,CAACvG,UAAU;QAChCtf,KAAK,GAAGD,MAAM,GAAG,CAAC;QAClB,IAAI,CAAClnB,aAAa,CAACwf,KAAK,CAAC,IAAI,CAAC1gB,OAAO,CAAC0gB,KAAK,CAAC,EAAE;UAC5C2H,KAAK,GAAGzjB,YAAY,CAACqW,GAAG,EAAEuG,KAAK,CAACzK,IAAI,EAAEyK,KAAK,CAAC4lB,EAAE,EAAE/e,KAAK,EAAE3H,KAAK,CAAC;UAC7D0H,MAAM,GAAGuf,UAAU;QACrB,CAAC,MAAM,IAAI3nC,OAAO,CAAC0gB,KAAK,CAAC,EAAE;UACzB,KAAKzf,CAAC,GAAG,CAAC,EAAEu1B,IAAI,GAAG9V,KAAK,CAAClT,MAAM,EAAEvM,CAAC,GAAGu1B,IAAI,EAAE,EAAEv1B,CAAC,EAAE;YAC9CmtC,WAAW,GAAG1tB,KAAK,CAACzf,CAAC,CAAC;YACtB,IAAI,CAACC,aAAa,CAACktC,WAAW,CAAC,IAAI,CAACpuC,OAAO,CAACouC,WAAW,CAAC,EAAE;cACxD/lB,KAAK,GAAGzjB,YAAY,CAACqW,GAAG,EAAEuG,KAAK,CAACzK,IAAI,EAAEyK,KAAK,CAAC4lB,EAAE,EAAE/e,KAAK,EAAE+lB,WAAW,CAAC;cACnEhmB,MAAM,IAAIuf,UAAU;YACtB;UACF;QACF;QACAmG,MAAM,CAACj/B,IAAI,CAACwZ,KAAK,CAAC;QAClB0lB,OAAO,CAACl/B,IAAI,CAACuZ,MAAM,CAAC;QACpB4lB,eAAe,GAAGjhC,IAAI,CAACuC,GAAG,CAAC+Y,KAAK,EAAE2lB,eAAe,CAAC;QAClDC,gBAAgB,GAAGlhC,IAAI,CAACuC,GAAG,CAAC8Y,MAAM,EAAE6lB,gBAAgB,CAAC;MACvD;MACA/G,cAAc,CAACC,MAAM,EAAE35B,MAAM,CAAC;MAC9B,IAAM8+B,MAAM,GAAGwB,MAAM,CAACnlB,OAAO,CAACqlB,eAAe,CAAC;MAC9C,IAAMxB,OAAO,GAAGuB,OAAO,CAACplB,OAAO,CAACslB,gBAAgB,CAAC;MACjD,IAAMM,OAAO,GAAG,SAAVA,OAAOA,CAAIC,GAAG;QAAA,OAAM;UAACnmB,KAAK,EAAEylB,MAAM,CAACU,GAAG,CAAC,IAAI,CAAC;UAAEpmB,MAAM,EAAE2lB,OAAO,CAACS,GAAG,CAAC,IAAI;QAAC,CAAC;MAAA,CAAC;MAC/E,OAAO;QACLnJ,KAAK,EAAEkJ,OAAO,CAAC,CAAC,CAAC;QACjBhmB,IAAI,EAAEgmB,OAAO,CAAC/gC,MAAM,GAAG,CAAC,CAAC;QACzB8+B,MAAM,EAAEiC,OAAO,CAACjC,MAAM,CAAC;QACvBE,OAAO,EAAE+B,OAAO,CAAC/B,OAAO,CAAC;QACzBsB,MAAM,EAANA,MAAM;QACNC,OAAO,EAAPA;MACF,CAAC;IACH;EAAC;IAAA/hC,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,OAAOA,KAAK;IACd;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA6Y,iBAAiB7Y,KAAK,EAAEqK,KAAK,EAAE;MAC7B,OAAOyJ,GAAG;IACZ;EAAC;IAAA/T,GAAA;IAAAC,KAAA,EACD,SAAAwiC,iBAAiBC,KAAK,EAAE,CAAC;EAAC;IAAA1iC,GAAA;IAAAC,KAAA,EAC1B,SAAA+Y,gBAAgB1O,KAAK,EAAE;MACrB,IAAMyO,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIzO,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGyO,KAAK,CAACvX,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO,IAAI;MACb;MACA,OAAO,IAAI,CAACsX,gBAAgB,CAACC,KAAK,CAACzO,KAAK,CAAC,CAACrK,KAAK,CAAC;IAClD;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA8e,mBAAmB4jB,OAAO,EAAE;MAC1B,IAAMxhC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAAC0pB,cAAc,EAAE;QACrB8X,OAAO,GAAG,CAAC,GAAGA,OAAO;MACvB;MACA,IAAMD,KAAK,GAAGvhC,EAAE,CAAC2b,WAAW,GAAG6lB,OAAO,GAAGxhC,EAAE,CAACuX,OAAO;MACnD,OAAO5f,WAAW,CAACqI,EAAE,CAACs+B,cAAc,GAAGzmC,WAAW,CAACmI,EAAE,CAAChB,KAAK,EAAEuiC,KAAK,EAAE,CAAC,CAAC,GAAGA,KAAK,CAAC;IACjF;EAAC;IAAA1iC,GAAA;IAAAC,KAAA,EACD,SAAA2iC,mBAAmBF,KAAK,EAAE;MACxB,IAAMC,OAAO,GAAG,CAACD,KAAK,GAAG,IAAI,CAAC5lB,WAAW,IAAI,IAAI,CAACpE,OAAO;MACzD,OAAO,IAAI,CAACmS,cAAc,GAAG,CAAC,GAAG8X,OAAO,GAAGA,OAAO;IACpD;EAAC;IAAA3iC,GAAA;IAAAC,KAAA,EACD,SAAAub,aAAA,EAAe;MACb,OAAO,IAAI,CAAC1C,gBAAgB,CAAC,IAAI,CAAC+pB,YAAY,EAAE,CAAC;IACnD;EAAC;IAAA7iC,GAAA;IAAAC,KAAA,EACD,SAAA4iC,aAAA,EAAe;MACb,IAAO7hC,GAAG,GAAS,IAAI,CAAhBA,GAAG;QAAEsC,GAAG,GAAI,IAAI,CAAXA,GAAG;MACf,OAAOtC,GAAG,GAAG,CAAC,IAAIsC,GAAG,GAAG,CAAC,GAAGA,GAAG,GAC7BtC,GAAG,GAAG,CAAC,IAAIsC,GAAG,GAAG,CAAC,GAAGtC,GAAG,GACxB,CAAC;IACL;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAW/H,KAAK,EAAE;MAChB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAM4X,KAAK,GAAG5X,EAAE,CAAC4X,KAAK,IAAI,EAAE;MAC5B,IAAIzO,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGyO,KAAK,CAACvX,MAAM,EAAE;QACtC,IAAMU,IAAI,GAAG6W,KAAK,CAACzO,KAAK,CAAC;QACzB,OAAOpI,IAAI,CAAC0N,QAAQ,KACrB1N,IAAI,CAAC0N,QAAQ,GAAGisB,iBAAiB,CAAC16B,EAAE,CAACkR,UAAU,EAAE,EAAE/H,KAAK,EAAEpI,IAAI,CAAC,CAAC;MACjE;MACA,OAAOf,EAAE,CAACyO,QAAQ,KAClBzO,EAAE,CAACyO,QAAQ,GAAGgsB,kBAAkB,CAACz6B,EAAE,CAAChB,KAAK,CAACkS,UAAU,EAAE,EAAElR,EAAE,CAAC,CAAC;IAC9D;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAA05B,UAAA,EAAY;MACV,IAAMx4B,EAAE,GAAG,IAAI;MACf,IAAM2hC,WAAW,GAAG3hC,EAAE,CAACkH,OAAO,CAAC0Q,KAAK;MACpC,IAAMgqB,GAAG,GAAGztC,SAAS,CAAC6L,EAAE,CAACw7B,aAAa,CAAC;MACvC,IAAM1c,GAAG,GAAGlf,IAAI,CAAC8X,GAAG,CAAC9X,IAAI,CAACkf,GAAG,CAAC8iB,GAAG,CAAC,CAAC;MACnC,IAAM5iB,GAAG,GAAGpf,IAAI,CAAC8X,GAAG,CAAC9X,IAAI,CAACof,GAAG,CAAC4iB,GAAG,CAAC,CAAC;MACnC,IAAM5C,UAAU,GAAGh/B,EAAE,CAACi/B,cAAc,EAAE;MACtC,IAAMhQ,OAAO,GAAG0S,WAAW,CAAC5K,eAAe,IAAI,CAAC;MAChD,IAAMzhC,CAAC,GAAG0pC,UAAU,GAAGA,UAAU,CAACG,MAAM,CAACjkB,KAAK,GAAG+T,OAAO,GAAG,CAAC;MAC5D,IAAMv7B,CAAC,GAAGsrC,UAAU,GAAGA,UAAU,CAACK,OAAO,CAACpkB,MAAM,GAAGgU,OAAO,GAAG,CAAC;MAC9D,OAAOjvB,EAAE,CAACua,YAAY,EAAE,GACpB7mB,CAAC,GAAGorB,GAAG,GAAGxpB,CAAC,GAAG0pB,GAAG,GAAG1pB,CAAC,GAAGwpB,GAAG,GAAGprB,CAAC,GAAGsrB,GAAG,GACrCtrB,CAAC,GAAGsrB,GAAG,GAAG1pB,CAAC,GAAGwpB,GAAG,GAAGprB,CAAC,GAAGorB,GAAG,GAAGxpB,CAAC,GAAG0pB,GAAG;IAC3C;EAAC;IAAAngB,GAAA;IAAAC,KAAA,EACD,SAAAigC,WAAA,EAAa;MACX,IAAMjY,OAAO,GAAG,IAAI,CAAC5f,OAAO,CAAC4f,OAAO;MACpC,IAAIA,OAAO,KAAK,MAAM,EAAE;QACtB,OAAO,CAAC,CAACA,OAAO;MAClB;MACA,OAAO,IAAI,CAACtb,uBAAuB,EAAE,CAACnL,MAAM,GAAG,CAAC;IAClD;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAA+iC,sBAAsBhuB,SAAS,EAAE;MAC/B,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAMmM,IAAI,GAAGnM,EAAE,CAACmM,IAAI;MACpB,IAAMnN,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAMkI,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAO4V,IAAI,GAAc5V,OAAO,CAAzB4V,IAAI;QAAEgN,QAAQ,GAAI5iB,OAAO,CAAnB4iB,QAAQ;MACrB,IAAMjN,MAAM,GAAGC,IAAI,CAACD,MAAM;MAC1B,IAAMtC,YAAY,GAAGva,EAAE,CAACua,YAAY,EAAE;MACtC,IAAM3C,KAAK,GAAG5X,EAAE,CAAC4X,KAAK;MACtB,IAAMkqB,WAAW,GAAGlqB,KAAK,CAACvX,MAAM,IAAIwc,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;MACnD,IAAMklB,EAAE,GAAG5H,iBAAiB,CAACrd,IAAI,CAAC;MAClC,IAAMpc,KAAK,GAAG,EAAE;MAChB,IAAMshC,UAAU,GAAGllB,IAAI,CAACwf,UAAU,CAACt8B,EAAE,CAACkR,UAAU,EAAE,CAAC;MACnD,IAAM+wB,SAAS,GAAGD,UAAU,CAAC/L,UAAU,GAAG+L,UAAU,CAAChgB,WAAW,GAAG,CAAC;MACpE,IAAMkgB,aAAa,GAAGD,SAAS,GAAG,CAAC;MACnC,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAYZ,KAAK,EAAE;QACvC,OAAO1pC,WAAW,CAACmH,KAAK,EAAEuiC,KAAK,EAAEU,SAAS,CAAC;MAC7C,CAAC;MACD,IAAIG,WAAW,EAAE1vC,CAAC,EAAEonC,SAAS,EAAEuI,gBAAgB;MAC/C,IAAIC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MACtC,IAAI/Y,QAAQ,KAAK,KAAK,EAAE;QACtBsY,WAAW,GAAGD,gBAAgB,CAACniC,EAAE,CAAC0I,MAAM,CAAC;QACzC65B,GAAG,GAAGviC,EAAE,CAAC0I,MAAM,GAAGq5B,EAAE;QACpBU,GAAG,GAAGL,WAAW,GAAGF,aAAa;QACjCS,EAAE,GAAGR,gBAAgB,CAACtuB,SAAS,CAACrL,GAAG,CAAC,GAAG05B,aAAa;QACpDW,EAAE,GAAGhvB,SAAS,CAACnL,MAAM;MACvB,CAAC,MAAM,IAAIohB,QAAQ,KAAK,QAAQ,EAAE;QAChCsY,WAAW,GAAGD,gBAAgB,CAACniC,EAAE,CAACwI,GAAG,CAAC;QACtCm6B,EAAE,GAAG9uB,SAAS,CAACrL,GAAG;QAClBq6B,EAAE,GAAGV,gBAAgB,CAACtuB,SAAS,CAACnL,MAAM,CAAC,GAAGw5B,aAAa;QACvDK,GAAG,GAAGH,WAAW,GAAGF,aAAa;QACjCO,GAAG,GAAGziC,EAAE,CAACwI,GAAG,GAAGu5B,EAAE;MACnB,CAAC,MAAM,IAAIjY,QAAQ,KAAK,MAAM,EAAE;QAC9BsY,WAAW,GAAGD,gBAAgB,CAACniC,EAAE,CAACyI,KAAK,CAAC;QACxC65B,GAAG,GAAGtiC,EAAE,CAACyI,KAAK,GAAGs5B,EAAE;QACnBS,GAAG,GAAGJ,WAAW,GAAGF,aAAa;QACjCQ,EAAE,GAAGP,gBAAgB,CAACtuB,SAAS,CAAClL,IAAI,CAAC,GAAGu5B,aAAa;QACrDU,EAAE,GAAG/uB,SAAS,CAACpL,KAAK;MACtB,CAAC,MAAM,IAAIqhB,QAAQ,KAAK,OAAO,EAAE;QAC/BsY,WAAW,GAAGD,gBAAgB,CAACniC,EAAE,CAAC2I,IAAI,CAAC;QACvC+5B,EAAE,GAAG7uB,SAAS,CAAClL,IAAI;QACnBi6B,EAAE,GAAGT,gBAAgB,CAACtuB,SAAS,CAACpL,KAAK,CAAC,GAAGy5B,aAAa;QACtDI,GAAG,GAAGF,WAAW,GAAGF,aAAa;QACjCM,GAAG,GAAGxiC,EAAE,CAAC2I,IAAI,GAAGo5B,EAAE;MACpB,CAAC,MAAM,IAAI51B,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2d,QAAQ,KAAK,QAAQ,EAAE;UACzBsY,WAAW,GAAGD,gBAAgB,CAAC,CAACtuB,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACnL,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC;QAC9E,CAAC,MAAM,IAAI/V,QAAQ,CAACm3B,QAAQ,CAAC,EAAE;UAC7B,IAAMgZ,cAAc,GAAGv9B,MAAM,CAACC,IAAI,CAACskB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhrB,KAAK,GAAGgrB,QAAQ,CAACgZ,cAAc,CAAC;UACtCV,WAAW,GAAGD,gBAAgB,CAACniC,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACq2B,cAAc,CAAC,CAACnrB,gBAAgB,CAAC7Y,KAAK,CAAC,CAAC;QACzF;QACA6jC,EAAE,GAAG9uB,SAAS,CAACrL,GAAG;QAClBq6B,EAAE,GAAGhvB,SAAS,CAACnL,MAAM;QACrB65B,GAAG,GAAGH,WAAW,GAAGF,aAAa;QACjCO,GAAG,GAAGF,GAAG,GAAGR,EAAE;MAChB,CAAC,MAAM,IAAI51B,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2d,QAAQ,KAAK,QAAQ,EAAE;UACzBsY,WAAW,GAAGD,gBAAgB,CAAC,CAACtuB,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACpL,KAAK,IAAI,CAAC,CAAC;QACxE,CAAC,MAAM,IAAI9V,QAAQ,CAACm3B,QAAQ,CAAC,EAAE;UAC7B,IAAMgZ,eAAc,GAAGv9B,MAAM,CAACC,IAAI,CAACskB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhrB,MAAK,GAAGgrB,QAAQ,CAACgZ,eAAc,CAAC;UACtCV,WAAW,GAAGD,gBAAgB,CAACniC,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACq2B,eAAc,CAAC,CAACnrB,gBAAgB,CAAC7Y,MAAK,CAAC,CAAC;QACzF;QACAwjC,GAAG,GAAGF,WAAW,GAAGF,aAAa;QACjCM,GAAG,GAAGF,GAAG,GAAGP,EAAE;QACdW,EAAE,GAAG7uB,SAAS,CAAClL,IAAI;QACnBi6B,EAAE,GAAG/uB,SAAS,CAACpL,KAAK;MACtB;MACA,IAAMs6B,KAAK,GAAG9vC,cAAc,CAACiU,OAAO,CAAC0Q,KAAK,CAACggB,aAAa,EAAEkK,WAAW,CAAC;MACtE,IAAMkB,IAAI,GAAGpjC,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEvC,IAAI,CAACo5B,IAAI,CAAC8I,WAAW,GAAGiB,KAAK,CAAC,CAAC;MACxD,KAAKrwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGovC,WAAW,EAAEpvC,CAAC,IAAIswC,IAAI,EAAE;QACtC,IAAMC,WAAW,GAAGnmB,IAAI,CAACwf,UAAU,CAACt8B,EAAE,CAACkR,UAAU,CAACxe,CAAC,CAAC,CAAC;QACrD,IAAMswB,SAAS,GAAGigB,WAAW,CAACjgB,SAAS;QACvC,IAAMkgB,SAAS,GAAGD,WAAW,CAACxwC,KAAK;QACnC,IAAM8jC,UAAU,GAAGzZ,IAAI,CAACyZ,UAAU,IAAI,EAAE;QACxC,IAAMC,gBAAgB,GAAGyM,WAAW,CAACzM,gBAAgB;QACrD,IAAMH,SAAS,GAAG4M,WAAW,CAAC5M,SAAS;QACvC,IAAMC,SAAS,GAAG2M,WAAW,CAAC3M,SAAS;QACvC,IAAM6M,cAAc,GAAGF,WAAW,CAACE,cAAc,IAAI,EAAE;QACvD,IAAMC,oBAAoB,GAAGH,WAAW,CAACG,oBAAoB;QAC7DtJ,SAAS,GAAGJ,mBAAmB,CAAC15B,EAAE,EAAEtN,CAAC,EAAEmqB,MAAM,CAAC;QAC9C,IAAIid,SAAS,KAAKn7B,SAAS,EAAE;UAC3B;QACF;QACA0jC,gBAAgB,GAAGxqC,WAAW,CAACmH,KAAK,EAAE86B,SAAS,EAAE9W,SAAS,CAAC;QAC3D,IAAIzI,YAAY,EAAE;UAChB+nB,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGP,gBAAgB;QACxC,CAAC,MAAM;UACLE,GAAG,GAAGE,GAAG,GAAGE,EAAE,GAAGE,EAAE,GAAGR,gBAAgB;QACxC;QACA3hC,KAAK,CAACgB,IAAI,CAAC;UACT4gC,GAAG,EAAHA,GAAG;UACHC,GAAG,EAAHA,GAAG;UACHC,GAAG,EAAHA,GAAG;UACHC,GAAG,EAAHA,GAAG;UACHC,EAAE,EAAFA,EAAE;UACFC,EAAE,EAAFA,EAAE;UACFC,EAAE,EAAFA,EAAE;UACFC,EAAE,EAAFA,EAAE;UACF3nB,KAAK,EAAE8H,SAAS;UAChBvwB,KAAK,EAAEywC,SAAS;UAChB3M,UAAU,EAAVA,UAAU;UACVC,gBAAgB,EAAhBA,gBAAgB;UAChBH,SAAS,EAATA,SAAS;UACTC,SAAS,EAATA,SAAS;UACT6M,cAAc,EAAdA,cAAc;UACdC,oBAAoB,EAApBA;QACF,CAAC,CAAC;MACJ;MACApjC,EAAE,CAACk8B,YAAY,GAAG4F,WAAW;MAC7B9hC,EAAE,CAACm8B,YAAY,GAAGiG,WAAW;MAC7B,OAAO1hC,KAAK;IACd;EAAC;IAAA7B,GAAA;IAAAC,KAAA,EACD,SAAAukC,mBAAmBxvB,SAAS,EAAE;MAC5B,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAMmM,IAAI,GAAGnM,EAAE,CAACmM,IAAI;MACpB,IAAMjF,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAO4iB,QAAQ,GAAwB5iB,OAAO,CAAvC4iB,QAAQ;QAAS6X,WAAW,GAAIz6B,OAAO,CAA7B0Q,KAAK;MACtB,IAAM2C,YAAY,GAAGva,EAAE,CAACua,YAAY,EAAE;MACtC,IAAM3C,KAAK,GAAG5X,EAAE,CAAC4X,KAAK;MACtB,IAAOuf,KAAK,GAAiCwK,WAAW,CAAjDxK,KAAK;QAAEC,UAAU,GAAqBuK,WAAW,CAA1CvK,UAAU;QAAEnI,OAAO,GAAY0S,WAAW,CAA9B1S,OAAO;QAAE0H,MAAM,GAAIgL,WAAW,CAArBhL,MAAM;MACzC,IAAMoL,EAAE,GAAG5H,iBAAiB,CAACjzB,OAAO,CAAC4V,IAAI,CAAC;MAC1C,IAAMwmB,cAAc,GAAGvB,EAAE,GAAG9S,OAAO;MACnC,IAAMsU,eAAe,GAAG5M,MAAM,GAAG,CAAC1H,OAAO,GAAGqU,cAAc;MAC1D,IAAMllB,QAAQ,GAAG,CAACjqB,SAAS,CAAC6L,EAAE,CAACw7B,aAAa,CAAC;MAC7C,IAAM96B,KAAK,GAAG,EAAE;MAChB,IAAIhO,CAAC,EAAEwW,IAAI,EAAEnI,IAAI,EAAEwS,KAAK,EAAE/d,CAAC,EAAEE,CAAC,EAAE8tC,SAAS,EAAEjC,KAAK,EAAEjH,IAAI,EAAEE,UAAU,EAAEiJ,SAAS,EAAEC,UAAU;MACzF,IAAIC,YAAY,GAAG,QAAQ;MAC3B,IAAI7Z,QAAQ,KAAK,KAAK,EAAE;QACtBp0B,CAAC,GAAGsK,EAAE,CAAC0I,MAAM,GAAG66B,eAAe;QAC/BC,SAAS,GAAGxjC,EAAE,CAAC4jC,uBAAuB,EAAE;MAC1C,CAAC,MAAM,IAAI9Z,QAAQ,KAAK,QAAQ,EAAE;QAChCp0B,CAAC,GAAGsK,EAAE,CAACwI,GAAG,GAAG+6B,eAAe;QAC5BC,SAAS,GAAGxjC,EAAE,CAAC4jC,uBAAuB,EAAE;MAC1C,CAAC,MAAM,IAAI9Z,QAAQ,KAAK,MAAM,EAAE;QAC9B,IAAMkL,GAAG,GAAGh1B,EAAE,CAAC6jC,uBAAuB,CAAC9B,EAAE,CAAC;QAC1CyB,SAAS,GAAGxO,GAAG,CAACwO,SAAS;QACzBhuC,CAAC,GAAGw/B,GAAG,CAACx/B,CAAC;MACX,CAAC,MAAM,IAAIs0B,QAAQ,KAAK,OAAO,EAAE;QAC/B,IAAMkL,IAAG,GAAGh1B,EAAE,CAAC6jC,uBAAuB,CAAC9B,EAAE,CAAC;QAC1CyB,SAAS,GAAGxO,IAAG,CAACwO,SAAS;QACzBhuC,CAAC,GAAGw/B,IAAG,CAACx/B,CAAC;MACX,CAAC,MAAM,IAAI2W,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2d,QAAQ,KAAK,QAAQ,EAAE;UACzBp0B,CAAC,GAAI,CAACme,SAAS,CAACrL,GAAG,GAAGqL,SAAS,CAACnL,MAAM,IAAI,CAAC,GAAI46B,cAAc;QAC/D,CAAC,MAAM,IAAI3wC,QAAQ,CAACm3B,QAAQ,CAAC,EAAE;UAC7B,IAAMgZ,cAAc,GAAGv9B,MAAM,CAACC,IAAI,CAACskB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhrB,KAAK,GAAGgrB,QAAQ,CAACgZ,cAAc,CAAC;UACtCptC,CAAC,GAAGsK,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACq2B,cAAc,CAAC,CAACnrB,gBAAgB,CAAC7Y,KAAK,CAAC,GAAGwkC,cAAc;QAC9E;QACAE,SAAS,GAAGxjC,EAAE,CAAC4jC,uBAAuB,EAAE;MAC1C,CAAC,MAAM,IAAIz3B,IAAI,KAAK,GAAG,EAAE;QACvB,IAAI2d,QAAQ,KAAK,QAAQ,EAAE;UACzBt0B,CAAC,GAAI,CAACqe,SAAS,CAAClL,IAAI,GAAGkL,SAAS,CAACpL,KAAK,IAAI,CAAC,GAAI66B,cAAc;QAC/D,CAAC,MAAM,IAAI3wC,QAAQ,CAACm3B,QAAQ,CAAC,EAAE;UAC7B,IAAMgZ,gBAAc,GAAGv9B,MAAM,CAACC,IAAI,CAACskB,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC/C,IAAMhrB,OAAK,GAAGgrB,QAAQ,CAACgZ,gBAAc,CAAC;UACtCttC,CAAC,GAAGwK,EAAE,CAAChB,KAAK,CAACyN,MAAM,CAACq2B,gBAAc,CAAC,CAACnrB,gBAAgB,CAAC7Y,OAAK,CAAC;QAC7D;QACA0kC,SAAS,GAAGxjC,EAAE,CAAC6jC,uBAAuB,CAAC9B,EAAE,CAAC,CAACyB,SAAS;MACtD;MACA,IAAIr3B,IAAI,KAAK,GAAG,EAAE;QAChB,IAAIgrB,KAAK,KAAK,OAAO,EAAE;UACrBwM,YAAY,GAAG,KAAK;QACtB,CAAC,MAAM,IAAIxM,KAAK,KAAK,KAAK,EAAE;UAC1BwM,YAAY,GAAG,QAAQ;QACzB;MACF;MACA,IAAM3E,UAAU,GAAGh/B,EAAE,CAACi/B,cAAc,EAAE;MACtC,KAAKvsC,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG0O,KAAK,CAACvX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CqO,IAAI,GAAG6W,KAAK,CAACllB,CAAC,CAAC;QACf6gB,KAAK,GAAGxS,IAAI,CAACwS,KAAK;QAClB,IAAM0vB,WAAW,GAAGtB,WAAW,CAACrF,UAAU,CAACt8B,EAAE,CAACkR,UAAU,CAACxe,CAAC,CAAC,CAAC;QAC5D6uC,KAAK,GAAGvhC,EAAE,CAAC6X,eAAe,CAACnlB,CAAC,CAAC,GAAGivC,WAAW,CAAC3K,WAAW;QACvDsD,IAAI,GAAGt6B,EAAE,CAACkhC,uBAAuB,CAACxuC,CAAC,CAAC;QACpC8nC,UAAU,GAAGF,IAAI,CAACE,UAAU;QAC5BiJ,SAAS,GAAG5wC,OAAO,CAAC0gB,KAAK,CAAC,GAAGA,KAAK,CAAClT,MAAM,GAAG,CAAC;QAC7C,IAAMyjC,SAAS,GAAGL,SAAS,GAAG,CAAC;QAC/B,IAAMhxC,KAAK,GAAGwwC,WAAW,CAACxwC,KAAK;QAC/B,IAAMsxC,WAAW,GAAGd,WAAW,CAACpM,eAAe;QAC/C,IAAMmN,WAAW,GAAGf,WAAW,CAACrM,eAAe;QAC/C,IAAIrc,YAAY,EAAE;UAChB/kB,CAAC,GAAG+rC,KAAK;UACT,IAAIzX,QAAQ,KAAK,KAAK,EAAE;YACtB,IAAIsN,UAAU,KAAK,MAAM,IAAIhZ,QAAQ,KAAK,CAAC,EAAE;cAC3CslB,UAAU,GAAG,CAACD,SAAS,GAAGjJ,UAAU,GAAGA,UAAU,GAAG,CAAC;YACvD,CAAC,MAAM,IAAIpD,UAAU,KAAK,QAAQ,EAAE;cAClCsM,UAAU,GAAG,CAAC1E,UAAU,CAACK,OAAO,CAACpkB,MAAM,GAAG,CAAC,GAAG6oB,SAAS,GAAGtJ,UAAU,GAAGA,UAAU;YACnF,CAAC,MAAM;cACLkJ,UAAU,GAAG,CAAC1E,UAAU,CAACK,OAAO,CAACpkB,MAAM,GAAGuf,UAAU,GAAG,CAAC;YAC1D;UACF,CAAC,MAAM;YACL,IAAIpD,UAAU,KAAK,MAAM,IAAIhZ,QAAQ,KAAK,CAAC,EAAE;cAC3CslB,UAAU,GAAGlJ,UAAU,GAAG,CAAC;YAC7B,CAAC,MAAM,IAAIpD,UAAU,KAAK,QAAQ,EAAE;cAClCsM,UAAU,GAAG1E,UAAU,CAACK,OAAO,CAACpkB,MAAM,GAAG,CAAC,GAAG6oB,SAAS,GAAGtJ,UAAU;YACrE,CAAC,MAAM;cACLkJ,UAAU,GAAG1E,UAAU,CAACK,OAAO,CAACpkB,MAAM,GAAGwoB,SAAS,GAAGjJ,UAAU;YACjE;UACF;UACA,IAAI7D,MAAM,EAAE;YACV+M,UAAU,IAAI,CAAC,CAAC;UAClB;QACF,CAAC,MAAM;UACLhuC,CAAC,GAAG6rC,KAAK;UACTmC,UAAU,GAAG,CAAC,CAAC,GAAGD,SAAS,IAAIjJ,UAAU,GAAG,CAAC;QAC/C;QACA,IAAIyJ,QAAQ;QACZ,IAAIhB,WAAW,CAAC5L,iBAAiB,EAAE;UACjC,IAAM6M,YAAY,GAAGnuC,SAAS,CAACktC,WAAW,CAAC1L,eAAe,CAAC;UAC3D,IAAMtc,MAAM,GAAG+jB,UAAU,CAAC4B,OAAO,CAACluC,CAAC,CAAC;UACpC,IAAMwoB,KAAK,GAAG8jB,UAAU,CAAC2B,MAAM,CAACjuC,CAAC,CAAC;UAClC,IAAI8V,GAAG,GAAG9S,CAAC,GAAGguC,UAAU,GAAGQ,YAAY,CAAC17B,GAAG;UAC3C,IAAIG,IAAI,GAAGnT,CAAC,GAAG0uC,YAAY,CAACv7B,IAAI;UAChC,QAAQg7B,YAAY;YACpB,KAAK,QAAQ;cACXn7B,GAAG,IAAIyS,MAAM,GAAG,CAAC;cACjB;YACF,KAAK,QAAQ;cACXzS,GAAG,IAAIyS,MAAM;cACb;UAAM;UAER,QAAQuoB,SAAS;YACjB,KAAK,QAAQ;cACX76B,IAAI,IAAIuS,KAAK,GAAG,CAAC;cACjB;YACF,KAAK,OAAO;cACVvS,IAAI,IAAIuS,KAAK;cACb;UAAM;UAER+oB,QAAQ,GAAG;YACTt7B,IAAI,EAAJA,IAAI;YACJH,GAAG,EAAHA,GAAG;YACH0S,KAAK,EAAEA,KAAK,GAAGgpB,YAAY,CAAChpB,KAAK;YACjCD,MAAM,EAAEA,MAAM,GAAGipB,YAAY,CAACjpB,MAAM;YACpCxoB,KAAK,EAAEwwC,WAAW,CAAC3L;UACrB,CAAC;QACH;QACA52B,KAAK,CAACgB,IAAI,CAAC;UACT0c,QAAQ,EAARA,QAAQ;UACR7K,KAAK,EAALA,KAAK;UACL+mB,IAAI,EAAJA,IAAI;UACJ7nC,KAAK,EAALA,KAAK;UACLsxC,WAAW,EAAXA,WAAW;UACXC,WAAW,EAAXA,WAAW;UACXN,UAAU,EAAVA,UAAU;UACVF,SAAS,EAATA,SAAS;UACTG,YAAY,EAAZA,YAAY;UACZQ,WAAW,EAAE,CAAC3uC,CAAC,EAAEE,CAAC,CAAC;UACnBuuC,QAAQ,EAARA;QACF,CAAC,CAAC;MACJ;MACA,OAAOvjC,KAAK;IACd;EAAC;IAAA7B,GAAA;IAAAC,KAAA,EACD,SAAA8kC,wBAAA,EAA0B;MACxB,IAAM5jC,EAAE,GAAG,IAAI;MACf,IAAAokC,YAAA,GAA0BpkC,EAAE,CAACkH,OAAO;QAA7B4iB,QAAQ,GAAAsa,YAAA,CAARta,QAAQ;QAAElS,KAAK,GAAAwsB,YAAA,CAALxsB,KAAK;MACtB,IAAMwG,QAAQ,GAAG,CAACjqB,SAAS,CAAC6L,EAAE,CAACw7B,aAAa,CAAC;MAC7C,IAAIpd,QAAQ,EAAE;QACZ,OAAO0L,QAAQ,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO;MAC9C;MACA,IAAIqN,KAAK,GAAG,QAAQ;MACpB,IAAIvf,KAAK,CAACuf,KAAK,KAAK,OAAO,EAAE;QAC3BA,KAAK,GAAG,MAAM;MAChB,CAAC,MAAM,IAAIvf,KAAK,CAACuf,KAAK,KAAK,KAAK,EAAE;QAChCA,KAAK,GAAG,OAAO;MACjB;MACA,OAAOA,KAAK;IACd;EAAC;IAAAt4B,GAAA;IAAAC,KAAA,EACD,SAAA+kC,wBAAwB9B,EAAE,EAAE;MAC1B,IAAM/hC,EAAE,GAAG,IAAI;MACf,IAAAqkC,YAAA,GAAyDrkC,EAAE,CAACkH,OAAO;QAA5D4iB,QAAQ,GAAAua,YAAA,CAARva,QAAQ;QAAAwa,kBAAA,GAAAD,YAAA,CAAEzsB,KAAK;QAAGwf,UAAU,GAAAkN,kBAAA,CAAVlN,UAAU;QAAET,MAAM,GAAA2N,kBAAA,CAAN3N,MAAM;QAAE1H,OAAO,GAAAqV,kBAAA,CAAPrV,OAAO;MACpD,IAAM+P,UAAU,GAAGh/B,EAAE,CAACi/B,cAAc,EAAE;MACtC,IAAMqE,cAAc,GAAGvB,EAAE,GAAG9S,OAAO;MACnC,IAAMkQ,MAAM,GAAGH,UAAU,CAACG,MAAM,CAACjkB,KAAK;MACtC,IAAIsoB,SAAS;MACb,IAAIhuC,CAAC;MACL,IAAIs0B,QAAQ,KAAK,MAAM,EAAE;QACvB,IAAI6M,MAAM,EAAE;UACV6M,SAAS,GAAG,MAAM;UAClBhuC,CAAC,GAAGwK,EAAE,CAACyI,KAAK,GAAGwmB,OAAO;QACxB,CAAC,MAAM;UACLz5B,CAAC,GAAGwK,EAAE,CAACyI,KAAK,GAAG66B,cAAc;UAC7B,IAAIlM,UAAU,KAAK,MAAM,EAAE;YACzBoM,SAAS,GAAG,OAAO;UACrB,CAAC,MAAM,IAAIpM,UAAU,KAAK,QAAQ,EAAE;YAClCoM,SAAS,GAAG,QAAQ;YACpBhuC,CAAC,IAAK2pC,MAAM,GAAG,CAAE;UACnB,CAAC,MAAM;YACLqE,SAAS,GAAG,MAAM;YAClBhuC,CAAC,GAAGwK,EAAE,CAAC2I,IAAI;UACb;QACF;MACF,CAAC,MAAM,IAAImhB,QAAQ,KAAK,OAAO,EAAE;QAC/B,IAAI6M,MAAM,EAAE;UACV6M,SAAS,GAAG,OAAO;UACnBhuC,CAAC,GAAGwK,EAAE,CAAC2I,IAAI,GAAGsmB,OAAO;QACvB,CAAC,MAAM;UACLz5B,CAAC,GAAGwK,EAAE,CAAC2I,IAAI,GAAG26B,cAAc;UAC5B,IAAIlM,UAAU,KAAK,MAAM,EAAE;YACzBoM,SAAS,GAAG,MAAM;UACpB,CAAC,MAAM,IAAIpM,UAAU,KAAK,QAAQ,EAAE;YAClCoM,SAAS,GAAG,QAAQ;YACpBhuC,CAAC,IAAI2pC,MAAM,GAAG,CAAC;UACjB,CAAC,MAAM;YACLqE,SAAS,GAAG,OAAO;YACnBhuC,CAAC,GAAGwK,EAAE,CAACyI,KAAK;UACd;QACF;MACF,CAAC,MAAM;QACL+6B,SAAS,GAAG,OAAO;MACrB;MACA,OAAO;QAACA,SAAS,EAATA,SAAS;QAAEhuC,CAAC,EAADA;MAAC,CAAC;IACvB;EAAC;IAAAqJ,GAAA;IAAAC,KAAA,EACD,SAAAylC,kBAAA,EAAoB;MAClB,IAAMvkC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACkH,OAAO,CAAC0Q,KAAK,CAAC+e,MAAM,EAAE;QAC3B;MACF;MACA,IAAM33B,KAAK,GAAGgB,EAAE,CAAChB,KAAK;MACtB,IAAM8qB,QAAQ,GAAG9pB,EAAE,CAACkH,OAAO,CAAC4iB,QAAQ;MACpC,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;QAC/C,OAAO;UAACthB,GAAG,EAAE,CAAC;UAAEG,IAAI,EAAE3I,EAAE,CAAC2I,IAAI;UAAED,MAAM,EAAE1J,KAAK,CAACic,MAAM;UAAExS,KAAK,EAAEzI,EAAE,CAACyI;QAAK,CAAC;MACvE;MAAE,IAAIqhB,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;QACjD,OAAO;UAACthB,GAAG,EAAExI,EAAE,CAACwI,GAAG;UAAEG,IAAI,EAAE,CAAC;UAAED,MAAM,EAAE1I,EAAE,CAAC0I,MAAM;UAAED,KAAK,EAAEzJ,KAAK,CAACkc;QAAK,CAAC;MACtE;IACF;EAAC;IAAArc,GAAA;IAAAC,KAAA,EACD,SAAA0lC,eAAA,EAAiB;MACf,IAAO12B,GAAG,GAA0D,IAAI,CAAjEA,GAAG;QAAY+U,eAAe,GAA+B,IAAI,CAA5D3b,OAAO,CAAG2b,eAAe;QAAGla,IAAI,GAAwB,IAAI,CAAhCA,IAAI;QAAEH,GAAG,GAAmB,IAAI,CAA1BA,GAAG;QAAE0S,KAAK,GAAY,IAAI,CAArBA,KAAK;QAAED,MAAM,GAAI,IAAI,CAAdA,MAAM;MAChE,IAAI4H,eAAe,EAAE;QACnB/U,GAAG,CAAC22B,IAAI,EAAE;QACV32B,GAAG,CAAC8U,SAAS,GAAGC,eAAe;QAC/B/U,GAAG,CAAC42B,QAAQ,CAAC/7B,IAAI,EAAEH,GAAG,EAAE0S,KAAK,EAAED,MAAM,CAAC;QACtCnN,GAAG,CAAC62B,OAAO,EAAE;MACf;IACF;EAAC;IAAA9lC,GAAA;IAAAC,KAAA,EACD,SAAAud,qBAAqBvd,KAAK,EAAE;MAC1B,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAM8c,IAAI,GAAG9c,EAAE,CAACkH,OAAO,CAAC4V,IAAI;MAC5B,IAAI,CAAC9c,EAAE,CAAC++B,UAAU,EAAE,IAAI,CAACjiB,IAAI,CAACgK,OAAO,EAAE;QACrC,OAAO,CAAC;MACV;MACA,IAAMlP,KAAK,GAAG5X,EAAE,CAAC4X,KAAK;MACtB,IAAMzO,KAAK,GAAGyO,KAAK,CAACgtB,SAAS,CAAC,UAAA1wC,CAAC;QAAA,OAAIA,CAAC,CAAC4K,KAAK,KAAKA,KAAK;MAAA,EAAC;MACrD,IAAIqK,KAAK,IAAI,CAAC,EAAE;QACd,IAAMjB,IAAI,GAAG4U,IAAI,CAACwf,UAAU,CAACt8B,EAAE,CAACkR,UAAU,CAAC/H,KAAK,CAAC,CAAC;QAClD,OAAOjB,IAAI,CAAC8a,SAAS;MACvB;MACA,OAAO,CAAC;IACV;EAAC;IAAAnkB,GAAA;IAAAC,KAAA,EACD,SAAA+lC,SAAShxB,SAAS,EAAE;MAClB,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAM8c,IAAI,GAAG9c,EAAE,CAACkH,OAAO,CAAC4V,IAAI;MAC5B,IAAMhP,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAMpN,KAAK,GAAGV,EAAE,CAAC07B,cAAc,KAAK17B,EAAE,CAAC07B,cAAc,GAAG17B,EAAE,CAAC6hC,qBAAqB,CAAChuB,SAAS,CAAC,CAAC;MAC5F,IAAInhB,CAAC,EAAEwW,IAAI;MACX,IAAM47B,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,EAAE,EAAEC,EAAE,EAAEtiB,KAAK,EAAK;QAClC,IAAI,CAACA,KAAK,CAACxH,KAAK,IAAI,CAACwH,KAAK,CAACjwB,KAAK,EAAE;UAChC;QACF;QACAqb,GAAG,CAAC22B,IAAI,EAAE;QACV32B,GAAG,CAACkV,SAAS,GAAGN,KAAK,CAACxH,KAAK;QAC3BpN,GAAG,CAACgV,WAAW,GAAGJ,KAAK,CAACjwB,KAAK;QAC7Bqb,GAAG,CAACm3B,WAAW,CAACviB,KAAK,CAAC6T,UAAU,IAAI,EAAE,CAAC;QACvCzoB,GAAG,CAACo3B,cAAc,GAAGxiB,KAAK,CAAC8T,gBAAgB;QAC3C1oB,GAAG,CAACq3B,SAAS,EAAE;QACfr3B,GAAG,CAACs3B,MAAM,CAACL,EAAE,CAACvvC,CAAC,EAAEuvC,EAAE,CAACrvC,CAAC,CAAC;QACtBoY,GAAG,CAACu3B,MAAM,CAACL,EAAE,CAACxvC,CAAC,EAAEwvC,EAAE,CAACtvC,CAAC,CAAC;QACtBoY,GAAG,CAACw3B,MAAM,EAAE;QACZx3B,GAAG,CAAC62B,OAAO,EAAE;MACf,CAAC;MACD,IAAI7nB,IAAI,CAACgK,OAAO,EAAE;QAChB,KAAKp0B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;UAC9C,IAAMkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;UACrB,IAAIoqB,IAAI,CAACoZ,eAAe,EAAE;YACxB4O,QAAQ,CACN;cAACtvC,CAAC,EAAEoL,IAAI,CAAC8hC,EAAE;cAAEhtC,CAAC,EAAEkL,IAAI,CAAC+hC;YAAE,CAAC,EACxB;cAACntC,CAAC,EAAEoL,IAAI,CAACgiC,EAAE;cAAEltC,CAAC,EAAEkL,IAAI,CAACiiC;YAAE,CAAC,EACxBjiC,IAAI,CACL;UACH;UACA,IAAIkc,IAAI,CAACqZ,SAAS,EAAE;YAClB2O,QAAQ,CACN;cAACtvC,CAAC,EAAEoL,IAAI,CAAC0hC,GAAG;cAAE5sC,CAAC,EAAEkL,IAAI,CAAC2hC;YAAG,CAAC,EAC1B;cAAC/sC,CAAC,EAAEoL,IAAI,CAAC4hC,GAAG;cAAE9sC,CAAC,EAAEkL,IAAI,CAAC6hC;YAAG,CAAC,EAC1B;cACEhwC,KAAK,EAAEmO,IAAI,CAAC01B,SAAS;cACrBpb,KAAK,EAAEta,IAAI,CAACy1B,SAAS;cACrBE,UAAU,EAAE31B,IAAI,CAACuiC,cAAc;cAC/B3M,gBAAgB,EAAE51B,IAAI,CAACwiC;YACzB,CAAC,CACF;UACH;QACF;MACF;IACF;EAAC;IAAAvkC,GAAA;IAAAC,KAAA,EACD,SAAAm3B,WAAA,EAAa;MACX,IAAMj2B,EAAE,GAAG,IAAI;MACf,IAAOhB,KAAK,GAA0BgB,EAAE,CAAjChB,KAAK;QAAE8O,GAAG,GAAqB9N,EAAE,CAA1B8N,GAAG;QAAYgP,IAAI,GAAK9c,EAAE,CAArBkH,OAAO,CAAG4V,IAAI;MACjC,IAAMklB,UAAU,GAAGllB,IAAI,CAACwf,UAAU,CAACt8B,EAAE,CAACkR,UAAU,EAAE,CAAC;MACnD,IAAM+wB,SAAS,GAAGnlB,IAAI,CAACmZ,UAAU,GAAG+L,UAAU,CAAChgB,WAAW,GAAG,CAAC;MAC9D,IAAI,CAACigB,SAAS,EAAE;QACd;MACF;MACA,IAAMsD,aAAa,GAAGzoB,IAAI,CAACwf,UAAU,CAACt8B,EAAE,CAACkR,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC8R,SAAS;MACjE,IAAMof,WAAW,GAAGpiC,EAAE,CAACm8B,YAAY;MACnC,IAAIuG,EAAE,EAAEE,EAAE,EAAED,EAAE,EAAEE,EAAE;MAClB,IAAI7iC,EAAE,CAACua,YAAY,EAAE,EAAE;QACrBmoB,EAAE,GAAG7qC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAAC2I,IAAI,EAAEs5B,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC3DW,EAAE,GAAG/qC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAACyI,KAAK,EAAE88B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACpE5C,EAAE,GAAGE,EAAE,GAAGT,WAAW;MACvB,CAAC,MAAM;QACLO,EAAE,GAAG9qC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAACwI,GAAG,EAAEy5B,SAAS,CAAC,GAAGA,SAAS,GAAG,CAAC;QAC1DY,EAAE,GAAGhrC,WAAW,CAACmH,KAAK,EAAEgB,EAAE,CAAC0I,MAAM,EAAE68B,aAAa,CAAC,GAAGA,aAAa,GAAG,CAAC;QACrE7C,EAAE,GAAGE,EAAE,GAAGR,WAAW;MACvB;MACAt0B,GAAG,CAAC22B,IAAI,EAAE;MACV32B,GAAG,CAACkV,SAAS,GAAGgf,UAAU,CAAChgB,WAAW;MACtClU,GAAG,CAACgV,WAAW,GAAGkf,UAAU,CAACjf,WAAW;MACxCjV,GAAG,CAACq3B,SAAS,EAAE;MACfr3B,GAAG,CAACs3B,MAAM,CAAC1C,EAAE,EAAEC,EAAE,CAAC;MAClB70B,GAAG,CAACu3B,MAAM,CAACzC,EAAE,EAAEC,EAAE,CAAC;MAClB/0B,GAAG,CAACw3B,MAAM,EAAE;MACZx3B,GAAG,CAAC62B,OAAO,EAAE;IACf;EAAC;IAAA9lC,GAAA;IAAAC,KAAA,EACD,SAAA0mC,WAAW3xB,SAAS,EAAE;MACpB,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAM2hC,WAAW,GAAG3hC,EAAE,CAACkH,OAAO,CAAC0Q,KAAK;MACpC,IAAI,CAAC+pB,WAAW,CAAC7a,OAAO,EAAE;QACxB;MACF;MACA,IAAMhZ,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM8F,IAAI,GAAG5T,EAAE,CAACukC,iBAAiB,EAAE;MACnC,IAAI3wB,IAAI,EAAE;QACR7b,QAAQ,CAAC+V,GAAG,EAAE8F,IAAI,CAAC;MACrB;MACA,IAAMlT,KAAK,GAAGV,EAAE,CAAC27B,WAAW,KAAK37B,EAAE,CAAC27B,WAAW,GAAG37B,EAAE,CAACqjC,kBAAkB,CAACxvB,SAAS,CAAC,CAAC;MACnF,IAAInhB,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9C,IAAMkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;QACrB,IAAMquC,QAAQ,GAAGngC,IAAI,CAAC05B,IAAI;QAC1B,IAAM/mB,KAAK,GAAG3S,IAAI,CAAC2S,KAAK;QACxB,IAAI3S,IAAI,CAACqjC,QAAQ,EAAE;UACjBn2B,GAAG,CAAC8U,SAAS,GAAGhiB,IAAI,CAACqjC,QAAQ,CAACxxC,KAAK;UACnCqb,GAAG,CAAC42B,QAAQ,CAAC9jC,IAAI,CAACqjC,QAAQ,CAACt7B,IAAI,EAAE/H,IAAI,CAACqjC,QAAQ,CAACz7B,GAAG,EAAE5H,IAAI,CAACqjC,QAAQ,CAAC/oB,KAAK,EAAEta,IAAI,CAACqjC,QAAQ,CAAChpB,MAAM,CAAC;QAChG;QACA,IAAIvlB,CAAC,GAAGkL,IAAI,CAAC8iC,UAAU;QACvBzrC,UAAU,CAAC6V,GAAG,EAAEyF,KAAK,EAAE,CAAC,EAAE7d,CAAC,EAAEqrC,QAAQ,EAAEngC,IAAI,CAAC;MAC9C;MACA,IAAIgT,IAAI,EAAE;QACRzb,UAAU,CAAC2V,GAAG,CAAC;MACjB;IACF;EAAC;IAAAjP,GAAA;IAAAC,KAAA,EACD,SAAA2mC,UAAA,EAAY;MACV,IAAO33B,GAAG,GAAyC,IAAI,CAAhDA,GAAG;QAAA43B,cAAA,GAAyC,IAAI,CAA3Cx+B,OAAO;QAAG4iB,QAAQ,GAAA4b,cAAA,CAAR5b,QAAQ;QAAE5L,KAAK,GAAAwnB,cAAA,CAALxnB,KAAK;QAAE/V,OAAO,GAAAu9B,cAAA,CAAPv9B,OAAO;MAC9C,IAAI,CAAC+V,KAAK,CAAC4I,OAAO,EAAE;QAClB;MACF;MACA,IAAMwT,IAAI,GAAGjiC,MAAM,CAAC6lB,KAAK,CAACoc,IAAI,CAAC;MAC/B,IAAMrL,OAAO,GAAGl5B,SAAS,CAACmoB,KAAK,CAAC+Q,OAAO,CAAC;MACxC,IAAMkI,KAAK,GAAGjZ,KAAK,CAACiZ,KAAK;MACzB,IAAIta,MAAM,GAAGyd,IAAI,CAACE,UAAU,GAAG,CAAC;MAChC,IAAI1Q,QAAQ,KAAK,QAAQ,EAAE;QACzBjN,MAAM,IAAIoS,OAAO,CAACvmB,MAAM;QACxB,IAAI7V,OAAO,CAACqrB,KAAK,CAACyE,IAAI,CAAC,EAAE;UACvB9F,MAAM,IAAIyd,IAAI,CAACE,UAAU,IAAItc,KAAK,CAACyE,IAAI,CAACtiB,MAAM,GAAG,CAAC,CAAC;QACrD;MACF,CAAC,MAAM;QACLwc,MAAM,IAAIoS,OAAO,CAACzmB,GAAG;MACvB;MACA,IAAAm9B,UAAA,GAA6C/K,SAAS,CAAC,IAAI,EAAE/d,MAAM,EAAEiN,QAAQ,EAAEqN,KAAK,CAAC;QAA9E0D,MAAM,GAAA8K,UAAA,CAAN9K,MAAM;QAAEC,MAAM,GAAA6K,UAAA,CAAN7K,MAAM;QAAEja,QAAQ,GAAA8kB,UAAA,CAAR9kB,QAAQ;QAAEzC,QAAQ,GAAAunB,UAAA,CAARvnB,QAAQ;MACzCnmB,UAAU,CAAC6V,GAAG,EAAEoQ,KAAK,CAACyE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE2X,IAAI,EAAE;QACtC7nC,KAAK,EAAEyrB,KAAK,CAACzrB,KAAK;QAClBouB,QAAQ,EAARA,QAAQ;QACRzC,QAAQ,EAARA,QAAQ;QACRolB,SAAS,EAAE7I,UAAU,CAACxD,KAAK,EAAErN,QAAQ,EAAE3hB,OAAO,CAAC;QAC/Cw7B,YAAY,EAAE,QAAQ;QACtBQ,WAAW,EAAE,CAACtJ,MAAM,EAAEC,MAAM;MAC9B,CAAC,CAAC;IACJ;EAAC;IAAAj8B,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKkT,SAAS,EAAE;MACd,IAAM7T,EAAE,GAAG,IAAI;MACf,IAAI,CAACA,EAAE,CAAC++B,UAAU,EAAE,EAAE;QACpB;MACF;MACA/+B,EAAE,CAACwkC,cAAc,EAAE;MACnBxkC,EAAE,CAAC6kC,QAAQ,CAAChxB,SAAS,CAAC;MACtB7T,EAAE,CAACi2B,UAAU,EAAE;MACfj2B,EAAE,CAACylC,SAAS,EAAE;MACdzlC,EAAE,CAACwlC,UAAU,CAAC3xB,SAAS,CAAC;IAC1B;EAAC;IAAAhV,GAAA;IAAAC,KAAA,EACD,SAAAqwB,QAAA,EAAU;MACR,IAAMnvB,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAM0+B,EAAE,GAAG19B,IAAI,CAAC0P,KAAK,IAAI1P,IAAI,CAAC0P,KAAK,CAAChiB,CAAC,IAAI,CAAC;MAC1C,IAAMiwC,EAAE,GAAG39B,IAAI,CAAC4U,IAAI,IAAI5U,IAAI,CAAC4U,IAAI,CAAClnB,CAAC,IAAI,CAAC;MACxC,IAAI,CAACoK,EAAE,CAAC++B,UAAU,EAAE,IAAI/+B,EAAE,CAACW,IAAI,KAAKo6B,KAAK,CAAC/jB,SAAS,CAACrW,IAAI,EAAE;QACxD,OAAO,CAAC;UACN/K,CAAC,EAAEgwC,EAAE;UACLjlC,IAAI,WAAAA,KAACkT,SAAS,EAAE;YACd7T,EAAE,CAACW,IAAI,CAACkT,SAAS,CAAC;UACpB;QACF,CAAC,CAAC;MACJ;MACA,OAAO,CAAC;QACNje,CAAC,EAAEiwC,EAAE;QACLllC,IAAI,WAAAA,KAACkT,SAAS,EAAE;UACd7T,EAAE,CAACwkC,cAAc,EAAE;UACnBxkC,EAAE,CAAC6kC,QAAQ,CAAChxB,SAAS,CAAC;UACtB7T,EAAE,CAACylC,SAAS,EAAE;QAChB;MACF,CAAC,EAAE;QACD7vC,CAAC,EAAEiwC,EAAE,GAAG,CAAC;QACTllC,IAAI,WAAAA,KAAA,EAAG;UACLX,EAAE,CAACi2B,UAAU,EAAE;QACjB;MACF,CAAC,EAAE;QACDrgC,CAAC,EAAEgwC,EAAE;QACLjlC,IAAI,WAAAA,KAACkT,SAAS,EAAE;UACd7T,EAAE,CAACwlC,UAAU,CAAC3xB,SAAS,CAAC;QAC1B;MACF,CAAC,CAAC;IACJ;EAAC;IAAAhV,GAAA;IAAAC,KAAA,EACD,SAAA0M,wBAAwBrM,IAAI,EAAE;MAC5B,IAAMa,EAAE,GAAG,IAAI;MACf,IAAMoX,KAAK,GAAGpX,EAAE,CAAChB,KAAK,CAACmqB,4BAA4B,EAAE;MACrD,IAAM2c,MAAM,GAAG9lC,EAAE,CAACmM,IAAI,GAAG,QAAQ;MACjC,IAAM4sB,MAAM,GAAG,EAAE;MACjB,IAAIrmC,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkO,KAAK,CAAC/W,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9C,IAAMsX,IAAI,GAAGoN,KAAK,CAAC1kB,CAAC,CAAC;QACrB,IAAIsX,IAAI,CAAC87B,MAAM,CAAC,KAAK9lC,EAAE,CAACsK,EAAE,KAAK,CAACnL,IAAI,IAAI6K,IAAI,CAAC7K,IAAI,KAAKA,IAAI,CAAC,EAAE;UAC3D45B,MAAM,CAACr3B,IAAI,CAACsI,IAAI,CAAC;QACnB;MACF;MACA,OAAO+uB,MAAM;IACf;EAAC;IAAAl6B,GAAA;IAAAC,KAAA,EACD,SAAAoiC,wBAAwB/3B,KAAK,EAAE;MAC7B,IAAMjB,IAAI,GAAG,IAAI,CAAChB,OAAO,CAAC0Q,KAAK,CAAC0kB,UAAU,CAAC,IAAI,CAACprB,UAAU,CAAC/H,KAAK,CAAC,CAAC;MAClE,OAAO9Q,MAAM,CAAC6P,IAAI,CAACoyB,IAAI,CAAC;IAC1B;EAAC;IAAAz7B,GAAA;IAAAC,KAAA,EACD,SAAAinC,WAAA,EAAa;MACX,IAAM/lC,EAAE,GAAG,IAAI;MACf,IAAMgmC,QAAQ,GAAGhmC,EAAE,CAACkhC,uBAAuB,CAAC,CAAC,CAAC,CAAC1G,UAAU;MACzD,OAAO,CAACx6B,EAAE,CAACua,YAAY,EAAE,GAAGva,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAACib,MAAM,IAAI+qB,QAAQ;IAC9D;EAAC;EAAA,OAAAjL,KAAA;AAAA,EAvjCiBrG,OAAO;AAAA,IA0jCrBuR,aAAa;EACjB,SAAAA,cAAY9mC,IAAI,EAAE+mC,KAAK,EAAEtd,QAAQ,EAAE;IAAAvqB,eAAA,OAAA4nC,aAAA;IACjC,IAAI,CAAC9mC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC+mC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACtd,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACloB,KAAK,GAAG6E,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;EAClC;EAAClO,YAAA,CAAAqnC,aAAA;IAAApnC,GAAA;IAAAC,KAAA,EACD,SAAAqnC,UAAUhnC,IAAI,EAAE;MACd,OAAOoG,MAAM,CAACyR,SAAS,CAACovB,aAAa,CAACnmC,IAAI,CAAC,IAAI,CAACd,IAAI,CAAC6X,SAAS,EAAE7X,IAAI,CAAC6X,SAAS,CAAC;IACjF;EAAC;IAAAnY,GAAA;IAAAC,KAAA,EACD,SAAAunC,SAASzlC,IAAI,EAAE;MACb,IAAMZ,EAAE,GAAG,IAAI;MACf,IAAMsmC,KAAK,GAAG/gC,MAAM,CAACghC,cAAc,CAAC3lC,IAAI,CAAC;MACzC,IAAI4lC,WAAW;MACf,IAAIC,iBAAiB,CAACH,KAAK,CAAC,EAAE;QAC5BE,WAAW,GAAGxmC,EAAE,CAACqmC,QAAQ,CAACC,KAAK,CAAC;MAClC;MACA,IAAM5lC,KAAK,GAAGV,EAAE,CAACU,KAAK;MACtB,IAAM4J,EAAE,GAAG1J,IAAI,CAAC0J,EAAE;MAClB,IAAM47B,KAAK,GAAGlmC,EAAE,CAACkmC,KAAK,GAAG,GAAG,GAAG57B,EAAE;MACjC,IAAI,CAACA,EAAE,EAAE;QACP,MAAM,IAAI2d,KAAK,CAAC,0BAA0B,GAAGrnB,IAAI,CAAC;MACpD;MACA,IAAI0J,EAAE,IAAI5J,KAAK,EAAE;QACf,OAAOwlC,KAAK;MACd;MACAxlC,KAAK,CAAC4J,EAAE,CAAC,GAAG1J,IAAI;MAChB8lC,gBAAgB,CAAC9lC,IAAI,EAAEslC,KAAK,EAAEM,WAAW,CAAC;MAC1C,IAAIxmC,EAAE,CAAC4oB,QAAQ,EAAE;QACf71B,QAAQ,CAAC61B,QAAQ,CAAChoB,IAAI,CAAC0J,EAAE,EAAE1J,IAAI,CAACjI,SAAS,CAAC;MAC5C;MACA,OAAOutC,KAAK;IACd;EAAC;IAAArnC,GAAA;IAAAC,KAAA,EACD,SAAAqC,IAAImJ,EAAE,EAAE;MACN,OAAO,IAAI,CAAC5J,KAAK,CAAC4J,EAAE,CAAC;IACvB;EAAC;IAAAzL,GAAA;IAAAC,KAAA,EACD,SAAA6nC,WAAW/lC,IAAI,EAAE;MACf,IAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAM4J,EAAE,GAAG1J,IAAI,CAAC0J,EAAE;MAClB,IAAM47B,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAI57B,EAAE,IAAI5J,KAAK,EAAE;QACf,OAAOA,KAAK,CAAC4J,EAAE,CAAC;MAClB;MACA,IAAI47B,KAAK,IAAI57B,EAAE,IAAIvX,QAAQ,CAACmzC,KAAK,CAAC,EAAE;QAClC,OAAOnzC,QAAQ,CAACmzC,KAAK,CAAC,CAAC57B,EAAE,CAAC;QAC1B,IAAI,IAAI,CAACse,QAAQ,EAAE;UACjB,OAAOjwB,SAAS,CAAC2R,EAAE,CAAC;QACtB;MACF;IACF;EAAC;EAAA,OAAA27B,aAAA;AAAA;AAEH,SAASS,gBAAgBA,CAAC9lC,IAAI,EAAEslC,KAAK,EAAEM,WAAW,EAAE;EAClD,IAAMI,YAAY,GAAG/tC,KAAK,CAAC0M,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC,EAAE,CAC9C05B,WAAW,GAAGzzC,QAAQ,CAACoO,GAAG,CAACqlC,WAAW,CAAC,GAAG,CAAC,CAAC,EAC5CzzC,QAAQ,CAACoO,GAAG,CAAC+kC,KAAK,CAAC,EACnBtlC,IAAI,CAAC7N,QAAQ,CACd,CAAC;EACFA,QAAQ,CAACuO,GAAG,CAAC4kC,KAAK,EAAEU,YAAY,CAAC;EACjC,IAAIhmC,IAAI,CAACq0B,aAAa,EAAE;IACtB4R,aAAa,CAACX,KAAK,EAAEtlC,IAAI,CAACq0B,aAAa,CAAC;EAC1C;EACA,IAAIr0B,IAAI,CAAC3H,WAAW,EAAE;IACpBlG,QAAQ,CAAC2S,QAAQ,CAACwgC,KAAK,EAAEtlC,IAAI,CAAC3H,WAAW,CAAC;EAC5C;AACF;AACA,SAAS4tC,aAAaA,CAACX,KAAK,EAAEY,MAAM,EAAE;EACpCvhC,MAAM,CAACC,IAAI,CAACshC,MAAM,CAAC,CAACtnC,OAAO,CAAC,UAAAunC,QAAQ,EAAI;IACtC,IAAMC,aAAa,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,IAAMC,UAAU,GAAGF,aAAa,CAAChmC,GAAG,EAAE;IACtC,IAAMmmC,WAAW,GAAG,CAACjB,KAAK,CAAC,CAAC77B,MAAM,CAAC28B,aAAa,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;IAC3D,IAAMC,KAAK,GAAGP,MAAM,CAACC,QAAQ,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;IACzC,IAAMK,UAAU,GAAGD,KAAK,CAACrmC,GAAG,EAAE;IAC9B,IAAMumC,WAAW,GAAGF,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC;IACnCr0C,QAAQ,CAACykC,KAAK,CAAC2P,WAAW,EAAED,UAAU,EAAEK,WAAW,EAAED,UAAU,CAAC;EAClE,CAAC,CAAC;AACJ;AACA,SAASb,iBAAiBA,CAACH,KAAK,EAAE;EAChC,OAAO,IAAI,IAAIA,KAAK,IAAI,UAAU,IAAIA,KAAK;AAC7C;AAAC,IAEKkB,QAAQ;EACZ,SAAAA,SAAA,EAAc;IAAAnpC,eAAA,OAAAmpC,QAAA;IACZ,IAAI,CAAC1f,WAAW,GAAG,IAAIme,aAAa,CAACr4B,iBAAiB,EAAE,UAAU,EAAE,IAAI,CAAC;IACzE,IAAI,CAAC+F,QAAQ,GAAG,IAAIsyB,aAAa,CAACvR,OAAO,EAAE,UAAU,CAAC;IACtD,IAAI,CAAC1W,OAAO,GAAG,IAAIioB,aAAa,CAAC1gC,MAAM,EAAE,SAAS,CAAC;IACnD,IAAI,CAACkH,MAAM,GAAG,IAAIw5B,aAAa,CAAClL,KAAK,EAAE,QAAQ,CAAC;IAChD,IAAI,CAAC0M,gBAAgB,GAAG,CAAC,IAAI,CAAC3f,WAAW,EAAE,IAAI,CAACrb,MAAM,EAAE,IAAI,CAACkH,QAAQ,CAAC;EACxE;EAAC/U,YAAA,CAAA4oC,QAAA;IAAA3oC,GAAA;IAAAC,KAAA,EACD,SAAA6C,IAAA,EAAa;MAAA,SAAA+lC,IAAA,GAAAtnC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAA49B,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;QAAJ5T,IAAI,CAAA4T,IAAA,IAAAvnC,SAAA,CAAAunC,IAAA;MAAA;MACT,IAAI,CAACC,KAAK,CAAC,UAAU,EAAE7T,IAAI,CAAC;IAC9B;EAAC;IAAAl1B,GAAA;IAAAC,KAAA,EACD,SAAAyD,OAAA,EAAgB;MAAA,SAAAslC,KAAA,GAAAznC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAA+9B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJ/T,IAAI,CAAA+T,KAAA,IAAA1nC,SAAA,CAAA0nC,KAAA;MAAA;MACZ,IAAI,CAACF,KAAK,CAAC,YAAY,EAAE7T,IAAI,CAAC;IAChC;EAAC;IAAAl1B,GAAA;IAAAC,KAAA,EACD,SAAAipC,eAAA,EAAwB;MAAA,SAAAC,KAAA,GAAA5nC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAAk+B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJlU,IAAI,CAAAkU,KAAA,IAAA7nC,SAAA,CAAA6nC,KAAA;MAAA;MACpB,IAAI,CAACL,KAAK,CAAC,UAAU,EAAE7T,IAAI,EAAE,IAAI,CAACjM,WAAW,CAAC;IAChD;EAAC;IAAAjpB,GAAA;IAAAC,KAAA,EACD,SAAAgQ,YAAA,EAAqB;MAAA,SAAAo5B,KAAA,GAAA9nC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAAo+B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJpU,IAAI,CAAAoU,KAAA,IAAA/nC,SAAA,CAAA+nC,KAAA;MAAA;MACjB,IAAI,CAACP,KAAK,CAAC,UAAU,EAAE7T,IAAI,EAAE,IAAI,CAACpgB,QAAQ,CAAC;IAC7C;EAAC;IAAA9U,GAAA;IAAAC,KAAA,EACD,SAAAspC,WAAA,EAAoB;MAAA,SAAAC,KAAA,GAAAjoC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAAu+B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJvU,IAAI,CAAAuU,KAAA,IAAAloC,SAAA,CAAAkoC,KAAA;MAAA;MAChB,IAAI,CAACV,KAAK,CAAC,UAAU,EAAE7T,IAAI,EAAE,IAAI,CAAC/V,OAAO,CAAC;IAC5C;EAAC;IAAAnf,GAAA;IAAAC,KAAA,EACD,SAAAypC,UAAA,EAAmB;MAAA,SAAAC,KAAA,GAAApoC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAA0+B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJ1U,IAAI,CAAA0U,KAAA,IAAAroC,SAAA,CAAAqoC,KAAA;MAAA;MACf,IAAI,CAACb,KAAK,CAAC,UAAU,EAAE7T,IAAI,EAAE,IAAI,CAACtnB,MAAM,CAAC;IAC3C;EAAC;IAAA5N,GAAA;IAAAC,KAAA,EACD,SAAA4pC,cAAcp+B,EAAE,EAAE;MAChB,OAAO,IAAI,CAAC2P,IAAI,CAAC3P,EAAE,EAAE,IAAI,CAACwd,WAAW,EAAE,YAAY,CAAC;IACtD;EAAC;IAAAjpB,GAAA;IAAAC,KAAA,EACD,SAAA6pC,WAAWr+B,EAAE,EAAE;MACb,OAAO,IAAI,CAAC2P,IAAI,CAAC3P,EAAE,EAAE,IAAI,CAACqJ,QAAQ,EAAE,SAAS,CAAC;IAChD;EAAC;IAAA9U,GAAA;IAAAC,KAAA,EACD,SAAA8pC,UAAUt+B,EAAE,EAAE;MACZ,OAAO,IAAI,CAAC2P,IAAI,CAAC3P,EAAE,EAAE,IAAI,CAAC0T,OAAO,EAAE,QAAQ,CAAC;IAC9C;EAAC;IAAAnf,GAAA;IAAAC,KAAA,EACD,SAAA+pC,SAASv+B,EAAE,EAAE;MACX,OAAO,IAAI,CAAC2P,IAAI,CAAC3P,EAAE,EAAE,IAAI,CAACmC,MAAM,EAAE,OAAO,CAAC;IAC5C;EAAC;IAAA5N,GAAA;IAAAC,KAAA,EACD,SAAAgqC,kBAAA,EAA2B;MAAA,SAAAC,KAAA,GAAA3oC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAAi/B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJjV,IAAI,CAAAiV,KAAA,IAAA5oC,SAAA,CAAA4oC,KAAA;MAAA;MACvB,IAAI,CAACpB,KAAK,CAAC,YAAY,EAAE7T,IAAI,EAAE,IAAI,CAACjM,WAAW,CAAC;IAClD;EAAC;IAAAjpB,GAAA;IAAAC,KAAA,EACD,SAAAmqC,eAAA,EAAwB;MAAA,SAAAC,KAAA,GAAA9oC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAAo/B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJpV,IAAI,CAAAoV,KAAA,IAAA/oC,SAAA,CAAA+oC,KAAA;MAAA;MACpB,IAAI,CAACvB,KAAK,CAAC,YAAY,EAAE7T,IAAI,EAAE,IAAI,CAACpgB,QAAQ,CAAC;IAC/C;EAAC;IAAA9U,GAAA;IAAAC,KAAA,EACD,SAAAsqC,cAAA,EAAuB;MAAA,SAAAC,KAAA,GAAAjpC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAAu/B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAJvV,IAAI,CAAAuV,KAAA,IAAAlpC,SAAA,CAAAkpC,KAAA;MAAA;MACnB,IAAI,CAAC1B,KAAK,CAAC,YAAY,EAAE7T,IAAI,EAAE,IAAI,CAAC/V,OAAO,CAAC;IAC9C;EAAC;IAAAnf,GAAA;IAAAC,KAAA,EACD,SAAAyqC,aAAA,EAAsB;MAAA,SAAAC,MAAA,GAAAppC,SAAA,CAAAC,MAAA,EAAN0zB,IAAI,OAAAjqB,KAAA,CAAA0/B,MAAA,GAAAC,MAAA,MAAAA,MAAA,GAAAD,MAAA,EAAAC,MAAA;QAAJ1V,IAAI,CAAA0V,MAAA,IAAArpC,SAAA,CAAAqpC,MAAA;MAAA;MAClB,IAAI,CAAC7B,KAAK,CAAC,YAAY,EAAE7T,IAAI,EAAE,IAAI,CAACtnB,MAAM,CAAC;IAC7C;EAAC;IAAA5N,GAAA;IAAAC,KAAA,EACD,SAAA8oC,MAAMziC,MAAM,EAAE4uB,IAAI,EAAE2V,aAAa,EAAE;MACjC,IAAM1pC,EAAE,GAAG,IAAI;MACf8B,kBAAA,CAAIiyB,IAAI,EAAEv0B,OAAO,CAAC,UAAAmqC,GAAG,EAAI;QACvB,IAAMC,GAAG,GAAGF,aAAa,IAAI1pC,EAAE,CAAC6pC,mBAAmB,CAACF,GAAG,CAAC;QACxD,IAAID,aAAa,IAAIE,GAAG,CAACzD,SAAS,CAACwD,GAAG,CAAC,IAAKC,GAAG,KAAK5pC,EAAE,CAACge,OAAO,IAAI2rB,GAAG,CAACr/B,EAAG,EAAE;UACzEtK,EAAE,CAAC8pC,KAAK,CAAC3kC,MAAM,EAAEykC,GAAG,EAAED,GAAG,CAAC;QAC5B,CAAC,MAAM;UACL1zC,IAAI,CAAC0zC,GAAG,EAAE,UAAA/oC,IAAI,EAAI;YAChB,IAAMmpC,OAAO,GAAGL,aAAa,IAAI1pC,EAAE,CAAC6pC,mBAAmB,CAACjpC,IAAI,CAAC;YAC7DZ,EAAE,CAAC8pC,KAAK,CAAC3kC,MAAM,EAAE4kC,OAAO,EAAEnpC,IAAI,CAAC;UACjC,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EAAC;IAAA/B,GAAA;IAAAC,KAAA,EACD,SAAAgrC,MAAM3kC,MAAM,EAAE6kC,QAAQ,EAAEC,SAAS,EAAE;MACjC,IAAMC,WAAW,GAAGnxC,WAAW,CAACoM,MAAM,CAAC;MACvChO,QAAQ,CAAC8yC,SAAS,CAAC,QAAQ,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;MAC1DD,QAAQ,CAAC7kC,MAAM,CAAC,CAAC8kC,SAAS,CAAC;MAC3B9yC,QAAQ,CAAC8yC,SAAS,CAAC,OAAO,GAAGC,WAAW,CAAC,EAAE,EAAE,EAAED,SAAS,CAAC;IAC3D;EAAC;IAAAprC,GAAA;IAAAC,KAAA,EACD,SAAA+qC,oBAAoB1qC,IAAI,EAAE;MACxB,KAAK,IAAIzM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC+0C,gBAAgB,CAACpnC,MAAM,EAAE3N,CAAC,EAAE,EAAE;QACrD,IAAMk3C,GAAG,GAAG,IAAI,CAACnC,gBAAgB,CAAC/0C,CAAC,CAAC;QACpC,IAAIk3C,GAAG,CAACzD,SAAS,CAAChnC,IAAI,CAAC,EAAE;UACvB,OAAOyqC,GAAG;QACZ;MACF;MACA,OAAO,IAAI,CAAC5rB,OAAO;IACrB;EAAC;IAAAnf,GAAA;IAAAC,KAAA,EACD,SAAAmb,KAAK3P,EAAE,EAAEo/B,aAAa,EAAEvqC,IAAI,EAAE;MAC5B,IAAMyB,IAAI,GAAG8oC,aAAa,CAACvoC,GAAG,CAACmJ,EAAE,CAAC;MAClC,IAAI1J,IAAI,KAAKjC,SAAS,EAAE;QACtB,MAAM,IAAIspB,KAAK,CAAC,GAAG,GAAG3d,EAAE,GAAG,wBAAwB,GAAGnL,IAAI,GAAG,GAAG,CAAC;MACnE;MACA,OAAOyB,IAAI;IACb;EAAC;EAAA,OAAA4mC,QAAA;AAAA;AAEH,IAAIwC,QAAQ,GAAG,IAAIxC,QAAQ,EAAE;AAAC,IAExB2C,aAAa;EACjB,SAAAA,cAAA,EAAc;IAAA9rC,eAAA,OAAA8rC,aAAA;IACZ,IAAI,CAACC,KAAK,GAAG,EAAE;EACjB;EAACxrC,YAAA,CAAAurC,aAAA;IAAAtrC,GAAA;IAAAC,KAAA,EACD,SAAAurC,OAAOrrC,KAAK,EAAEsrC,IAAI,EAAEvW,IAAI,EAAErnB,MAAM,EAAE;MAChC,IAAM1M,EAAE,GAAG,IAAI;MACf,IAAIsqC,IAAI,KAAK,YAAY,EAAE;QACzBtqC,EAAE,CAACoqC,KAAK,GAAGpqC,EAAE,CAACuqC,kBAAkB,CAACvrC,KAAK,EAAE,IAAI,CAAC;QAC7CgB,EAAE,CAACjB,OAAO,CAACiB,EAAE,CAACoqC,KAAK,EAAEprC,KAAK,EAAE,SAAS,CAAC;MACxC;MACA,IAAM/F,WAAW,GAAGyT,MAAM,GAAG1M,EAAE,CAACvG,YAAY,CAACuF,KAAK,CAAC,CAAC0N,MAAM,CAACA,MAAM,CAAC,GAAG1M,EAAE,CAACvG,YAAY,CAACuF,KAAK,CAAC;MAC3F,IAAM+5B,MAAM,GAAG/4B,EAAE,CAACjB,OAAO,CAAC9F,WAAW,EAAE+F,KAAK,EAAEsrC,IAAI,EAAEvW,IAAI,CAAC;MACzD,IAAIuW,IAAI,KAAK,SAAS,EAAE;QACtBtqC,EAAE,CAACjB,OAAO,CAAC9F,WAAW,EAAE+F,KAAK,EAAE,MAAM,CAAC;QACtCgB,EAAE,CAACjB,OAAO,CAACiB,EAAE,CAACoqC,KAAK,EAAEprC,KAAK,EAAE,WAAW,CAAC;MAC1C;MACA,OAAO+5B,MAAM;IACf;EAAC;IAAAl6B,GAAA;IAAAC,KAAA,EACD,SAAAC,QAAQ9F,WAAW,EAAE+F,KAAK,EAAEsrC,IAAI,EAAEvW,IAAI,EAAE;MACtCA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;MAAC,IAAAyW,UAAA,GAAAj/B,0BAAA,CACOtS,WAAW;QAAAwxC,MAAA;MAAA;QAApC,KAAAD,UAAA,CAAA52C,CAAA,MAAA62C,MAAA,GAAAD,UAAA,CAAA91C,CAAA,IAAAgX,IAAA,GAAsC;UAAA,IAA3Bg/B,UAAU,GAAAD,MAAA,CAAA3rC,KAAA;UACnB,IAAM6rC,MAAM,GAAGD,UAAU,CAACC,MAAM;UAChC,IAAMxlC,MAAM,GAAGwlC,MAAM,CAACL,IAAI,CAAC;UAC3B,IAAM9d,MAAM,GAAG,CAACxtB,KAAK,EAAE+0B,IAAI,EAAE2W,UAAU,CAACxjC,OAAO,CAAC;UAChD,IAAI/P,QAAQ,CAACgO,MAAM,EAAEqnB,MAAM,EAAEme,MAAM,CAAC,KAAK,KAAK,IAAI5W,IAAI,CAAC6W,UAAU,EAAE;YACjE,OAAO,KAAK;UACd;QACF;MAAC,SAAAj/B,GAAA;QAAA6+B,UAAA,CAAAl4C,CAAA,CAAAqZ,GAAA;MAAA;QAAA6+B,UAAA,CAAAl3C,CAAA;MAAA;MACD,OAAO,IAAI;IACb;EAAC;IAAAuL,GAAA;IAAAC,KAAA,EACD,SAAA+rC,WAAA,EAAa;MACX,IAAI,CAAC92C,aAAa,CAAC,IAAI,CAACmjB,MAAM,CAAC,EAAE;QAC/B,IAAI,CAAC4zB,SAAS,GAAG,IAAI,CAAC5zB,MAAM;QAC5B,IAAI,CAACA,MAAM,GAAGvY,SAAS;MACzB;IACF;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAArF,aAAauF,KAAK,EAAE;MAClB,IAAI,IAAI,CAACkY,MAAM,EAAE;QACf,OAAO,IAAI,CAACA,MAAM;MACpB;MACA,IAAMje,WAAW,GAAG,IAAI,CAACie,MAAM,GAAG,IAAI,CAACqzB,kBAAkB,CAACvrC,KAAK,CAAC;MAChE,IAAI,CAAC+rC,mBAAmB,CAAC/rC,KAAK,CAAC;MAC/B,OAAO/F,WAAW;IACpB;EAAC;IAAA4F,GAAA;IAAAC,KAAA,EACD,SAAAyrC,mBAAmBvrC,KAAK,EAAE8I,GAAG,EAAE;MAC7B,IAAMxB,MAAM,GAAGtH,KAAK,IAAIA,KAAK,CAACsH,MAAM;MACpC,IAAMY,OAAO,GAAGjU,cAAc,CAACqT,MAAM,CAACY,OAAO,IAAIZ,MAAM,CAACY,OAAO,CAAC8W,OAAO,EAAE,CAAC,CAAC,CAAC;MAC5E,IAAMA,OAAO,GAAGgtB,UAAU,CAAC1kC,MAAM,CAAC;MAClC,OAAOY,OAAO,KAAK,KAAK,IAAI,CAACY,GAAG,GAAG,EAAE,GAAGmjC,iBAAiB,CAACjsC,KAAK,EAAEgf,OAAO,EAAE9W,OAAO,EAAEY,GAAG,CAAC;IACzF;EAAC;IAAAjJ,GAAA;IAAAC,KAAA,EACD,SAAAisC,oBAAoB/rC,KAAK,EAAE;MACzB,IAAMksC,mBAAmB,GAAG,IAAI,CAACJ,SAAS,IAAI,EAAE;MAChD,IAAM7xC,WAAW,GAAG,IAAI,CAACie,MAAM;MAC/B,IAAMsR,IAAI,GAAG,SAAPA,IAAIA,CAAIp2B,CAAC,EAAEQ,CAAC;QAAA,OAAKR,CAAC,CAACsa,MAAM,CAAC,UAAAlX,CAAC;UAAA,OAAI,CAAC5C,CAAC,CAACu4C,IAAI,CAAC,UAAAz1C,CAAC;YAAA,OAAIF,CAAC,CAACm1C,MAAM,CAACrgC,EAAE,KAAK5U,CAAC,CAACi1C,MAAM,CAACrgC,EAAE;UAAA,EAAC;QAAA,EAAC;MAAA;MAC/E,IAAI,CAACvL,OAAO,CAACypB,IAAI,CAAC0iB,mBAAmB,EAAEjyC,WAAW,CAAC,EAAE+F,KAAK,EAAE,MAAM,CAAC;MACnE,IAAI,CAACD,OAAO,CAACypB,IAAI,CAACvvB,WAAW,EAAEiyC,mBAAmB,CAAC,EAAElsC,KAAK,EAAE,OAAO,CAAC;IACtE;EAAC;EAAA,OAAAmrC,aAAA;AAAA;AAEH,SAASa,UAAUA,CAAC1kC,MAAM,EAAE;EAC1B,IAAM0X,OAAO,GAAG,EAAE;EAClB,IAAMxY,IAAI,GAAGD,MAAM,CAACC,IAAI,CAACwkC,QAAQ,CAAChsB,OAAO,CAACtd,KAAK,CAAC;EAChD,KAAK,IAAIhO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8S,IAAI,CAACnF,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACpCsrB,OAAO,CAACtc,IAAI,CAACsoC,QAAQ,CAACpB,SAAS,CAACpjC,IAAI,CAAC9S,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,IAAM04C,KAAK,GAAG9kC,MAAM,CAAC0X,OAAO,IAAI,EAAE;EAClC,KAAK,IAAItrB,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG04C,KAAK,CAAC/qC,MAAM,EAAE3N,GAAC,EAAE,EAAE;IACrC,IAAMi4C,MAAM,GAAGS,KAAK,CAAC14C,GAAC,CAAC;IACvB,IAAIsrB,OAAO,CAACxC,OAAO,CAACmvB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MAClC3sB,OAAO,CAACtc,IAAI,CAACipC,MAAM,CAAC;IACtB;EACF;EACA,OAAO3sB,OAAO;AAChB;AACA,SAASqtB,OAAOA,CAACnkC,OAAO,EAAEY,GAAG,EAAE;EAC7B,IAAI,CAACA,GAAG,IAAIZ,OAAO,KAAK,KAAK,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,IAAIA,OAAO,KAAK,IAAI,EAAE;IACpB,OAAO,CAAC,CAAC;EACX;EACA,OAAOA,OAAO;AAChB;AACA,SAAS+jC,iBAAiBA,CAACjsC,KAAK,EAAEgf,OAAO,EAAE9W,OAAO,EAAEY,GAAG,EAAE;EACvD,IAAMixB,MAAM,GAAG,EAAE;EACjB,IAAM9kB,OAAO,GAAGjV,KAAK,CAACkS,UAAU,EAAE;EAClC,KAAK,IAAIxe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsrB,OAAO,CAAC3d,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACvC,IAAMi4C,MAAM,GAAG3sB,OAAO,CAACtrB,CAAC,CAAC;IACzB,IAAM4X,EAAE,GAAGqgC,MAAM,CAACrgC,EAAE;IACpB,IAAMpC,IAAI,GAAGmjC,OAAO,CAACnkC,OAAO,CAACoD,EAAE,CAAC,EAAExC,GAAG,CAAC;IACtC,IAAII,IAAI,KAAK,IAAI,EAAE;MACjB;IACF;IACA6wB,MAAM,CAACr3B,IAAI,CAAC;MACVipC,MAAM,EAANA,MAAM;MACNzjC,OAAO,EAAEokC,UAAU,CAACtsC,KAAK,CAACsH,MAAM,EAAEqkC,MAAM,EAAEziC,IAAI,EAAE+L,OAAO;IACzD,CAAC,CAAC;EACJ;EACA,OAAO8kB,MAAM;AACf;AACA,SAASuS,UAAUA,CAAChlC,MAAM,EAAEqkC,MAAM,EAAEziC,IAAI,EAAE+L,OAAO,EAAE;EACjD,IAAMzO,IAAI,GAAGc,MAAM,CAACilC,eAAe,CAACZ,MAAM,CAAC;EAC3C,IAAM55B,MAAM,GAAGzK,MAAM,CAAC0K,eAAe,CAAC9I,IAAI,EAAE1C,IAAI,CAAC;EACjD,OAAOc,MAAM,CAAC2K,cAAc,CAACF,MAAM,EAAEkD,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;IAACu3B,UAAU,EAAE,KAAK;IAAEC,SAAS,EAAE,KAAK;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;AAC3G;AAEA,SAASC,YAAYA,CAACxsC,IAAI,EAAE+H,OAAO,EAAE;EACnC,IAAM0kC,eAAe,GAAG74C,QAAQ,CAACgd,QAAQ,CAAC5Q,IAAI,CAAC,IAAI,CAAC,CAAC;EACrD,IAAM0sC,cAAc,GAAG,CAAC3kC,OAAO,CAAC6I,QAAQ,IAAI,CAAC,CAAC,EAAE5Q,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,OAAO0sC,cAAc,CAACr8B,SAAS,IAAItI,OAAO,CAACsI,SAAS,IAAIo8B,eAAe,CAACp8B,SAAS,IAAI,GAAG;AAC1F;AACA,SAASs8B,yBAAyBA,CAACxhC,EAAE,EAAEkF,SAAS,EAAE;EAChD,IAAIrD,IAAI,GAAG7B,EAAE;EACb,IAAIA,EAAE,KAAK,SAAS,EAAE;IACpB6B,IAAI,GAAGqD,SAAS;EAClB,CAAC,MAAM,IAAIlF,EAAE,KAAK,SAAS,EAAE;IAC3B6B,IAAI,GAAGqD,SAAS,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;EACtC;EACA,OAAOrD,IAAI;AACb;AACA,SAAS4/B,yBAAyBA,CAAC5/B,IAAI,EAAEqD,SAAS,EAAE;EAClD,OAAOrD,IAAI,KAAKqD,SAAS,GAAG,SAAS,GAAG,SAAS;AACnD;AACA,SAASw8B,gBAAgBA,CAACliB,QAAQ,EAAE;EAClC,IAAIA,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,EAAE;IAC/C,OAAO,GAAG;EACZ;EACA,IAAIA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE;IAC/C,OAAO,GAAG;EACZ;AACF;AACA,SAASmiB,aAAaA,CAAC3hC,EAAE,EAAE4hC,YAAY,EAAE;EACvC,IAAI5hC,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;IAC5B,OAAOA,EAAE;EACX;EACA,OAAO4hC,YAAY,CAAC//B,IAAI,IAAI6/B,gBAAgB,CAACE,YAAY,CAACpiB,QAAQ,CAAC,IAAIxf,EAAE,CAAC5C,MAAM,CAAC,CAAC,CAAC,CAACykC,WAAW,EAAE;AACnG;AACA,SAASC,gBAAgBA,CAAC9lC,MAAM,EAAEY,OAAO,EAAE;EACzC,IAAMmlC,aAAa,GAAG1zC,SAAS,CAAC2N,MAAM,CAACnH,IAAI,CAAC,IAAI;IAACsN,MAAM,EAAE,CAAC;EAAC,CAAC;EAC5D,IAAM6/B,YAAY,GAAGplC,OAAO,CAACuF,MAAM,IAAI,CAAC,CAAC;EACzC,IAAM8/B,cAAc,GAAGZ,YAAY,CAACrlC,MAAM,CAACnH,IAAI,EAAE+H,OAAO,CAAC;EACzD,IAAMslC,QAAQ,GAAGjnC,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;EACpC,IAAML,MAAM,GAAGlH,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;EAClCvH,MAAM,CAACC,IAAI,CAAC8mC,YAAY,CAAC,CAAC9sC,OAAO,CAAC,UAAA8K,EAAE,EAAI;IACtC,IAAMmiC,SAAS,GAAGH,YAAY,CAAChiC,EAAE,CAAC;IAClC,IAAM6B,IAAI,GAAG8/B,aAAa,CAAC3hC,EAAE,EAAEmiC,SAAS,CAAC;IACzC,IAAMC,SAAS,GAAGX,yBAAyB,CAAC5/B,IAAI,EAAEogC,cAAc,CAAC;IACjE,IAAMI,mBAAmB,GAAGN,aAAa,CAAC5/B,MAAM,IAAI,CAAC,CAAC;IACtD+/B,QAAQ,CAACrgC,IAAI,CAAC,GAAGqgC,QAAQ,CAACrgC,IAAI,CAAC,IAAI7B,EAAE;IACrCmC,MAAM,CAACnC,EAAE,CAAC,GAAG3Q,OAAO,CAAC4L,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;MAACX,IAAI,EAAJA;IAAI,CAAC,EAAEsgC,SAAS,EAAEE,mBAAmB,CAACxgC,IAAI,CAAC,EAAEwgC,mBAAmB,CAACD,SAAS,CAAC,CAAC,CAAC;EAC3H,CAAC,CAAC;EACFpmC,MAAM,CAACsD,IAAI,CAACmG,QAAQ,CAACvQ,OAAO,CAAC,UAAAuN,OAAO,EAAI;IACtC,IAAM5N,IAAI,GAAG4N,OAAO,CAAC5N,IAAI,IAAImH,MAAM,CAACnH,IAAI;IACxC,IAAMqQ,SAAS,GAAGzC,OAAO,CAACyC,SAAS,IAAIm8B,YAAY,CAACxsC,IAAI,EAAE+H,OAAO,CAAC;IAClE,IAAM0kC,eAAe,GAAGjzC,SAAS,CAACwG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,IAAMwtC,mBAAmB,GAAGf,eAAe,CAACn/B,MAAM,IAAI,CAAC,CAAC;IACxDlH,MAAM,CAACC,IAAI,CAACmnC,mBAAmB,CAAC,CAACntC,OAAO,CAAC,UAAAotC,SAAS,EAAI;MACpD,IAAMzgC,IAAI,GAAG2/B,yBAAyB,CAACc,SAAS,EAAEp9B,SAAS,CAAC;MAC5D,IAAMlF,EAAE,GAAGyC,OAAO,CAACZ,IAAI,GAAG,QAAQ,CAAC,IAAIqgC,QAAQ,CAACrgC,IAAI,CAAC,IAAIA,IAAI;MAC7DM,MAAM,CAACnC,EAAE,CAAC,GAAGmC,MAAM,CAACnC,EAAE,CAAC,IAAI/E,MAAM,CAACuH,MAAM,CAAC,IAAI,CAAC;MAC9CnT,OAAO,CAAC8S,MAAM,CAACnC,EAAE,CAAC,EAAE,CAAC;QAAC6B,IAAI,EAAJA;MAAI,CAAC,EAAEmgC,YAAY,CAAChiC,EAAE,CAAC,EAAEqiC,mBAAmB,CAACC,SAAS,CAAC,CAAC,CAAC;IACjF,CAAC,CAAC;EACJ,CAAC,CAAC;EACFrnC,MAAM,CAACC,IAAI,CAACiH,MAAM,CAAC,CAACjN,OAAO,CAAC,UAAAX,GAAG,EAAI;IACjC,IAAMmJ,KAAK,GAAGyE,MAAM,CAAC5N,GAAG,CAAC;IACzBlF,OAAO,CAACqO,KAAK,EAAE,CAACjV,QAAQ,CAAC0Z,MAAM,CAACzE,KAAK,CAAC7I,IAAI,CAAC,EAAEpM,QAAQ,CAACiV,KAAK,CAAC,CAAC;EAC/D,CAAC,CAAC;EACF,OAAOyE,MAAM;AACf;AACA,SAASogC,WAAWA,CAACvmC,MAAM,EAAE;EAC3B,IAAMY,OAAO,GAAGZ,MAAM,CAACY,OAAO,KAAKZ,MAAM,CAACY,OAAO,GAAG,CAAC,CAAC,CAAC;EACvDA,OAAO,CAAC8W,OAAO,GAAG/qB,cAAc,CAACiU,OAAO,CAAC8W,OAAO,EAAE,CAAC,CAAC,CAAC;EACrD9W,OAAO,CAACuF,MAAM,GAAG2/B,gBAAgB,CAAC9lC,MAAM,EAAEY,OAAO,CAAC;AACpD;AACA,SAAS4lC,QAAQA,CAACljC,IAAI,EAAE;EACtBA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjBA,IAAI,CAACmG,QAAQ,GAAGnG,IAAI,CAACmG,QAAQ,IAAI,EAAE;EACnCnG,IAAI,CAACiI,MAAM,GAAGjI,IAAI,CAACiI,MAAM,IAAI,EAAE;EAC/B,OAAOjI,IAAI;AACb;AACA,SAASmjC,UAAUA,CAACzmC,MAAM,EAAE;EAC1BA,MAAM,GAAGA,MAAM,IAAI,CAAC,CAAC;EACrBA,MAAM,CAACsD,IAAI,GAAGkjC,QAAQ,CAACxmC,MAAM,CAACsD,IAAI,CAAC;EACnCijC,WAAW,CAACvmC,MAAM,CAAC;EACnB,OAAOA,MAAM;AACf;AACA,IAAM0mC,QAAQ,GAAG,IAAIxuC,GAAG,EAAE;AAC1B,IAAMyuC,UAAU,GAAG,IAAIC,GAAG,EAAE;AAC5B,SAASC,UAAUA,CAAC74B,QAAQ,EAAE84B,QAAQ,EAAE;EACtC,IAAI5nC,IAAI,GAAGwnC,QAAQ,CAAC7rC,GAAG,CAACmT,QAAQ,CAAC;EACjC,IAAI,CAAC9O,IAAI,EAAE;IACTA,IAAI,GAAG4nC,QAAQ,EAAE;IACjBJ,QAAQ,CAAC1rC,GAAG,CAACgT,QAAQ,EAAE9O,IAAI,CAAC;IAC5BynC,UAAU,CAACtrC,GAAG,CAAC6D,IAAI,CAAC;EACtB;EACA,OAAOA,IAAI;AACb;AACA,IAAM6nC,UAAU,GAAG,SAAbA,UAAUA,CAAI/rC,GAAG,EAAE0Y,GAAG,EAAEnb,GAAG,EAAK;EACpC,IAAMqJ,IAAI,GAAG3U,gBAAgB,CAACymB,GAAG,EAAEnb,GAAG,CAAC;EACvC,IAAIqJ,IAAI,KAAKvJ,SAAS,EAAE;IACtB2C,GAAG,CAACK,GAAG,CAACuG,IAAI,CAAC;EACf;AACF,CAAC;AAAC,IACIolC,MAAM;EACV,SAAAA,OAAYhnC,MAAM,EAAE;IAAAjI,eAAA,OAAAivC,MAAA;IAClB,IAAI,CAACC,OAAO,GAAGR,UAAU,CAACzmC,MAAM,CAAC;IACjC,IAAI,CAACknC,WAAW,GAAG,IAAIhvC,GAAG,EAAE;IAC5B,IAAI,CAACivC,cAAc,GAAG,IAAIjvC,GAAG,EAAE;EACjC;EAACI,YAAA,CAAA0uC,MAAA;IAAAzuC,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACosC,OAAO,CAACpuC,IAAI;IAC1B,CAAC;IAAAmC,GAAA,EACD,SAAAA,IAASnC,IAAI,EAAE;MACb,IAAI,CAACouC,OAAO,CAACpuC,IAAI,GAAGA,IAAI;IAC1B;EAAC;IAAAN,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACosC,OAAO,CAAC3jC,IAAI;IAC1B,CAAC;IAAAtI,GAAA,EACD,SAAAA,IAASsI,IAAI,EAAE;MACb,IAAI,CAAC2jC,OAAO,CAAC3jC,IAAI,GAAGkjC,QAAQ,CAACljC,IAAI,CAAC;IACpC;EAAC;IAAA/K,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACosC,OAAO,CAACrmC,OAAO;IAC7B,CAAC;IAAA5F,GAAA,EACD,SAAAA,IAAY4F,OAAO,EAAE;MACnB,IAAI,CAACqmC,OAAO,CAACrmC,OAAO,GAAGA,OAAO;IAChC;EAAC;IAAArI,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACosC,OAAO,CAACvvB,OAAO;IAC7B;EAAC;IAAAnf,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAA,EAAS;MACP,IAAM4B,MAAM,GAAG,IAAI,CAACinC,OAAO;MAC3B,IAAI,CAACG,UAAU,EAAE;MACjBb,WAAW,CAACvmC,MAAM,CAAC;IACrB;EAAC;IAAAzH,GAAA;IAAAC,KAAA,EACD,SAAA4uC,WAAA,EAAa;MACX,IAAI,CAACF,WAAW,CAACG,KAAK,EAAE;MACxB,IAAI,CAACF,cAAc,CAACE,KAAK,EAAE;IAC7B;EAAC;IAAA9uC,GAAA;IAAAC,KAAA,EACD,SAAAgS,iBAAiB88B,WAAW,EAAE;MAC5B,OAAOT,UAAU,CAACS,WAAW,EAC3B;QAAA,OAAM,CAAC,aAAAvjC,MAAA,CACOujC,WAAW,GACvB,EAAE,CACH,CAAC;MAAA,EAAC;IACP;EAAC;IAAA/uC,GAAA;IAAAC,KAAA,EACD,SAAAiW,0BAA0B64B,WAAW,EAAE94B,UAAU,EAAE;MACjD,OAAOq4B,UAAU,IAAA9iC,MAAA,CAAIujC,WAAW,kBAAAvjC,MAAA,CAAeyK,UAAU,GACvD;QAAA,OAAM,CACJ,aAAAzK,MAAA,CACcujC,WAAW,mBAAAvjC,MAAA,CAAgByK,UAAU,kBAAAzK,MAAA,CAClCyK,UAAU,EAC1B,EACD,aAAAzK,MAAA,CACcujC,WAAW,GACvB,EAAE,CACH,CACF;MAAA,EAAC;IACN;EAAC;IAAA/uC,GAAA;IAAAC,KAAA,EACD,SAAA0V,wBAAwBo5B,WAAW,EAAEx5B,WAAW,EAAE;MAChD,OAAO+4B,UAAU,IAAA9iC,MAAA,CAAIujC,WAAW,OAAAvjC,MAAA,CAAI+J,WAAW,GAC7C;QAAA,OAAM,CAAC,aAAA/J,MAAA,CACOujC,WAAW,gBAAAvjC,MAAA,CAAa+J,WAAW,eAAA/J,MAAA,CACnCujC,WAAW,eAAAvjC,MAAA,CACX+J,WAAW,GACvB,EAAE,CACH,CAAC;MAAA,EAAC;IACP;EAAC;IAAAvV,GAAA;IAAAC,KAAA,EACD,SAAAysC,gBAAgBZ,MAAM,EAAE;MACtB,IAAMrgC,EAAE,GAAGqgC,MAAM,CAACrgC,EAAE;MACpB,IAAMnL,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,OAAOguC,UAAU,IAAA9iC,MAAA,CAAIlL,IAAI,cAAAkL,MAAA,CAAWC,EAAE,GACpC;QAAA,OAAM,aAAAD,MAAA,CACOC,EAAE,GAAAD,MAAA,CAAAvI,kBAAA,CACV6oC,MAAM,CAACkD,sBAAsB,IAAI,EAAE,GACtC;MAAA,EAAC;IACP;EAAC;IAAAhvC,GAAA;IAAAC,KAAA,EACD,SAAAgvC,cAAcC,SAAS,EAAEC,UAAU,EAAE;MACnC,IAAMR,WAAW,GAAG,IAAI,CAACA,WAAW;MACpC,IAAIn5B,KAAK,GAAGm5B,WAAW,CAACrsC,GAAG,CAAC4sC,SAAS,CAAC;MACtC,IAAI,CAAC15B,KAAK,IAAI25B,UAAU,EAAE;QACxB35B,KAAK,GAAG,IAAI7V,GAAG,EAAE;QACjBgvC,WAAW,CAAClsC,GAAG,CAACysC,SAAS,EAAE15B,KAAK,CAAC;MACnC;MACA,OAAOA,KAAK;IACd;EAAC;IAAAxV,GAAA;IAAAC,KAAA,EACD,SAAAkS,gBAAgB+8B,SAAS,EAAEE,QAAQ,EAAED,UAAU,EAAE;MAC/C,IAAO9mC,OAAO,GAAU,IAAI,CAArBA,OAAO;QAAE/H,IAAI,GAAI,IAAI,CAAZA,IAAI;MACpB,IAAMkV,KAAK,GAAG,IAAI,CAACy5B,aAAa,CAACC,SAAS,EAAEC,UAAU,CAAC;MACvD,IAAMtgC,MAAM,GAAG2G,KAAK,CAAClT,GAAG,CAAC8sC,QAAQ,CAAC;MAClC,IAAIvgC,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,IAAMqD,MAAM,GAAG,IAAIm8B,GAAG,EAAE;MACxBe,QAAQ,CAACzuC,OAAO,CAAC,UAAAgG,IAAI,EAAI;QACvB,IAAIuoC,SAAS,EAAE;UACbh9B,MAAM,CAACpP,GAAG,CAACosC,SAAS,CAAC;UACrBvoC,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;YAAA,OAAIwuC,UAAU,CAACt8B,MAAM,EAAEg9B,SAAS,EAAElvC,GAAG,CAAC;UAAA,EAAC;QACzD;QACA2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIwuC,UAAU,CAACt8B,MAAM,EAAE7J,OAAO,EAAErI,GAAG,CAAC;QAAA,EAAC;QACrD2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIwuC,UAAU,CAACt8B,MAAM,EAAEpY,SAAS,CAACwG,IAAI,CAAC,IAAI,CAAC,CAAC,EAAEN,GAAG,CAAC;QAAA,EAAC;QACnE2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIwuC,UAAU,CAACt8B,MAAM,EAAEhe,QAAQ,EAAE8L,GAAG,CAAC;QAAA,EAAC;QACtD2G,IAAI,CAAChG,OAAO,CAAC,UAAAX,GAAG;UAAA,OAAIwuC,UAAU,CAACt8B,MAAM,EAAE9X,WAAW,EAAE4F,GAAG,CAAC;QAAA,EAAC;MAC3D,CAAC,CAAC;MACF,IAAM+sB,KAAK,GAAG9hB,KAAK,CAACjH,IAAI,CAACkO,MAAM,CAAC;MAChC,IAAIk8B,UAAU,CAAClrC,GAAG,CAACksC,QAAQ,CAAC,EAAE;QAC5B55B,KAAK,CAAC/S,GAAG,CAAC2sC,QAAQ,EAAEriB,KAAK,CAAC;MAC5B;MACA,OAAOA,KAAK;IACd;EAAC;IAAA/sB,GAAA;IAAAC,KAAA,EACD,SAAAovC,kBAAA,EAAoB;MAClB,IAAOhnC,OAAO,GAAU,IAAI,CAArBA,OAAO;QAAE/H,IAAI,GAAI,IAAI,CAAZA,IAAI;MACpB,OAAO,CACL+H,OAAO,EACPvO,SAAS,CAACwG,IAAI,CAAC,IAAI,CAAC,CAAC,EACrBpM,QAAQ,CAACgd,QAAQ,CAAC5Q,IAAI,CAAC,IAAI,CAAC,CAAC,EAC7B;QAACA,IAAI,EAAJA;MAAI,CAAC,EACNpM,QAAQ,EACRkG,WAAW,CACZ;IACH;EAAC;IAAA4F,GAAA;IAAAC,KAAA,EACD,SAAA6V,oBAAoB5D,MAAM,EAAE2D,KAAK,EAAET,OAAO,EAAmB;MAAA,IAAjBQ,QAAQ,GAAArU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,CAAC,EAAE,CAAC;MACzD,IAAM24B,MAAM,GAAG;QAAC1xB,OAAO,EAAE;MAAI,CAAC;MAC9B,IAAA8mC,YAAA,GAAgCC,WAAW,CAAC,IAAI,CAACX,cAAc,EAAE18B,MAAM,EAAE0D,QAAQ,CAAC;QAA3E45B,QAAQ,GAAAF,YAAA,CAARE,QAAQ;QAAEC,WAAW,GAAAH,YAAA,CAAXG,WAAW;MAC5B,IAAIpnC,OAAO,GAAGmnC,QAAQ;MACtB,IAAIE,WAAW,CAACF,QAAQ,EAAE35B,KAAK,CAAC,EAAE;QAChCqkB,MAAM,CAAC1xB,OAAO,GAAG,KAAK;QACtB4M,OAAO,GAAG9a,UAAU,CAAC8a,OAAO,CAAC,GAAGA,OAAO,EAAE,GAAGA,OAAO;QACnD,IAAMu6B,WAAW,GAAG,IAAI,CAACv9B,cAAc,CAACF,MAAM,EAAEkD,OAAO,EAAEq6B,WAAW,CAAC;QACrEpnC,OAAO,GAAG7N,cAAc,CAACg1C,QAAQ,EAAEp6B,OAAO,EAAEu6B,WAAW,CAAC;MAC1D;MAAC,IAAAC,UAAA,GAAAljC,0BAAA,CACkBmJ,KAAK;QAAAg6B,MAAA;MAAA;QAAxB,KAAAD,UAAA,CAAA76C,CAAA,MAAA86C,MAAA,GAAAD,UAAA,CAAA/5C,CAAA,IAAAgX,IAAA,GAA0B;UAAA,IAAfjI,IAAI,GAAAirC,MAAA,CAAA5vC,KAAA;UACbi6B,MAAM,CAACt1B,IAAI,CAAC,GAAGyD,OAAO,CAACzD,IAAI,CAAC;QAC9B;MAAC,SAAAkI,GAAA;QAAA8iC,UAAA,CAAAn8C,CAAA,CAAAqZ,GAAA;MAAA;QAAA8iC,UAAA,CAAAn7C,CAAA;MAAA;MACD,OAAOylC,MAAM;IACf;EAAC;IAAAl6B,GAAA;IAAAC,KAAA,EACD,SAAAmS,eAAeF,MAAM,EAAEkD,OAAO,EAAuC;MAAA,IAArCQ,QAAQ,GAAArU,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,CAAC,EAAE,CAAC;MAAA,IAAEuuC,kBAAkB,GAAAvuC,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAzB,SAAA;MACjE,IAAAiwC,aAAA,GAAmBR,WAAW,CAAC,IAAI,CAACX,cAAc,EAAE18B,MAAM,EAAE0D,QAAQ,CAAC;QAA9D45B,QAAQ,GAAAO,aAAA,CAARP,QAAQ;MACf,OAAO17C,QAAQ,CAACshB,OAAO,CAAC,GACpB5a,cAAc,CAACg1C,QAAQ,EAAEp6B,OAAO,EAAEtV,SAAS,EAAEgwC,kBAAkB,CAAC,GAChEN,QAAQ;IACd;EAAC;EAAA,OAAAf,MAAA;AAAA;AAEH,SAASc,WAAWA,CAACS,aAAa,EAAE99B,MAAM,EAAE0D,QAAQ,EAAE;EACpD,IAAIJ,KAAK,GAAGw6B,aAAa,CAAC1tC,GAAG,CAAC4P,MAAM,CAAC;EACrC,IAAI,CAACsD,KAAK,EAAE;IACVA,KAAK,GAAG,IAAI7V,GAAG,EAAE;IACjBqwC,aAAa,CAACvtC,GAAG,CAACyP,MAAM,EAAEsD,KAAK,CAAC;EAClC;EACA,IAAMC,QAAQ,GAAGG,QAAQ,CAAC2yB,IAAI,EAAE;EAChC,IAAI15B,MAAM,GAAG2G,KAAK,CAAClT,GAAG,CAACmT,QAAQ,CAAC;EAChC,IAAI,CAAC5G,MAAM,EAAE;IACX,IAAM2gC,QAAQ,GAAG90C,eAAe,CAACwX,MAAM,EAAE0D,QAAQ,CAAC;IAClD/G,MAAM,GAAG;MACP2gC,QAAQ,EAARA,QAAQ;MACRC,WAAW,EAAE75B,QAAQ,CAAC/H,MAAM,CAAC,UAAAxX,CAAC;QAAA,OAAI,CAACA,CAAC,CAACi3C,WAAW,EAAE,CAAC2C,QAAQ,CAAC,OAAO,CAAC;MAAA;IACtE,CAAC;IACDz6B,KAAK,CAAC/S,GAAG,CAACgT,QAAQ,EAAE5G,MAAM,CAAC;EAC7B;EACA,OAAOA,MAAM;AACf;AACA,SAAS6gC,WAAWA,CAACza,KAAK,EAAEpf,KAAK,EAAE;EACjC,IAAAq6B,aAAA,GAAoCt1C,YAAY,CAACq6B,KAAK,CAAC;IAAhDkb,YAAY,GAAAD,aAAA,CAAZC,YAAY;IAAEC,WAAW,GAAAF,aAAA,CAAXE,WAAW;EAAwB,IAAAC,UAAA,GAAA3jC,0BAAA,CACrCmJ,KAAK;IAAAy6B,MAAA;EAAA;IAAxB,KAAAD,UAAA,CAAAt7C,CAAA,MAAAu7C,MAAA,GAAAD,UAAA,CAAAx6C,CAAA,IAAAgX,IAAA,GAA0B;MAAA,IAAfjI,IAAI,GAAA0rC,MAAA,CAAArwC,KAAA;MACb,IAAKkwC,YAAY,CAACvrC,IAAI,CAAC,IAAItK,UAAU,CAAC26B,KAAK,CAACrwB,IAAI,CAAC,CAAC,IAC5CwrC,WAAW,CAACxrC,IAAI,CAAC,IAAI5Q,OAAO,CAACihC,KAAK,CAACrwB,IAAI,CAAC,CAAE,EAAE;QAChD,OAAO,IAAI;MACb;IACF;EAAC,SAAAkI,GAAA;IAAAujC,UAAA,CAAA58C,CAAA,CAAAqZ,GAAA;EAAA;IAAAujC,UAAA,CAAA57C,CAAA;EAAA;EACD,OAAO,KAAK;AACd;AAEA,IAAI87C,OAAO,GAAG,OAAO;AAErB,IAAMC,eAAe,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,CAAC;AACvE,SAASC,oBAAoBA,CAACxlB,QAAQ,EAAE3d,IAAI,EAAE;EAC5C,OAAO2d,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ,IAAKulB,eAAe,CAAC7zB,OAAO,CAACsO,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI3d,IAAI,KAAK,GAAI;AAClH;AACA,SAASojC,aAAaA,CAACC,EAAE,EAAEC,EAAE,EAAE;EAC7B,OAAO,UAASr9C,CAAC,EAAEQ,CAAC,EAAE;IACpB,OAAOR,CAAC,CAACo9C,EAAE,CAAC,KAAK58C,CAAC,CAAC48C,EAAE,CAAC,GAClBp9C,CAAC,CAACq9C,EAAE,CAAC,GAAG78C,CAAC,CAAC68C,EAAE,CAAC,GACbr9C,CAAC,CAACo9C,EAAE,CAAC,GAAG58C,CAAC,CAAC48C,EAAE,CAAC;EACnB,CAAC;AACH;AACA,SAASE,oBAAoBA,CAACz7B,OAAO,EAAE;EACrC,IAAMjV,KAAK,GAAGiV,OAAO,CAACjV,KAAK;EAC3B,IAAMsG,gBAAgB,GAAGtG,KAAK,CAACkI,OAAO,CAACzB,SAAS;EAChDzG,KAAK,CAACy/B,aAAa,CAAC,aAAa,CAAC;EAClCtnC,QAAQ,CAACmO,gBAAgB,IAAIA,gBAAgB,CAACqqC,UAAU,EAAE,CAAC17B,OAAO,CAAC,EAAEjV,KAAK,CAAC;AAC7E;AACA,SAAS4wC,mBAAmBA,CAAC37B,OAAO,EAAE;EACpC,IAAMjV,KAAK,GAAGiV,OAAO,CAACjV,KAAK;EAC3B,IAAMsG,gBAAgB,GAAGtG,KAAK,CAACkI,OAAO,CAACzB,SAAS;EAChDtO,QAAQ,CAACmO,gBAAgB,IAAIA,gBAAgB,CAACuqC,UAAU,EAAE,CAAC57B,OAAO,CAAC,EAAEjV,KAAK,CAAC;AAC7E;AACA,SAAS8wC,cAAcA,CAAA,EAAG;EACxB,OAAO,OAAO5vC,MAAM,KAAK,WAAW,IAAI,OAAOwyB,QAAQ,KAAK,WAAW;AACzE;AACA,SAASqd,SAASA,CAACnvC,IAAI,EAAE;EACvB,IAAIkvC,cAAc,EAAE,IAAI,OAAOlvC,IAAI,KAAK,QAAQ,EAAE;IAChDA,IAAI,GAAG8xB,QAAQ,CAACsd,cAAc,CAACpvC,IAAI,CAAC;EACtC,CAAC,MAAM,IAAIA,IAAI,IAAIA,IAAI,CAACP,MAAM,EAAE;IAC9BO,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC;EAChB;EACA,IAAIA,IAAI,IAAIA,IAAI,CAACivB,MAAM,EAAE;IACvBjvB,IAAI,GAAGA,IAAI,CAACivB,MAAM;EACpB;EACA,OAAOjvB,IAAI;AACb;AACA,IAAMqvC,SAAS,GAAG,CAAC,CAAC;AACpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIrxC,GAAG,EAAK;EACxB,IAAMgxB,MAAM,GAAGkgB,SAAS,CAAClxC,GAAG,CAAC;EAC7B,OAAO0G,MAAM,CAACyB,MAAM,CAACipC,SAAS,CAAC,CAACvjC,MAAM,CAAC,UAACla,CAAC;IAAA,OAAKA,CAAC,CAACq9B,MAAM,KAAKA,MAAM;EAAA,EAAC,CAAC7uB,GAAG,EAAE;AAC1E,CAAC;AAAC,IACImvC,KAAK;EACT,SAAAA,MAAYvvC,IAAI,EAAE0F,MAAM,EAAE;IAAA,IAAA8pC,MAAA;IAAA/xC,eAAA,OAAA8xC,KAAA;IACxB,IAAMnwC,EAAE,GAAG,IAAI;IACf,IAAI,CAACsG,MAAM,GAAGA,MAAM,GAAG,IAAIgnC,MAAM,CAAChnC,MAAM,CAAC;IACzC,IAAM+pC,aAAa,GAAGN,SAAS,CAACnvC,IAAI,CAAC;IACrC,IAAM0vC,aAAa,GAAGJ,QAAQ,CAACG,aAAa,CAAC;IAC7C,IAAIC,aAAa,EAAE;MACjB,MAAM,IAAIroB,KAAK,CACb,4CAA4C,GAAGqoB,aAAa,CAAChmC,EAAE,GAAG,IAAI,GAC1E,qDAAqD,CAClD;IACH;IACA,IAAMpD,OAAO,GAAGZ,MAAM,CAAC2K,cAAc,CAAC3K,MAAM,CAAC4nC,iBAAiB,EAAE,EAAEluC,EAAE,CAACkR,UAAU,EAAE,CAAC;IAClF,IAAI,CAACq/B,QAAQ,GAAGvwC,EAAE,CAACwwC,mBAAmB,CAACH,aAAa,EAAE/pC,MAAM,CAAC;IAC7D,IAAM2N,OAAO,GAAGjU,EAAE,CAACuwC,QAAQ,CAAC3gB,cAAc,CAACygB,aAAa,EAAEnpC,OAAO,CAACmb,WAAW,CAAC;IAC9E,IAAMwN,MAAM,GAAG5b,OAAO,IAAIA,OAAO,CAAC4b,MAAM;IACxC,IAAM5U,MAAM,GAAG4U,MAAM,IAAIA,MAAM,CAAC5U,MAAM;IACtC,IAAMC,KAAK,GAAG2U,MAAM,IAAIA,MAAM,CAAC3U,KAAK;IACpC,IAAI,CAAC5Q,EAAE,GAAGzQ,GAAG,EAAE;IACf,IAAI,CAACiU,GAAG,GAAGmG,OAAO;IAClB,IAAI,CAAC4b,MAAM,GAAGA,MAAM;IACpB,IAAI,CAAC3U,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACw1B,QAAQ,GAAGvpC,OAAO;IACvB,IAAI,CAACwpC,YAAY,GAAG,IAAI,CAACruB,WAAW;IACpC,IAAI,CAAC8M,OAAO,GAAG,EAAE;IACjB,IAAI,CAACwhB,SAAS,GAAG,EAAE;IACnB,IAAI,CAAC3kC,OAAO,GAAGrN,SAAS;IACxB,IAAI,CAACytB,KAAK,GAAG,EAAE;IACf,IAAI,CAACgH,uBAAuB,GAAGz0B,SAAS;IACxC,IAAI,CAACkV,SAAS,GAAGlV,SAAS;IAC1B,IAAI,CAACkC,OAAO,GAAG,EAAE;IACjB,IAAI,CAAC+vC,UAAU,GAAGjyC,SAAS;IAC3B,IAAI,CAACkyC,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,CAACC,oBAAoB,GAAGnyC,SAAS;IACrC,IAAI,CAACoyC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACtkC,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACzE,KAAK,GAAGrJ,SAAS;IACtB,IAAI,CAACqyC,QAAQ,GAAG,IAAI7G,aAAa,EAAE;IACnC,IAAI,CAAC7V,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC2c,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC97B,mBAAmB,GAAGzW,SAAS;IACpC,IAAI,CAAC8P,QAAQ,GAAG9P,SAAS;IACzB,IAAI,CAACwyC,SAAS,GAAGp3C,QAAQ,CAAC;MAAA,OAAMq2C,MAAI,CAAC1rC,MAAM,CAAC,QAAQ,CAAC;IAAA,GAAEwC,OAAO,CAACkqC,WAAW,IAAI,CAAC,CAAC;IAChFnB,SAAS,CAACjwC,EAAE,CAACsK,EAAE,CAAC,GAAGtK,EAAE;IACrB,IAAI,CAACiU,OAAO,IAAI,CAAC4b,MAAM,EAAE;MACvBwhB,OAAO,CAACC,KAAK,CAAC,mEAAmE,CAAC;MAClF;IACF;IACA7uC,QAAQ,CAAClB,MAAM,CAACvB,EAAE,EAAE,UAAU,EAAE0vC,oBAAoB,CAAC;IACrDjtC,QAAQ,CAAClB,MAAM,CAACvB,EAAE,EAAE,UAAU,EAAE4vC,mBAAmB,CAAC;IACpD5vC,EAAE,CAACuxC,WAAW,EAAE;IAChB,IAAIvxC,EAAE,CAACkxC,QAAQ,EAAE;MACflxC,EAAE,CAAC0E,MAAM,EAAE;IACb;EACF;EAAC9F,YAAA,CAAAuxC,KAAA;IAAAtxC,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAkB;MAChB,IAAAqwC,cAAA,GAAmF,IAAI,CAAhFtqC,OAAO;QAAGmb,WAAW,GAAAmvB,cAAA,CAAXnvB,WAAW;QAAEovB,mBAAmB,GAAAD,cAAA,CAAnBC,mBAAmB;QAAGv2B,KAAK,GAA0B,IAAI,CAAnCA,KAAK;QAAED,MAAM,GAAkB,IAAI,CAA5BA,MAAM;QAAEy1B,YAAY,GAAI,IAAI,CAApBA,YAAY;MAC/E,IAAI,CAAC38C,aAAa,CAACsuB,WAAW,CAAC,EAAE;QAC/B,OAAOA,WAAW;MACpB;MACA,IAAIovB,mBAAmB,IAAIf,YAAY,EAAE;QACvC,OAAOA,YAAY;MACrB;MACA,OAAOz1B,MAAM,GAAGC,KAAK,GAAGD,MAAM,GAAG,IAAI;IACvC;EAAC;IAAApc,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAW;MACT,OAAO,IAAI,CAACmF,MAAM,CAACsD,IAAI;IACzB,CAAC;IAAAtI,GAAA,EACD,SAAAA,IAASsI,IAAI,EAAE;MACb,IAAI,CAACtD,MAAM,CAACsD,IAAI,GAAGA,IAAI;IACzB;EAAC;IAAA/K,GAAA;IAAAsC,GAAA,EACD,SAAAA,IAAA,EAAc;MACZ,OAAO,IAAI,CAACsvC,QAAQ;IACtB,CAAC;IAAAnvC,GAAA,EACD,SAAAA,IAAY4F,OAAO,EAAE;MACnB,IAAI,CAACZ,MAAM,CAACY,OAAO,GAAGA,OAAO;IAC/B;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAAyyC,YAAA,EAAc;MACZ,IAAMvxC,EAAE,GAAG,IAAI;MACfA,EAAE,CAACy+B,aAAa,CAAC,YAAY,CAAC;MAC9B,IAAIz+B,EAAE,CAACkH,OAAO,CAACwqC,UAAU,EAAE;QACzB1xC,EAAE,CAACgG,MAAM,EAAE;MACb,CAAC,MAAM;QACL/L,WAAW,CAAC+F,EAAE,EAAEA,EAAE,CAACkH,OAAO,CAACisB,gBAAgB,CAAC;MAC9C;MACAnzB,EAAE,CAAC2xC,UAAU,EAAE;MACf3xC,EAAE,CAACy+B,aAAa,CAAC,WAAW,CAAC;MAC7B,OAAOz+B,EAAE;IACX;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAA0xC,oBAAoB3gB,MAAM,EAAEvpB,MAAM,EAAE;MAClC,IAAIA,MAAM,CAACiqC,QAAQ,EAAE;QACnB,OAAO,IAAIjqC,MAAM,CAACiqC,QAAQ,EAAE;MAC9B,CAAC,MAAM,IAAI,CAACT,cAAc,EAAE,IAAK,OAAO8B,eAAe,KAAK,WAAW,IAAI/hB,MAAM,YAAY+hB,eAAgB,EAAE;QAC7G,OAAO,IAAIxhB,aAAa,EAAE;MAC5B;MACA,OAAO,IAAI4D,WAAW,EAAE;IAC1B;EAAC;IAAAn1B,GAAA;IAAAC,KAAA,EACD,SAAA6uC,MAAA,EAAQ;MACNxzC,WAAW,CAAC,IAAI,CAAC01B,MAAM,EAAE,IAAI,CAAC/hB,GAAG,CAAC;MAClC,OAAO,IAAI;IACb;EAAC;IAAAjP,GAAA;IAAAC,KAAA,EACD,SAAAuD,KAAA,EAAO;MACLI,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAAC;MACnB,OAAO,IAAI;IACb;EAAC;IAAAxD,GAAA;IAAAC,KAAA,EACD,SAAAkH,OAAOkV,KAAK,EAAED,MAAM,EAAE;MACpB,IAAI,CAACxY,QAAQ,CAAChC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC3B,IAAI,CAACoxC,OAAO,CAAC32B,KAAK,EAAED,MAAM,CAAC;MAC7B,CAAC,MAAM;QACL,IAAI,CAAC62B,iBAAiB,GAAG;UAAC52B,KAAK,EAALA,KAAK;UAAED,MAAM,EAANA;QAAM,CAAC;MAC1C;IACF;EAAC;IAAApc,GAAA;IAAAC,KAAA,EACD,SAAA+yC,QAAQ32B,KAAK,EAAED,MAAM,EAAE;MACrB,IAAMjb,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAM2oB,MAAM,GAAG7vB,EAAE,CAAC6vB,MAAM;MACxB,IAAMxN,WAAW,GAAGnb,OAAO,CAACuqC,mBAAmB,IAAIzxC,EAAE,CAACqiB,WAAW;MACjE,IAAM0vB,OAAO,GAAG/xC,EAAE,CAACuwC,QAAQ,CAACp6C,cAAc,CAAC05B,MAAM,EAAE3U,KAAK,EAAED,MAAM,EAAEoH,WAAW,CAAC;MAC9E,IAAM2vB,QAAQ,GAAG9qC,OAAO,CAACisB,gBAAgB,IAAInzB,EAAE,CAACuwC,QAAQ,CAACrgB,mBAAmB,EAAE;MAC9ElwB,EAAE,CAACkb,KAAK,GAAG62B,OAAO,CAAC72B,KAAK;MACxBlb,EAAE,CAACib,MAAM,GAAG82B,OAAO,CAAC92B,MAAM;MAC1Bjb,EAAE,CAAC0wC,YAAY,GAAG1wC,EAAE,CAACqiB,WAAW;MAChC,IAAI,CAACpoB,WAAW,CAAC+F,EAAE,EAAEgyC,QAAQ,EAAE,IAAI,CAAC,EAAE;QACpC;MACF;MACAhyC,EAAE,CAACy+B,aAAa,CAAC,QAAQ,EAAE;QAAC92B,IAAI,EAAEoqC;MAAO,CAAC,CAAC;MAC3C56C,QAAQ,CAAC+P,OAAO,CAAC+qC,QAAQ,EAAE,CAACjyC,EAAE,EAAE+xC,OAAO,CAAC,EAAE/xC,EAAE,CAAC;MAC7C,IAAIA,EAAE,CAACkxC,QAAQ,EAAE;QACf,IAAIlxC,EAAE,CAACmxC,SAAS,EAAE,EAAE;UAClBnxC,EAAE,CAACkyC,MAAM,EAAE;QACb;MACF;IACF;EAAC;IAAArzC,GAAA;IAAAC,KAAA,EACD,SAAAqzC,oBAAA,EAAsB;MACpB,IAAMjrC,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAMkrC,aAAa,GAAGlrC,OAAO,CAACuF,MAAM,IAAI,CAAC,CAAC;MAC1CxW,IAAI,CAACm8C,aAAa,EAAE,UAACC,WAAW,EAAEvM,MAAM,EAAK;QAC3CuM,WAAW,CAAC/nC,EAAE,GAAGw7B,MAAM;MACzB,CAAC,CAAC;IACJ;EAAC;IAAAjnC,GAAA;IAAAC,KAAA,EACD,SAAAwzC,oBAAA,EAAsB;MACpB,IAAMtyC,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMqrC,SAAS,GAAGrrC,OAAO,CAACuF,MAAM;MAChC,IAAMA,MAAM,GAAGzM,EAAE,CAACyM,MAAM;MACxB,IAAM+lC,OAAO,GAAGjtC,MAAM,CAACC,IAAI,CAACiH,MAAM,CAAC,CAACzK,MAAM,CAAC,UAACgY,GAAG,EAAE1P,EAAE,EAAK;QACtD0P,GAAG,CAAC1P,EAAE,CAAC,GAAG,KAAK;QACf,OAAO0P,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;MACN,IAAItZ,KAAK,GAAG,EAAE;MACd,IAAI6xC,SAAS,EAAE;QACb7xC,KAAK,GAAGA,KAAK,CAAC2J,MAAM,CAClB9E,MAAM,CAACC,IAAI,CAAC+sC,SAAS,CAAC,CAAC9vB,GAAG,CAAC,UAACnY,EAAE,EAAK;UACjC,IAAM4hC,YAAY,GAAGqG,SAAS,CAACjoC,EAAE,CAAC;UAClC,IAAM6B,IAAI,GAAG8/B,aAAa,CAAC3hC,EAAE,EAAE4hC,YAAY,CAAC;UAC5C,IAAMuG,QAAQ,GAAGtmC,IAAI,KAAK,GAAG;UAC7B,IAAMoO,YAAY,GAAGpO,IAAI,KAAK,GAAG;UACjC,OAAO;YACLjF,OAAO,EAAEglC,YAAY;YACrBwG,SAAS,EAAED,QAAQ,GAAG,WAAW,GAAGl4B,YAAY,GAAG,QAAQ,GAAG,MAAM;YACpEo4B,KAAK,EAAEF,QAAQ,GAAG,cAAc,GAAGl4B,YAAY,GAAG,UAAU,GAAG;UACjE,CAAC;QACH,CAAC,CAAC,CACH;MACH;MACAtkB,IAAI,CAACyK,KAAK,EAAE,UAACE,IAAI,EAAK;QACpB,IAAMsrC,YAAY,GAAGtrC,IAAI,CAACsG,OAAO;QACjC,IAAMoD,EAAE,GAAG4hC,YAAY,CAAC5hC,EAAE;QAC1B,IAAM6B,IAAI,GAAG8/B,aAAa,CAAC3hC,EAAE,EAAE4hC,YAAY,CAAC;QAC5C,IAAM0G,SAAS,GAAG3/C,cAAc,CAACi5C,YAAY,CAAC/sC,IAAI,EAAEyB,IAAI,CAAC+xC,KAAK,CAAC;QAC/D,IAAIzG,YAAY,CAACpiB,QAAQ,KAAKnrB,SAAS,IAAI2wC,oBAAoB,CAACpD,YAAY,CAACpiB,QAAQ,EAAE3d,IAAI,CAAC,KAAKmjC,oBAAoB,CAAC1uC,IAAI,CAAC8xC,SAAS,CAAC,EAAE;UACrIxG,YAAY,CAACpiB,QAAQ,GAAGlpB,IAAI,CAAC8xC,SAAS;QACxC;QACAF,OAAO,CAACloC,EAAE,CAAC,GAAG,IAAI;QAClB,IAAItC,KAAK,GAAG,IAAI;QAChB,IAAIsC,EAAE,IAAImC,MAAM,IAAIA,MAAM,CAACnC,EAAE,CAAC,CAACnL,IAAI,KAAKyzC,SAAS,EAAE;UACjD5qC,KAAK,GAAGyE,MAAM,CAACnC,EAAE,CAAC;QACpB,CAAC,MAAM;UACL,IAAMuoC,UAAU,GAAG7I,QAAQ,CAACnB,QAAQ,CAAC+J,SAAS,CAAC;UAC/C5qC,KAAK,GAAG,IAAI6qC,UAAU,CAAC;YACrBvoC,EAAE,EAAFA,EAAE;YACFnL,IAAI,EAAEyzC,SAAS;YACf9kC,GAAG,EAAE9N,EAAE,CAAC8N,GAAG;YACX9O,KAAK,EAAEgB;UACT,CAAC,CAAC;UACFyM,MAAM,CAACzE,KAAK,CAACsC,EAAE,CAAC,GAAGtC,KAAK;QAC1B;QACAA,KAAK,CAACq0B,IAAI,CAAC6P,YAAY,EAAEhlC,OAAO,CAAC;MACnC,CAAC,CAAC;MACFjR,IAAI,CAACu8C,OAAO,EAAE,UAACM,UAAU,EAAExoC,EAAE,EAAK;QAChC,IAAI,CAACwoC,UAAU,EAAE;UACf,OAAOrmC,MAAM,CAACnC,EAAE,CAAC;QACnB;MACF,CAAC,CAAC;MACFrU,IAAI,CAACwW,MAAM,EAAE,UAACzE,KAAK,EAAK;QACtBukB,OAAO,CAAC9lB,SAAS,CAACzG,EAAE,EAAEgI,KAAK,EAAEA,KAAK,CAACd,OAAO,CAAC;QAC3CqlB,OAAO,CAAC2C,MAAM,CAAClvB,EAAE,EAAEgI,KAAK,CAAC;MAC3B,CAAC,CAAC;IACJ;EAAC;IAAAnJ,GAAA;IAAAC,KAAA,EACD,SAAAi0C,gBAAA,EAAkB;MAChB,IAAM/yC,EAAE,GAAG,IAAI;MACf,IAAMgJ,QAAQ,GAAGhJ,EAAE,CAAC2wC,SAAS;MAC7B,IAAMx6B,OAAO,GAAGnW,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM;MACvC,IAAM6V,OAAO,GAAGlN,QAAQ,CAAC3I,MAAM;MAC/B2I,QAAQ,CAACqO,IAAI,CAAC,UAACjlB,CAAC,EAAEQ,CAAC;QAAA,OAAKR,CAAC,CAAC+W,KAAK,GAAGvW,CAAC,CAACuW,KAAK;MAAA,EAAC;MAC1C,IAAI+M,OAAO,GAAGC,OAAO,EAAE;QACrB,KAAK,IAAIzjB,CAAC,GAAGyjB,OAAO,EAAEzjB,CAAC,GAAGwjB,OAAO,EAAE,EAAExjB,CAAC,EAAE;UACtCsN,EAAE,CAACgzC,mBAAmB,CAACtgD,CAAC,CAAC;QAC3B;QACAsW,QAAQ,CAAC0N,MAAM,CAACP,OAAO,EAAED,OAAO,GAAGC,OAAO,CAAC;MAC7C;MACAnW,EAAE,CAAC+wC,eAAe,GAAG/nC,QAAQ,CAACwa,KAAK,CAAC,CAAC,CAAC,CAACnM,IAAI,CAACk4B,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC9E;EAAC;IAAA1wC,GAAA;IAAAC,KAAA,EACD,SAAAm0C,4BAAA,EAA8B;MAC5B,IAAMjzC,EAAE,GAAG,IAAI;MACf,IAAkBgJ,QAAQ,GAAsBhJ,EAAE,CAA3C2wC,SAAS;QAAmB5gC,QAAQ,GAAK/P,EAAE,CAAtB4J,IAAI,CAAGmG,QAAQ;MAC3C,IAAI/G,QAAQ,CAAC3I,MAAM,GAAG0P,QAAQ,CAAC1P,MAAM,EAAE;QACrC,OAAOL,EAAE,CAACgM,OAAO;MACnB;MACAhD,QAAQ,CAACxJ,OAAO,CAAC,UAACwK,IAAI,EAAEb,KAAK,EAAK;QAChC,IAAI4G,QAAQ,CAACrD,MAAM,CAAC,UAAAlX,CAAC;UAAA,OAAIA,CAAC,KAAKwU,IAAI,CAAC8Z,QAAQ;QAAA,EAAC,CAACzjB,MAAM,KAAK,CAAC,EAAE;UAC1DL,EAAE,CAACgzC,mBAAmB,CAAC7pC,KAAK,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAo0C,yBAAA,EAA2B;MACzB,IAAMlzC,EAAE,GAAG,IAAI;MACf,IAAMmzC,cAAc,GAAG,EAAE;MACzB,IAAMpjC,QAAQ,GAAG/P,EAAE,CAAC4J,IAAI,CAACmG,QAAQ;MACjC,IAAIrd,CAAC,EAAEwW,IAAI;MACXlJ,EAAE,CAACizC,2BAA2B,EAAE;MAChC,KAAKvgD,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG6G,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QACjD,IAAMqa,OAAO,GAAGgD,QAAQ,CAACrd,CAAC,CAAC;QAC3B,IAAIsX,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACtd,CAAC,CAAC;QAC/B,IAAMyM,IAAI,GAAG4N,OAAO,CAAC5N,IAAI,IAAIa,EAAE,CAACsG,MAAM,CAACnH,IAAI;QAC3C,IAAI6K,IAAI,CAAC7K,IAAI,IAAI6K,IAAI,CAAC7K,IAAI,KAAKA,IAAI,EAAE;UACnCa,EAAE,CAACgzC,mBAAmB,CAACtgD,CAAC,CAAC;UACzBsX,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACtd,CAAC,CAAC;QAC7B;QACAsX,IAAI,CAAC7K,IAAI,GAAGA,IAAI;QAChB6K,IAAI,CAACwF,SAAS,GAAGzC,OAAO,CAACyC,SAAS,IAAIm8B,YAAY,CAACxsC,IAAI,EAAEa,EAAE,CAACkH,OAAO,CAAC;QACpE8C,IAAI,CAACopC,KAAK,GAAGrmC,OAAO,CAACqmC,KAAK,IAAI,CAAC;QAC/BppC,IAAI,CAACb,KAAK,GAAGzW,CAAC;QACdsX,IAAI,CAACuJ,KAAK,GAAG,EAAE,GAAGxG,OAAO,CAACwG,KAAK;QAC/BvJ,IAAI,CAAC7D,OAAO,GAAGnG,EAAE,CAACmgB,gBAAgB,CAACztB,CAAC,CAAC;QACrC,IAAIsX,IAAI,CAAC6B,UAAU,EAAE;UACnB7B,IAAI,CAAC6B,UAAU,CAACkD,WAAW,CAACrc,CAAC,CAAC;UAC9BsX,IAAI,CAAC6B,UAAU,CAAC+C,UAAU,EAAE;QAC9B,CAAC,MAAM;UACL,IAAMykC,eAAe,GAAGrJ,QAAQ,CAACtB,aAAa,CAACvpC,IAAI,CAAC;UACpD,IAAAm0C,qBAAA,GAA8CvgD,QAAQ,CAACgd,QAAQ,CAAC5Q,IAAI,CAAC;YAA9DoR,kBAAkB,GAAA+iC,qBAAA,CAAlB/iC,kBAAkB;YAAE4D,eAAe,GAAAm/B,qBAAA,CAAfn/B,eAAe;UAC1C5O,MAAM,CAACqC,MAAM,CAACyrC,eAAe,CAACr8B,SAAS,EAAE;YACvC7C,eAAe,EAAE61B,QAAQ,CAACrB,UAAU,CAACx0B,eAAe,CAAC;YACrD5D,kBAAkB,EAAEA,kBAAkB,IAAIy5B,QAAQ,CAACrB,UAAU,CAACp4B,kBAAkB;UAClF,CAAC,CAAC;UACFvG,IAAI,CAAC6B,UAAU,GAAG,IAAIwnC,eAAe,CAACrzC,EAAE,EAAEtN,CAAC,CAAC;UAC5CygD,cAAc,CAACzxC,IAAI,CAACsI,IAAI,CAAC6B,UAAU,CAAC;QACtC;MACF;MACA7L,EAAE,CAAC+yC,eAAe,EAAE;MACpB,OAAOI,cAAc;IACvB;EAAC;IAAAt0C,GAAA;IAAAC,KAAA,EACD,SAAAy0C,eAAA,EAAiB;MACf,IAAMvzC,EAAE,GAAG,IAAI;MACf/J,IAAI,CAAC+J,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,EAAE,UAAChD,OAAO,EAAEtD,YAAY,EAAK;QAChDzJ,EAAE,CAACgQ,cAAc,CAACvG,YAAY,CAAC,CAACoC,UAAU,CAACsE,KAAK,EAAE;MACpD,CAAC,EAAEnQ,EAAE,CAAC;IACR;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAqR,MAAA,EAAQ;MACN,IAAI,CAACojC,cAAc,EAAE;MACrB,IAAI,CAAC9U,aAAa,CAAC,OAAO,CAAC;IAC7B;EAAC;IAAA5/B,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAO8E,IAAI,EAAE;MACX,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMsG,MAAM,GAAGtG,EAAE,CAACsG,MAAM;MACxBA,MAAM,CAAC5B,MAAM,EAAE;MACf1E,EAAE,CAACywC,QAAQ,GAAGnqC,MAAM,CAAC2K,cAAc,CAAC3K,MAAM,CAAC4nC,iBAAiB,EAAE,EAAEluC,EAAE,CAACkR,UAAU,EAAE,CAAC;MAChFjb,IAAI,CAAC+J,EAAE,CAACyM,MAAM,EAAE,UAACzE,KAAK,EAAK;QACzBukB,OAAO,CAAC6C,SAAS,CAACpvB,EAAE,EAAEgI,KAAK,CAAC;MAC9B,CAAC,CAAC;MACF,IAAMwrC,aAAa,GAAGxzC,EAAE,CAACoV,mBAAmB,GAAG,CAACpV,EAAE,CAACkH,OAAO,CAACzB,SAAS;MACpEzF,EAAE,CAACmyC,mBAAmB,EAAE;MACxBnyC,EAAE,CAACsyC,mBAAmB,EAAE;MACxB,IAAMmB,cAAc,GAAG,IAAIvG,GAAG,CAAC3nC,MAAM,CAACC,IAAI,CAACxF,EAAE,CAAC6wC,UAAU,CAAC,CAAC;MAC1D,IAAM6C,SAAS,GAAG,IAAIxG,GAAG,CAACltC,EAAE,CAACkH,OAAO,CAACysC,MAAM,CAAC;MAC5C,IAAI,CAACt5C,SAAS,CAACo5C,cAAc,EAAEC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC5C,oBAAoB,KAAK9wC,EAAE,CAACkH,OAAO,CAACwqC,UAAU,EAAE;QAClG1xC,EAAE,CAAC4zC,YAAY,EAAE;QACjB5zC,EAAE,CAAC2xC,UAAU,EAAE;MACjB;MACA3xC,EAAE,CAACgxC,QAAQ,CAACnG,UAAU,EAAE;MACxB,IAAI7qC,EAAE,CAACy+B,aAAa,CAAC,cAAc,EAAE;QAACj1B,IAAI,EAAJA,IAAI;QAAEohC,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QACxE;MACF;MACA,IAAMuI,cAAc,GAAGnzC,EAAE,CAACkzC,wBAAwB,EAAE;MACpDlzC,EAAE,CAACy+B,aAAa,CAAC,sBAAsB,CAAC;MACxC,IAAInP,UAAU,GAAG,CAAC;MAClB,KAAK,IAAI58B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlJ,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAExW,CAAC,EAAE,EAAE;QAC7D,IAAAmhD,kBAAA,GAAqB7zC,EAAE,CAACgQ,cAAc,CAACtd,CAAC,CAAC;UAAlCmZ,UAAU,GAAAgoC,kBAAA,CAAVhoC,UAAU;QACjB,IAAMsE,KAAK,GAAG,CAACqjC,aAAa,IAAIL,cAAc,CAAC33B,OAAO,CAAC3P,UAAU,CAAC,KAAK,CAAC,CAAC;QACzEA,UAAU,CAAC2E,qBAAqB,CAACL,KAAK,CAAC;QACvCmf,UAAU,GAAG1vB,IAAI,CAACuC,GAAG,CAAC,CAAC0J,UAAU,CAACwH,cAAc,EAAE,EAAEic,UAAU,CAAC;MACjE;MACAtvB,EAAE,CAAC4qB,WAAW,GAAG0E,UAAU;MAC3BtvB,EAAE,CAAC8zC,aAAa,CAACxkB,UAAU,CAAC;MAC5B,IAAI,CAACkkB,aAAa,EAAE;QAClBv9C,IAAI,CAACk9C,cAAc,EAAE,UAACtnC,UAAU,EAAK;UACnCA,UAAU,CAACsE,KAAK,EAAE;QACpB,CAAC,CAAC;MACJ;MACAnQ,EAAE,CAAC+zC,eAAe,CAACvqC,IAAI,CAAC;MACxBxJ,EAAE,CAACy+B,aAAa,CAAC,aAAa,EAAE;QAACj1B,IAAI,EAAJA;MAAI,CAAC,CAAC;MACvCxJ,EAAE,CAACmvB,OAAO,CAAC9X,IAAI,CAACk4B,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;MAC3C,IAAIvvC,EAAE,CAAC4wC,UAAU,EAAE;QACjB5wC,EAAE,CAACg0C,aAAa,CAACh0C,EAAE,CAAC4wC,UAAU,EAAE,IAAI,CAAC;MACvC;MACA5wC,EAAE,CAACkyC,MAAM,EAAE;IACb;EAAC;IAAArzC,GAAA;IAAAC,KAAA,EACD,SAAAg1C,cAAcxkB,UAAU,EAAE;MACxB,IAAMtvB,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACy+B,aAAa,CAAC,cAAc,EAAE;QAACmM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAClE;MACF;MACAre,OAAO,CAAC7nB,MAAM,CAAC1E,EAAE,EAAEA,EAAE,CAACkb,KAAK,EAAElb,EAAE,CAACib,MAAM,EAAEqU,UAAU,CAAC;MACnD,IAAM1b,IAAI,GAAG5T,EAAE,CAAC6T,SAAS;MACzB,IAAMogC,MAAM,GAAGrgC,IAAI,CAACsH,KAAK,IAAI,CAAC,IAAItH,IAAI,CAACqH,MAAM,IAAI,CAAC;MAClDjb,EAAE,CAACmvB,OAAO,GAAG,EAAE;MACfl5B,IAAI,CAAC+J,EAAE,CAACosB,KAAK,EAAE,UAACL,GAAG,EAAK;QAAA,IAAAmoB,WAAA;QACtB,IAAID,MAAM,IAAIloB,GAAG,CAACjC,QAAQ,KAAK,WAAW,EAAE;UAC1C;QACF;QACA,IAAIiC,GAAG,CAACtlB,SAAS,EAAE;UACjBslB,GAAG,CAACtlB,SAAS,EAAE;QACjB;QACA,CAAAytC,WAAA,GAAAl0C,EAAE,CAACmvB,OAAO,EAACztB,IAAI,CAAAG,KAAA,CAAAqyC,WAAA,EAAApyC,kBAAA,CAAIiqB,GAAG,CAACoD,OAAO,EAAE,EAAC;MACnC,CAAC,EAAEnvB,EAAE,CAAC;MACNA,EAAE,CAACmvB,OAAO,CAAC3vB,OAAO,CAAC,UAACoB,IAAI,EAAEuI,KAAK,EAAK;QAClCvI,IAAI,CAACuzC,IAAI,GAAGhrC,KAAK;MACnB,CAAC,CAAC;MACFnJ,EAAE,CAACy+B,aAAa,CAAC,aAAa,CAAC;IACjC;EAAC;IAAA5/B,GAAA;IAAAC,KAAA,EACD,SAAAi1C,gBAAgBvqC,IAAI,EAAE;MACpB,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAM7G,UAAU,GAAG,OAAOqQ,IAAI,KAAK,UAAU;MAC7C,IAAIxJ,EAAE,CAACy+B,aAAa,CAAC,sBAAsB,EAAE;QAACj1B,IAAI,EAAJA,IAAI;QAAEohC,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAChF;MACF;MACA,KAAK,IAAIl4C,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlJ,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC7DsN,EAAE,CAACo0C,cAAc,CAAC1hD,CAAC,EAAEyG,UAAU,GAAGqQ,IAAI,CAAC;UAACC,YAAY,EAAE/W;QAAC,CAAC,CAAC,GAAG8W,IAAI,CAAC;MACnE;MACAxJ,EAAE,CAACy+B,aAAa,CAAC,qBAAqB,EAAE;QAACj1B,IAAI,EAAJA;MAAI,CAAC,CAAC;IACjD;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAs1C,eAAejrC,KAAK,EAAEK,IAAI,EAAE;MAC1B,IAAMxJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAAC7G,KAAK,CAAC;MACrC,IAAM4qB,IAAI,GAAG;QAAC/pB,IAAI,EAAJA,IAAI;QAAEb,KAAK,EAALA,KAAK;QAAEK,IAAI,EAAJA,IAAI;QAAEohC,UAAU,EAAE;MAAI,CAAC;MAClD,IAAI5qC,EAAE,CAACy+B,aAAa,CAAC,qBAAqB,EAAE1K,IAAI,CAAC,KAAK,KAAK,EAAE;QAC3D;MACF;MACA/pB,IAAI,CAAC6B,UAAU,CAAC1L,OAAO,CAACqJ,IAAI,CAAC;MAC7BuqB,IAAI,CAAC6W,UAAU,GAAG,KAAK;MACvB5qC,EAAE,CAACy+B,aAAa,CAAC,oBAAoB,EAAE1K,IAAI,CAAC;IAC9C;EAAC;IAAAl1B,GAAA;IAAAC,KAAA,EACD,SAAAozC,OAAA,EAAS;MACP,IAAMlyC,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACy+B,aAAa,CAAC,cAAc,EAAE;QAACmM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAClE;MACF;MACA,IAAInoC,QAAQ,CAACV,GAAG,CAAC/B,EAAE,CAAC,EAAE;QACpB,IAAIA,EAAE,CAACkxC,QAAQ,IAAI,CAACzuC,QAAQ,CAAChC,OAAO,CAACT,EAAE,CAAC,EAAE;UACxCyC,QAAQ,CAAC3C,KAAK,CAACE,EAAE,CAAC;QACpB;MACF,CAAC,MAAM;QACLA,EAAE,CAACW,IAAI,EAAE;QACT+uC,oBAAoB,CAAC;UAAC1wC,KAAK,EAAEgB;QAAE,CAAC,CAAC;MACnC;IACF;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAItN,CAAC;MACL,IAAIsN,EAAE,CAAC8xC,iBAAiB,EAAE;QACxB,IAAAuC,qBAAA,GAAwBr0C,EAAE,CAAC8xC,iBAAiB;UAArC52B,KAAK,GAAAm5B,qBAAA,CAALn5B,KAAK;UAAED,MAAM,GAAAo5B,qBAAA,CAANp5B,MAAM;QACpBjb,EAAE,CAAC6xC,OAAO,CAAC32B,KAAK,EAAED,MAAM,CAAC;QACzBjb,EAAE,CAAC8xC,iBAAiB,GAAG,IAAI;MAC7B;MACA9xC,EAAE,CAAC2tC,KAAK,EAAE;MACV,IAAI3tC,EAAE,CAACkb,KAAK,IAAI,CAAC,IAAIlb,EAAE,CAACib,MAAM,IAAI,CAAC,EAAE;QACnC;MACF;MACA,IAAIjb,EAAE,CAACy+B,aAAa,CAAC,YAAY,EAAE;QAACmM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QAChE;MACF;MACA,IAAM0J,MAAM,GAAGt0C,EAAE,CAACmvB,OAAO;MACzB,KAAKz8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4hD,MAAM,CAACj0C,MAAM,IAAIi0C,MAAM,CAAC5hD,CAAC,CAAC,CAACkD,CAAC,IAAI,CAAC,EAAE,EAAElD,CAAC,EAAE;QACtD4hD,MAAM,CAAC5hD,CAAC,CAAC,CAACiO,IAAI,CAACX,EAAE,CAAC6T,SAAS,CAAC;MAC9B;MACA7T,EAAE,CAACu0C,aAAa,EAAE;MAClB,OAAO7hD,CAAC,GAAG4hD,MAAM,CAACj0C,MAAM,EAAE,EAAE3N,CAAC,EAAE;QAC7B4hD,MAAM,CAAC5hD,CAAC,CAAC,CAACiO,IAAI,CAACX,EAAE,CAAC6T,SAAS,CAAC;MAC9B;MACA7T,EAAE,CAACy+B,aAAa,CAAC,WAAW,CAAC;IAC/B;EAAC;IAAA5/B,GAAA;IAAAC,KAAA,EACD,SAAAmK,uBAAuBF,aAAa,EAAE;MACpC,IAAM/I,EAAE,GAAG,IAAI;MACf,IAAMgJ,QAAQ,GAAGhJ,EAAE,CAAC+wC,eAAe;MACnC,IAAMhY,MAAM,GAAG,EAAE;MACjB,IAAIrmC,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGF,QAAQ,CAAC3I,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACjD,IAAMsX,IAAI,GAAGhB,QAAQ,CAACtW,CAAC,CAAC;QACxB,IAAI,CAACqW,aAAa,IAAIiB,IAAI,CAAC7D,OAAO,EAAE;UAClC4yB,MAAM,CAACr3B,IAAI,CAACsI,IAAI,CAAC;QACnB;MACF;MACA,OAAO+uB,MAAM;IACf;EAAC;IAAAl6B,GAAA;IAAAC,KAAA,EACD,SAAAqqB,6BAAA,EAA+B;MAC7B,OAAO,IAAI,CAAClgB,sBAAsB,CAAC,IAAI,CAAC;IAC1C;EAAC;IAAApK,GAAA;IAAAC,KAAA,EACD,SAAAy1C,cAAA,EAAgB;MACd,IAAMv0C,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACy+B,aAAa,CAAC,oBAAoB,EAAE;QAACmM,UAAU,EAAE;MAAI,CAAC,CAAC,KAAK,KAAK,EAAE;QACxE;MACF;MACA,IAAM5hC,QAAQ,GAAGhJ,EAAE,CAACmpB,4BAA4B,EAAE;MAClD,KAAK,IAAIz2B,CAAC,GAAGsW,QAAQ,CAAC3I,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;QAC7CsN,EAAE,CAACw0C,YAAY,CAACxrC,QAAQ,CAACtW,CAAC,CAAC,CAAC;MAC9B;MACAsN,EAAE,CAACy+B,aAAa,CAAC,mBAAmB,CAAC;IACvC;EAAC;IAAA5/B,GAAA;IAAAC,KAAA,EACD,SAAA01C,aAAaxqC,IAAI,EAAE;MACjB,IAAMhK,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM4F,IAAI,GAAG1J,IAAI,CAACyJ,KAAK;MACvB,IAAMghC,OAAO,GAAG,CAAC/gC,IAAI,CAAC7K,QAAQ;MAC9B,IAAM+K,IAAI,GAAG5T,EAAE,CAAC6T,SAAS;MACzB,IAAMkgB,IAAI,GAAG;QACX/pB,IAAI,EAAJA,IAAI;QACJb,KAAK,EAAEa,IAAI,CAACb,KAAK;QACjByhC,UAAU,EAAE;MACd,CAAC;MACD,IAAI5qC,EAAE,CAACy+B,aAAa,CAAC,mBAAmB,EAAE1K,IAAI,CAAC,KAAK,KAAK,EAAE;QACzD;MACF;MACA,IAAI0gB,OAAO,EAAE;QACX18C,QAAQ,CAAC+V,GAAG,EAAE;UACZnF,IAAI,EAAE+K,IAAI,CAAC/K,IAAI,KAAK,KAAK,GAAG,CAAC,GAAGiL,IAAI,CAACjL,IAAI,GAAG+K,IAAI,CAAC/K,IAAI;UACrDF,KAAK,EAAEiL,IAAI,CAACjL,KAAK,KAAK,KAAK,GAAGzI,EAAE,CAACkb,KAAK,GAAGtH,IAAI,CAACnL,KAAK,GAAGiL,IAAI,CAACjL,KAAK;UAChED,GAAG,EAAEkL,IAAI,CAAClL,GAAG,KAAK,KAAK,GAAG,CAAC,GAAGoL,IAAI,CAACpL,GAAG,GAAGkL,IAAI,CAAClL,GAAG;UACjDE,MAAM,EAAEgL,IAAI,CAAChL,MAAM,KAAK,KAAK,GAAG1I,EAAE,CAACib,MAAM,GAAGrH,IAAI,CAAClL,MAAM,GAAGgL,IAAI,CAAChL;QACjE,CAAC,CAAC;MACJ;MACAsB,IAAI,CAAC6B,UAAU,CAAClL,IAAI,EAAE;MACtB,IAAI8zC,OAAO,EAAE;QACXt8C,UAAU,CAAC2V,GAAG,CAAC;MACjB;MACAimB,IAAI,CAAC6W,UAAU,GAAG,KAAK;MACvB5qC,EAAE,CAACy+B,aAAa,CAAC,kBAAkB,EAAE1K,IAAI,CAAC;IAC5C;EAAC;IAAAl1B,GAAA;IAAAC,KAAA,EACD,SAAA41C,0BAA0BpiD,CAAC,EAAEkX,IAAI,EAAEtC,OAAO,EAAEyjB,gBAAgB,EAAE;MAC5D,IAAMxlB,MAAM,GAAGomB,WAAW,CAACC,KAAK,CAAChiB,IAAI,CAAC;MACtC,IAAI,OAAOrE,MAAM,KAAK,UAAU,EAAE;QAChC,OAAOA,MAAM,CAAC,IAAI,EAAE7S,CAAC,EAAE4U,OAAO,EAAEyjB,gBAAgB,CAAC;MACnD;MACA,OAAO,EAAE;IACX;EAAC;IAAA9rB,GAAA;IAAAC,KAAA,EACD,SAAAkR,eAAevG,YAAY,EAAE;MAC3B,IAAMzJ,EAAE,GAAG,IAAI;MACf,IAAM+M,OAAO,GAAG/M,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC;MAC9C,IAAMT,QAAQ,GAAGhJ,EAAE,CAAC2wC,SAAS;MAC7B,IAAI3mC,IAAI,GAAGhB,QAAQ,CAAC0D,MAAM,CAAC,UAAAlX,CAAC;QAAA,OAAIA,CAAC,IAAIA,CAAC,CAACsuB,QAAQ,KAAK/W,OAAO;MAAA,EAAC,CAAC/L,GAAG,EAAE;MAClE,IAAI,CAACgJ,IAAI,EAAE;QACTA,IAAI,GAAG;UACL7K,IAAI,EAAE,IAAI;UACVyK,IAAI,EAAE,EAAE;UACRmD,OAAO,EAAE,IAAI;UACblB,UAAU,EAAE,IAAI;UAChBoX,MAAM,EAAE,IAAI;UACZ9T,OAAO,EAAE,IAAI;UACbE,OAAO,EAAE,IAAI;UACb+jC,KAAK,EAAErmC,OAAO,IAAIA,OAAO,CAACqmC,KAAK,IAAI,CAAC;UACpCjqC,KAAK,EAAEM,YAAY;UACnBqa,QAAQ,EAAE/W,OAAO;UACjBM,OAAO,EAAE,EAAE;UACXkE,OAAO,EAAE;QACX,CAAC;QACDvI,QAAQ,CAACtH,IAAI,CAACsI,IAAI,CAAC;MACrB;MACA,OAAOA,IAAI;IACb;EAAC;IAAAnL,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAA,EAAa;MACX,OAAO,IAAI,CAACzC,QAAQ,KAAK,IAAI,CAACA,QAAQ,GAAG;QAACzP,KAAK,EAAE,IAAI;QAAEG,IAAI,EAAE;MAAO,CAAC,CAAC;IACxE;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAqnB,uBAAA,EAAyB;MACvB,OAAO,IAAI,CAACgD,4BAA4B,EAAE,CAAC9oB,MAAM;IACnD;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAqhB,iBAAiB1W,YAAY,EAAE;MAC7B,IAAMsD,OAAO,GAAG,IAAI,CAACnD,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC;MAChD,IAAI,CAACsD,OAAO,EAAE;QACZ,OAAO,KAAK;MACd;MACA,IAAM/C,IAAI,GAAG,IAAI,CAACgG,cAAc,CAACvG,YAAY,CAAC;MAC9C,OAAO,OAAOO,IAAI,CAACiZ,MAAM,KAAK,SAAS,GAAG,CAACjZ,IAAI,CAACiZ,MAAM,GAAG,CAAClW,OAAO,CAACkW,MAAM;IAC1E;EAAC;IAAApkB,GAAA;IAAAC,KAAA,EACD,SAAA61C,qBAAqBlrC,YAAY,EAAEtD,OAAO,EAAE;MAC1C,IAAM6D,IAAI,GAAG,IAAI,CAACgG,cAAc,CAACvG,YAAY,CAAC;MAC9CO,IAAI,CAACiZ,MAAM,GAAG,CAAC9c,OAAO;IACxB;EAAC;IAAAtH,GAAA;IAAAC,KAAA,EACD,SAAAskB,qBAAqBja,KAAK,EAAE;MAC1B,IAAI,CAAC8nC,cAAc,CAAC9nC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC8nC,cAAc,CAAC9nC,KAAK,CAAC;IAC1D;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAAod,kBAAkB/S,KAAK,EAAE;MACvB,OAAO,CAAC,IAAI,CAAC8nC,cAAc,CAAC9nC,KAAK,CAAC;IACpC;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA81C,yBAAyBnrC,YAAY,EAAEtD,OAAO,EAAE;MAC9C,IAAMnG,EAAE,GAAG,IAAI;MACf,IAAMwJ,IAAI,GAAGrD,OAAO,GAAG,MAAM,GAAG,MAAM;MACtC,IAAM6D,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACvG,YAAY,CAAC;MAC5C,IAAMxK,KAAK,GAAG+K,IAAI,CAAC6B,UAAU,CAACgJ,kBAAkB,CAAClW,SAAS,EAAE6K,IAAI,CAAC;MACjExJ,EAAE,CAAC20C,oBAAoB,CAAClrC,YAAY,EAAEtD,OAAO,CAAC;MAC9ClH,KAAK,CAACyF,MAAM,CAACsF,IAAI,EAAE;QAAC7D,OAAO,EAAPA;MAAO,CAAC,CAAC;MAC7BnG,EAAE,CAAC0E,MAAM,CAAC,UAACoJ,GAAG;QAAA,OAAKA,GAAG,CAACrE,YAAY,KAAKA,YAAY,GAAGD,IAAI,GAAG7K,SAAS;MAAA,EAAC;IAC1E;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAsH,KAAKqD,YAAY,EAAE;MACjB,IAAI,CAACmrC,wBAAwB,CAACnrC,YAAY,EAAE,KAAK,CAAC;IACpD;EAAC;IAAA5K,GAAA;IAAAC,KAAA,EACD,SAAAmH,KAAKwD,YAAY,EAAE;MACjB,IAAI,CAACmrC,wBAAwB,CAACnrC,YAAY,EAAE,IAAI,CAAC;IACnD;EAAC;IAAA5K,GAAA;IAAAC,KAAA,EACD,SAAAk0C,oBAAoBvpC,YAAY,EAAE;MAChC,IAAMzJ,EAAE,GAAG,IAAI;MACf,IAAMgK,IAAI,GAAGhK,EAAE,CAAC2wC,SAAS,IAAI3wC,EAAE,CAAC2wC,SAAS,CAAClnC,YAAY,CAAC;MACvD,IAAIO,IAAI,IAAIA,IAAI,CAAC6B,UAAU,EAAE;QAC3B7B,IAAI,CAAC6B,UAAU,CAACuE,QAAQ,EAAE;QAC1B,OAAOpQ,EAAE,CAAC2wC,SAAS,CAAClnC,YAAY,CAAC;MACnC;IACF;EAAC;IAAA5K,GAAA;IAAAC,KAAA,EACD,SAAA+1C,QAAA,EAAU;MACR,IAAM70C,EAAE,GAAG,IAAI;MACf,IAAO6vB,MAAM,GAAS7vB,EAAE,CAAjB6vB,MAAM;QAAE/hB,GAAG,GAAI9N,EAAE,CAAT8N,GAAG;MAClB,IAAIpb,CAAC,EAAEwW,IAAI;MACXlJ,EAAE,CAACqC,IAAI,EAAE;MACTI,QAAQ,CAACF,MAAM,CAACvC,EAAE,CAAC;MACnB,KAAKtN,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGlJ,EAAE,CAAC4J,IAAI,CAACmG,QAAQ,CAAC1P,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACzDsN,EAAE,CAACgzC,mBAAmB,CAACtgD,CAAC,CAAC;MAC3B;MACAsN,EAAE,CAACsG,MAAM,CAAConC,UAAU,EAAE;MACtB,IAAI7d,MAAM,EAAE;QACV7vB,EAAE,CAAC4zC,YAAY,EAAE;QACjBz5C,WAAW,CAAC01B,MAAM,EAAE/hB,GAAG,CAAC;QACxB9N,EAAE,CAACuwC,QAAQ,CAACzgB,cAAc,CAAChiB,GAAG,CAAC;QAC/B9N,EAAE,CAAC6vB,MAAM,GAAG,IAAI;QAChB7vB,EAAE,CAAC8N,GAAG,GAAG,IAAI;MACf;MACA9N,EAAE,CAACy+B,aAAa,CAAC,SAAS,CAAC;MAC3B,OAAOwR,SAAS,CAACjwC,EAAE,CAACsK,EAAE,CAAC;IACzB;EAAC;IAAAzL,GAAA;IAAAC,KAAA,EACD,SAAAg2C,cAAA,EAAuB;MAAA,IAAAC,YAAA;MACrB,OAAO,CAAAA,YAAA,OAAI,CAACllB,MAAM,EAACmlB,SAAS,CAAAnzC,KAAA,CAAAkzC,YAAA,EAAA30C,SAAA,CAAS;IACvC;EAAC;IAAAvB,GAAA;IAAAC,KAAA,EACD,SAAA6yC,WAAA,EAAa;MACX,IAAI,CAACsD,cAAc,EAAE;MACrB,IAAI,IAAI,CAAC/tC,OAAO,CAACwqC,UAAU,EAAE;QAC3B,IAAI,CAACwD,oBAAoB,EAAE;MAC7B,CAAC,MAAM;QACL,IAAI,CAAChE,QAAQ,GAAG,IAAI;MACtB;IACF;EAAC;IAAAryC,GAAA;IAAAC,KAAA,EACD,SAAAm2C,eAAA,EAAiB;MACf,IAAMj1C,EAAE,GAAG,IAAI;MACf,IAAMX,SAAS,GAAGW,EAAE,CAAC6wC,UAAU;MAC/B,IAAMN,QAAQ,GAAGvwC,EAAE,CAACuwC,QAAQ;MAC5B,IAAM4E,IAAI,GAAG,SAAPA,IAAIA,CAAIh2C,IAAI,EAAE6wB,QAAQ,EAAK;QAC/BugB,QAAQ,CAACxgB,gBAAgB,CAAC/vB,EAAE,EAAEb,IAAI,EAAE6wB,QAAQ,CAAC;QAC7C3wB,SAAS,CAACF,IAAI,CAAC,GAAG6wB,QAAQ;MAC5B,CAAC;MACD,IAAMA,QAAQ,GAAG,SAAXA,QAAQA,CAAY19B,CAAC,EAAEkD,CAAC,EAAEE,CAAC,EAAE;QACjCpD,CAAC,CAACmsB,OAAO,GAAGjpB,CAAC;QACblD,CAAC,CAACosB,OAAO,GAAGhpB,CAAC;QACbsK,EAAE,CAACg0C,aAAa,CAAC1hD,CAAC,CAAC;MACrB,CAAC;MACD2D,IAAI,CAAC+J,EAAE,CAACkH,OAAO,CAACysC,MAAM,EAAE,UAACx0C,IAAI;QAAA,OAAKg2C,IAAI,CAACh2C,IAAI,EAAE6wB,QAAQ,CAAC;MAAA,EAAC;IACzD;EAAC;IAAAnxB,GAAA;IAAAC,KAAA,EACD,SAAAo2C,qBAAA,EAAuB;MACrB,IAAMl1C,EAAE,GAAG,IAAI;MACf,IAAI,CAACA,EAAE,CAAC8wC,oBAAoB,EAAE;QAC5B9wC,EAAE,CAAC8wC,oBAAoB,GAAG,CAAC,CAAC;MAC9B;MACA,IAAMzxC,SAAS,GAAGW,EAAE,CAAC8wC,oBAAoB;MACzC,IAAMP,QAAQ,GAAGvwC,EAAE,CAACuwC,QAAQ;MAC5B,IAAM4E,IAAI,GAAG,SAAPA,IAAIA,CAAIh2C,IAAI,EAAE6wB,QAAQ,EAAK;QAC/BugB,QAAQ,CAACxgB,gBAAgB,CAAC/vB,EAAE,EAAEb,IAAI,EAAE6wB,QAAQ,CAAC;QAC7C3wB,SAAS,CAACF,IAAI,CAAC,GAAG6wB,QAAQ;MAC5B,CAAC;MACD,IAAMolB,OAAO,GAAG,SAAVA,OAAOA,CAAIj2C,IAAI,EAAE6wB,QAAQ,EAAK;QAClC,IAAI3wB,SAAS,CAACF,IAAI,CAAC,EAAE;UACnBoxC,QAAQ,CAACtgB,mBAAmB,CAACjwB,EAAE,EAAEb,IAAI,EAAE6wB,QAAQ,CAAC;UAChD,OAAO3wB,SAAS,CAACF,IAAI,CAAC;QACxB;MACF,CAAC;MACD,IAAM6wB,QAAQ,GAAG,SAAXA,QAAQA,CAAI9U,KAAK,EAAED,MAAM,EAAK;QAClC,IAAIjb,EAAE,CAAC6vB,MAAM,EAAE;UACb7vB,EAAE,CAACgG,MAAM,CAACkV,KAAK,EAAED,MAAM,CAAC;QAC1B;MACF,CAAC;MACD,IAAIo6B,QAAQ;MACZ,IAAMnE,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;QACrBkE,OAAO,CAAC,QAAQ,EAAElE,QAAQ,CAAC;QAC3BlxC,EAAE,CAACkxC,QAAQ,GAAG,IAAI;QAClBlxC,EAAE,CAACgG,MAAM,EAAE;QACXmvC,IAAI,CAAC,QAAQ,EAAEnlB,QAAQ,CAAC;QACxBmlB,IAAI,CAAC,QAAQ,EAAEE,QAAQ,CAAC;MAC1B,CAAC;MACDA,QAAQ,GAAG,SAAAA,SAAA,EAAM;QACfr1C,EAAE,CAACkxC,QAAQ,GAAG,KAAK;QACnBkE,OAAO,CAAC,QAAQ,EAAEplB,QAAQ,CAAC;QAC3BmlB,IAAI,CAAC,QAAQ,EAAEjE,QAAQ,CAAC;MAC1B,CAAC;MACD,IAAIX,QAAQ,CAACpgB,UAAU,CAACnwB,EAAE,CAAC6vB,MAAM,CAAC,EAAE;QAClCqhB,QAAQ,EAAE;MACZ,CAAC,MAAM;QACLmE,QAAQ,EAAE;MACZ;IACF;EAAC;IAAAx2C,GAAA;IAAAC,KAAA,EACD,SAAA80C,aAAA,EAAe;MACb,IAAM5zC,EAAE,GAAG,IAAI;MACf/J,IAAI,CAAC+J,EAAE,CAAC6wC,UAAU,EAAE,UAAC7gB,QAAQ,EAAE7wB,IAAI,EAAK;QACtCa,EAAE,CAACuwC,QAAQ,CAACtgB,mBAAmB,CAACjwB,EAAE,EAAEb,IAAI,EAAE6wB,QAAQ,CAAC;MACrD,CAAC,CAAC;MACFhwB,EAAE,CAAC6wC,UAAU,GAAG,CAAC,CAAC;MAClB56C,IAAI,CAAC+J,EAAE,CAAC8wC,oBAAoB,EAAE,UAAC9gB,QAAQ,EAAE7wB,IAAI,EAAK;QAChDa,EAAE,CAACuwC,QAAQ,CAACtgB,mBAAmB,CAACjwB,EAAE,EAAEb,IAAI,EAAE6wB,QAAQ,CAAC;MACrD,CAAC,CAAC;MACFhwB,EAAE,CAAC8wC,oBAAoB,GAAGnyC,SAAS;IACrC;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAAw2C,iBAAiB50C,KAAK,EAAE8I,IAAI,EAAEuuB,OAAO,EAAE;MACrC,IAAMwd,MAAM,GAAGxd,OAAO,GAAG,KAAK,GAAG,QAAQ;MACzC,IAAI/tB,IAAI,EAAEpJ,IAAI,EAAElO,CAAC,EAAEwW,IAAI;MACvB,IAAIM,IAAI,KAAK,SAAS,EAAE;QACtBQ,IAAI,GAAG,IAAI,CAACgG,cAAc,CAACtP,KAAK,CAAC,CAAC,CAAC,CAAC+I,YAAY,CAAC;QACjDO,IAAI,CAAC6B,UAAU,CAAC,GAAG,GAAG0pC,MAAM,GAAG,mBAAmB,CAAC,EAAE;MACvD;MACA,KAAK7iD,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CkO,IAAI,GAAGF,KAAK,CAAChO,CAAC,CAAC;QACf,IAAMmZ,UAAU,GAAGjL,IAAI,IAAI,IAAI,CAACoP,cAAc,CAACpP,IAAI,CAAC6I,YAAY,CAAC,CAACoC,UAAU;QAC5E,IAAIA,UAAU,EAAE;UACdA,UAAU,CAAC0pC,MAAM,GAAG,YAAY,CAAC,CAAC30C,IAAI,CAACqM,OAAO,EAAErM,IAAI,CAAC6I,YAAY,EAAE7I,IAAI,CAACuI,KAAK,CAAC;QAChF;MACF;IACF;EAAC;IAAAtK,GAAA;IAAAC,KAAA,EACD,SAAA02C,kBAAA,EAAoB;MAClB,OAAO,IAAI,CAAC30C,OAAO,IAAI,EAAE;IAC3B;EAAC;IAAAhC,GAAA;IAAAC,KAAA,EACD,SAAA22C,kBAAkBC,cAAc,EAAE;MAChC,IAAM11C,EAAE,GAAG,IAAI;MACf,IAAM21C,UAAU,GAAG31C,EAAE,CAACa,OAAO,IAAI,EAAE;MACnC,IAAM4D,MAAM,GAAGixC,cAAc,CAACjzB,GAAG,CAAC,UAAAmzB,IAAA,EAA2B;QAAA,IAAzBnsC,YAAY,GAAAmsC,IAAA,CAAZnsC,YAAY;UAAEN,KAAK,GAAAysC,IAAA,CAALzsC,KAAK;QACrD,IAAMa,IAAI,GAAGhK,EAAE,CAACgQ,cAAc,CAACvG,YAAY,CAAC;QAC5C,IAAI,CAACO,IAAI,EAAE;UACT,MAAM,IAAIie,KAAK,CAAC,4BAA4B,GAAGxe,YAAY,CAAC;QAC9D;QACA,OAAO;UACLA,YAAY,EAAZA,YAAY;UACZwD,OAAO,EAAEjD,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;UACzBA,KAAK,EAALA;QACF,CAAC;MACH,CAAC,CAAC;MACF,IAAMwc,OAAO,GAAG,CAACprB,cAAc,CAACkK,MAAM,EAAEkxC,UAAU,CAAC;MACnD,IAAIhwB,OAAO,EAAE;QACX3lB,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnBzE,EAAE,CAAC61C,kBAAkB,CAACpxC,MAAM,EAAEkxC,UAAU,CAAC;MAC3C;IACF;EAAC;IAAA92C,GAAA;IAAAC,KAAA,EACD,SAAA2/B,cAAc6L,IAAI,EAAEvW,IAAI,EAAErnB,MAAM,EAAE;MAChC,OAAO,IAAI,CAACskC,QAAQ,CAAC3G,MAAM,CAAC,IAAI,EAAEC,IAAI,EAAEvW,IAAI,EAAErnB,MAAM,CAAC;IACvD;EAAC;IAAA7N,GAAA;IAAAC,KAAA,EACD,SAAA+2C,mBAAmBpxC,MAAM,EAAEkxC,UAAU,EAAEG,MAAM,EAAE;MAC7C,IAAM91C,EAAE,GAAG,IAAI;MACf,IAAM+1C,YAAY,GAAG/1C,EAAE,CAACkH,OAAO,CAAC8uC,KAAK;MACrC,IAAMxtB,IAAI,GAAG,SAAPA,IAAIA,CAAIp2B,CAAC,EAAEQ,CAAC;QAAA,OAAKR,CAAC,CAACsa,MAAM,CAAC,UAAAlX,CAAC;UAAA,OAAI,CAAC5C,CAAC,CAACu4C,IAAI,CAAC,UAAAz1C,CAAC;YAAA,OAAIF,CAAC,CAACiU,YAAY,KAAK/T,CAAC,CAAC+T,YAAY,IAAIjU,CAAC,CAAC2T,KAAK,KAAKzT,CAAC,CAACyT,KAAK;UAAA,EAAC;QAAA,EAAC;MAAA;MAC5G,IAAM8sC,WAAW,GAAGztB,IAAI,CAACmtB,UAAU,EAAElxC,MAAM,CAAC;MAC5C,IAAMyxC,SAAS,GAAGJ,MAAM,GAAGrxC,MAAM,GAAG+jB,IAAI,CAAC/jB,MAAM,EAAEkxC,UAAU,CAAC;MAC5D,IAAIM,WAAW,CAAC51C,MAAM,EAAE;QACtBL,EAAE,CAACs1C,gBAAgB,CAACW,WAAW,EAAEF,YAAY,CAACvsC,IAAI,EAAE,KAAK,CAAC;MAC5D;MACA,IAAI0sC,SAAS,CAAC71C,MAAM,IAAI01C,YAAY,CAACvsC,IAAI,EAAE;QACzCxJ,EAAE,CAACs1C,gBAAgB,CAACY,SAAS,EAAEH,YAAY,CAACvsC,IAAI,EAAE,IAAI,CAAC;MACzD;IACF;EAAC;IAAA3K,GAAA;IAAAC,KAAA,EACD,SAAAk1C,cAAc1hD,CAAC,EAAEwjD,MAAM,EAAE;MAAA,IAAAK,MAAA;MACvB,IAAMn2C,EAAE,GAAG,IAAI;MACf,IAAM+zB,IAAI,GAAG;QAACvyB,KAAK,EAAElP,CAAC;QAAEwjD,MAAM,EAANA,MAAM;QAAElL,UAAU,EAAE;MAAI,CAAC;MACjD,IAAMwL,WAAW,GAAG,SAAdA,WAAWA,CAAIzL,MAAM;QAAA,OAAK,CAACA,MAAM,CAACzjC,OAAO,CAACysC,MAAM,IAAIwC,MAAI,CAACjvC,OAAO,CAACysC,MAAM,EAAE7E,QAAQ,CAACx8C,CAAC,CAAC6M,IAAI,CAAC;MAAA;MAC/F,IAAIa,EAAE,CAACy+B,aAAa,CAAC,aAAa,EAAE1K,IAAI,EAAEqiB,WAAW,CAAC,KAAK,KAAK,EAAE;QAChE;MACF;MACA,IAAMzwB,OAAO,GAAG3lB,EAAE,CAACq2C,YAAY,CAAC/jD,CAAC,EAAEwjD,MAAM,CAAC;MAC1C/hB,IAAI,CAAC6W,UAAU,GAAG,KAAK;MACvB5qC,EAAE,CAACy+B,aAAa,CAAC,YAAY,EAAE1K,IAAI,EAAEqiB,WAAW,CAAC;MACjD,IAAIzwB,OAAO,IAAIoO,IAAI,CAACpO,OAAO,EAAE;QAC3B3lB,EAAE,CAACkyC,MAAM,EAAE;MACb;MACA,OAAOlyC,EAAE;IACX;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EACD,SAAAu3C,aAAa/jD,CAAC,EAAEwjD,MAAM,EAAE;MACtB,IAAM91C,EAAE,GAAG,IAAI;MACf,IAAAs2C,WAAA,GAA4Ct2C,EAAE,CAAvCa,OAAO;QAAE80C,UAAU,GAAAW,WAAA,cAAG,EAAE,GAAAA,WAAA;QAAEpvC,OAAO,GAAIlH,EAAE,CAAbkH,OAAO;MACxC,IAAM6uC,YAAY,GAAG7uC,OAAO,CAAC8uC,KAAK;MAClC,IAAMrrB,gBAAgB,GAAGmrB,MAAM;MAC/B,IAAIrxC,MAAM,GAAG,EAAE;MACf,IAAIkhB,OAAO,GAAG,KAAK;MACnB,IAAI4wB,SAAS,GAAG,IAAI;MACpB,IAAIjkD,CAAC,CAAC6M,IAAI,KAAK,UAAU,EAAE;QACzBsF,MAAM,GAAGzE,EAAE,CAAC00C,yBAAyB,CAACpiD,CAAC,EAAEyjD,YAAY,CAACvsC,IAAI,EAAEusC,YAAY,EAAEprB,gBAAgB,CAAC;QAC3F4rB,SAAS,GAAGjkD,CAAC,CAAC6M,IAAI,KAAK,OAAO,GAAGa,EAAE,CAAC4wC,UAAU,GAAGt+C,CAAC;MACpD;MACA0N,EAAE,CAAC4wC,UAAU,GAAG,IAAI;MACpB,IAAIj7C,cAAc,CAACrD,CAAC,EAAE0N,EAAE,CAAC6T,SAAS,EAAE7T,EAAE,CAAC4qB,WAAW,CAAC,EAAE;QACnDzzB,QAAQ,CAAC+P,OAAO,CAACsvC,OAAO,EAAE,CAAClkD,CAAC,EAAEmS,MAAM,EAAEzE,EAAE,CAAC,EAAEA,EAAE,CAAC;QAC9C,IAAI1N,CAAC,CAAC6M,IAAI,KAAK,SAAS,IAAI7M,CAAC,CAAC6M,IAAI,KAAK,OAAO,IAAI7M,CAAC,CAAC6M,IAAI,KAAK,aAAa,EAAE;UAC1EhI,QAAQ,CAAC+P,OAAO,CAACgc,OAAO,EAAE,CAAC5wB,CAAC,EAAEmS,MAAM,EAAEzE,EAAE,CAAC,EAAEA,EAAE,CAAC;QAChD;MACF;MACA2lB,OAAO,GAAG,CAACprB,cAAc,CAACkK,MAAM,EAAEkxC,UAAU,CAAC;MAC7C,IAAIhwB,OAAO,IAAImwB,MAAM,EAAE;QACrB91C,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnBzE,EAAE,CAAC61C,kBAAkB,CAACpxC,MAAM,EAAEkxC,UAAU,EAAEG,MAAM,CAAC;MACnD;MACA91C,EAAE,CAAC4wC,UAAU,GAAG2F,SAAS;MACzB,OAAO5wB,OAAO;IAChB;EAAC;EAAA,OAAAwqB,KAAA;AAAA;AAEH,IAAMsG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA;EAAA,OAASxgD,IAAI,CAACk6C,KAAK,CAACF,SAAS,EAAE,UAACjxC,KAAK;IAAA,OAAKA,KAAK,CAACgyC,QAAQ,CAACnG,UAAU,EAAE;EAAA,EAAC;AAAA;AAC7F,IAAM6L,UAAU,GAAG,IAAI;AACvBnxC,MAAM,CAACoxC,gBAAgB,CAACxG,KAAK,EAAE;EAC7Bp9C,QAAQ,EAAE;IACR2jD,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAE/L;EACT,CAAC;EACDk9C,SAAS,EAAE;IACTyG,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAEmxC;EACT,CAAC;EACDt3C,SAAS,EAAE;IACT+9C,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAEnG;EACT,CAAC;EACDqxC,QAAQ,EAAE;IACR0M,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAEkrC;EACT,CAAC;EACDoF,OAAO,EAAE;IACPsH,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAEswC;EACT,CAAC;EACDc,QAAQ,EAAE;IACRwG,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAEoxC;EACT,CAAC;EACD7J,QAAQ,EAAE;IACRqQ,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAE,SAAAA,MAAA,EAAc;MACnBkrC,QAAQ,CAACroC,GAAG,CAAAE,KAAA,CAAZmoC,QAAQ,EAAA5pC,SAAA,CAAc;MACtBq2C,iBAAiB,EAAE;IACrB;EACF,CAAC;EACD9P,UAAU,EAAE;IACV+P,UAAU,EAAVA,UAAU;IACV53C,KAAK,EAAE,SAAAA,MAAA,EAAc;MACnBkrC,QAAQ,CAACznC,MAAM,CAAAV,KAAA,CAAfmoC,QAAQ,EAAA5pC,SAAA,CAAiB;MACzBq2C,iBAAiB,EAAE;IACrB;EACF;AACF,CAAC,CAAC;AAEF,SAASG,OAAOA,CAAC9oC,GAAG,EAAEb,OAAO,EAAE2R,QAAQ,EAAE;EACvC,IAAOD,UAAU,GAAiD1R,OAAO,CAAlE0R,UAAU;IAAEk4B,WAAW,GAAoC5pC,OAAO,CAAtD4pC,WAAW;IAAErhD,CAAC,GAAiCyX,OAAO,CAAzCzX,CAAC;IAAEE,CAAC,GAA8BuX,OAAO,CAAtCvX,CAAC;IAAEqqB,WAAW,GAAiB9S,OAAO,CAAnC8S,WAAW;IAAED,WAAW,GAAI7S,OAAO,CAAtB6S,WAAW;EAC9D,IAAIg3B,WAAW,GAAGD,WAAW,GAAG92B,WAAW;EAC3CjS,GAAG,CAACq3B,SAAS,EAAE;EACfr3B,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEqqB,WAAW,EAAEpB,UAAU,GAAGm4B,WAAW,EAAEl4B,QAAQ,GAAGk4B,WAAW,CAAC;EAC5E,IAAIh3B,WAAW,GAAG+2B,WAAW,EAAE;IAC7BC,WAAW,GAAGD,WAAW,GAAG/2B,WAAW;IACvChS,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEoqB,WAAW,EAAElB,QAAQ,GAAGk4B,WAAW,EAAEn4B,UAAU,GAAGm4B,WAAW,EAAE,IAAI,CAAC;EACpF,CAAC,MAAM;IACLhpC,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEmhD,WAAW,EAAEj4B,QAAQ,GAAG7pB,OAAO,EAAE4pB,UAAU,GAAG5pB,OAAO,CAAC;EACtE;EACA+Y,GAAG,CAACipC,SAAS,EAAE;EACfjpC,GAAG,CAAC4F,IAAI,EAAE;AACZ;AACA,SAASsjC,eAAeA,CAACl4C,KAAK,EAAE;EAC9B,OAAOnE,iBAAiB,CAACmE,KAAK,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AACvF;AACA,SAASm4C,mBAAmBA,CAACr1B,GAAG,EAAE9B,WAAW,EAAEC,WAAW,EAAEm3B,UAAU,EAAE;EACtE,IAAMtiD,CAAC,GAAGoiD,eAAe,CAACp1B,GAAG,CAAC1a,OAAO,CAACiwC,YAAY,CAAC;EACnD,IAAMC,aAAa,GAAG,CAACr3B,WAAW,GAAGD,WAAW,IAAI,CAAC;EACrD,IAAMu3B,UAAU,GAAGz3C,IAAI,CAACC,GAAG,CAACu3C,aAAa,EAAEF,UAAU,GAAGp3B,WAAW,GAAG,CAAC,CAAC;EACxE,IAAMw3B,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIh8B,GAAG,EAAK;IACjC,IAAMi8B,aAAa,GAAG,CAACx3B,WAAW,GAAGngB,IAAI,CAACC,GAAG,CAACu3C,aAAa,EAAE97B,GAAG,CAAC,IAAI47B,UAAU,GAAG,CAAC;IACnF,OAAO7hD,WAAW,CAACimB,GAAG,EAAE,CAAC,EAAE1b,IAAI,CAACC,GAAG,CAACu3C,aAAa,EAAEG,aAAa,CAAC,CAAC;EACpE,CAAC;EACD,OAAO;IACLC,UAAU,EAAEF,iBAAiB,CAAC1iD,CAAC,CAAC4iD,UAAU,CAAC;IAC3CC,QAAQ,EAAEH,iBAAiB,CAAC1iD,CAAC,CAAC6iD,QAAQ,CAAC;IACvCC,UAAU,EAAEriD,WAAW,CAACT,CAAC,CAAC8iD,UAAU,EAAE,CAAC,EAAEL,UAAU,CAAC;IACpDM,QAAQ,EAAEtiD,WAAW,CAACT,CAAC,CAAC+iD,QAAQ,EAAE,CAAC,EAAEN,UAAU;EACjD,CAAC;AACH;AACA,SAASO,UAAUA,CAAC1lD,CAAC,EAAE2lD,KAAK,EAAEriD,CAAC,EAAEE,CAAC,EAAE;EAClC,OAAO;IACLF,CAAC,EAAEA,CAAC,GAAGtD,CAAC,GAAG0N,IAAI,CAACkf,GAAG,CAAC+4B,KAAK,CAAC;IAC1BniD,CAAC,EAAEA,CAAC,GAAGxD,CAAC,GAAG0N,IAAI,CAACof,GAAG,CAAC64B,KAAK;EAC3B,CAAC;AACH;AACA,SAASC,OAAOA,CAAChqC,GAAG,EAAEb,OAAO,EAAE4P,MAAM,EAAEwD,OAAO,EAAEjY,GAAG,EAAE;EACnD,IAAO5S,CAAC,GAA4DyX,OAAO,CAApEzX,CAAC;IAAEE,CAAC,GAAyDuX,OAAO,CAAjEvX,CAAC;IAAcoK,KAAK,GAAsCmN,OAAO,CAA9D0R,UAAU;IAASk4B,WAAW,GAAyB5pC,OAAO,CAA3C4pC,WAAW;IAAekB,MAAM,GAAI9qC,OAAO,CAA9B6S,WAAW;EACxD,IAAMC,WAAW,GAAGngB,IAAI,CAACuC,GAAG,CAAC8K,OAAO,CAAC8S,WAAW,GAAGM,OAAO,GAAGxD,MAAM,GAAGg6B,WAAW,EAAE,CAAC,CAAC;EACrF,IAAM/2B,WAAW,GAAGi4B,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG13B,OAAO,GAAGxD,MAAM,GAAGg6B,WAAW,GAAG,CAAC;EAC5E,IAAImB,aAAa,GAAG,CAAC;EACrB,IAAMC,KAAK,GAAG7vC,GAAG,GAAGtI,KAAK;EACzB,IAAIugB,OAAO,EAAE;IACX,IAAM63B,oBAAoB,GAAGH,MAAM,GAAG,CAAC,GAAGA,MAAM,GAAG13B,OAAO,GAAG,CAAC;IAC9D,IAAM83B,oBAAoB,GAAGp4B,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAGM,OAAO,GAAG,CAAC;IACxE,IAAM+3B,kBAAkB,GAAG,CAACF,oBAAoB,GAAGC,oBAAoB,IAAI,CAAC;IAC5E,IAAME,aAAa,GAAGD,kBAAkB,KAAK,CAAC,GAAIH,KAAK,GAAGG,kBAAkB,IAAKA,kBAAkB,GAAG/3B,OAAO,CAAC,GAAG43B,KAAK;IACtHD,aAAa,GAAG,CAACC,KAAK,GAAGI,aAAa,IAAI,CAAC;EAC7C;EACA,IAAMC,IAAI,GAAG14C,IAAI,CAACuC,GAAG,CAAC,KAAK,EAAE81C,KAAK,GAAGl4B,WAAW,GAAGlD,MAAM,GAAG5nB,EAAE,CAAC,GAAG8qB,WAAW;EAC7E,IAAMw4B,WAAW,GAAG,CAACN,KAAK,GAAGK,IAAI,IAAI,CAAC;EACtC,IAAM35B,UAAU,GAAG7e,KAAK,GAAGy4C,WAAW,GAAGP,aAAa;EACtD,IAAMp5B,QAAQ,GAAGxW,GAAG,GAAGmwC,WAAW,GAAGP,aAAa;EAClD,IAAAQ,mBAAA,GAAqDvB,mBAAmB,CAAChqC,OAAO,EAAE6S,WAAW,EAAEC,WAAW,EAAEnB,QAAQ,GAAGD,UAAU,CAAC;IAA3H64B,UAAU,GAAAgB,mBAAA,CAAVhB,UAAU;IAAEC,QAAQ,GAAAe,mBAAA,CAARf,QAAQ;IAAEC,UAAU,GAAAc,mBAAA,CAAVd,UAAU;IAAEC,QAAQ,GAAAa,mBAAA,CAARb,QAAQ;EACjD,IAAMc,wBAAwB,GAAG14B,WAAW,GAAGy3B,UAAU;EACzD,IAAMkB,sBAAsB,GAAG34B,WAAW,GAAG03B,QAAQ;EACrD,IAAMkB,uBAAuB,GAAGh6B,UAAU,GAAG64B,UAAU,GAAGiB,wBAAwB;EAClF,IAAMG,qBAAqB,GAAGh6B,QAAQ,GAAG64B,QAAQ,GAAGiB,sBAAsB;EAC1E,IAAMG,wBAAwB,GAAG/4B,WAAW,GAAG43B,UAAU;EACzD,IAAMoB,sBAAsB,GAAGh5B,WAAW,GAAG63B,QAAQ;EACrD,IAAMoB,uBAAuB,GAAGp6B,UAAU,GAAG+4B,UAAU,GAAGmB,wBAAwB;EAClF,IAAMG,qBAAqB,GAAGp6B,QAAQ,GAAG+4B,QAAQ,GAAGmB,sBAAsB;EAC1EhrC,GAAG,CAACq3B,SAAS,EAAE;EACfr3B,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEqqB,WAAW,EAAE44B,uBAAuB,EAAEC,qBAAqB,CAAC;EAC1E,IAAInB,QAAQ,GAAG,CAAC,EAAE;IAChB,IAAMwB,OAAO,GAAGrB,UAAU,CAACc,sBAAsB,EAAEE,qBAAqB,EAAEpjD,CAAC,EAAEE,CAAC,CAAC;IAC/EoY,GAAG,CAAC8T,GAAG,CAACq3B,OAAO,CAACzjD,CAAC,EAAEyjD,OAAO,CAACvjD,CAAC,EAAE+hD,QAAQ,EAAEmB,qBAAqB,EAAEh6B,QAAQ,GAAG7pB,OAAO,CAAC;EACpF;EACA,IAAMmkD,EAAE,GAAGtB,UAAU,CAACkB,sBAAsB,EAAEl6B,QAAQ,EAAEppB,CAAC,EAAEE,CAAC,CAAC;EAC7DoY,GAAG,CAACu3B,MAAM,CAAC6T,EAAE,CAAC1jD,CAAC,EAAE0jD,EAAE,CAACxjD,CAAC,CAAC;EACtB,IAAIiiD,QAAQ,GAAG,CAAC,EAAE;IAChB,IAAMsB,QAAO,GAAGrB,UAAU,CAACkB,sBAAsB,EAAEE,qBAAqB,EAAExjD,CAAC,EAAEE,CAAC,CAAC;IAC/EoY,GAAG,CAAC8T,GAAG,CAACq3B,QAAO,CAACzjD,CAAC,EAAEyjD,QAAO,CAACvjD,CAAC,EAAEiiD,QAAQ,EAAE/4B,QAAQ,GAAG7pB,OAAO,EAAEikD,qBAAqB,GAAGp5C,IAAI,CAAC3K,EAAE,CAAC;EAC9F;EACA6Y,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEoqB,WAAW,EAAElB,QAAQ,GAAI+4B,QAAQ,GAAG73B,WAAY,EAAEnB,UAAU,GAAI+4B,UAAU,GAAG53B,WAAY,EAAE,IAAI,CAAC;EAC9G,IAAI43B,UAAU,GAAG,CAAC,EAAE;IAClB,IAAMuB,SAAO,GAAGrB,UAAU,CAACiB,wBAAwB,EAAEE,uBAAuB,EAAEvjD,CAAC,EAAEE,CAAC,CAAC;IACnFoY,GAAG,CAAC8T,GAAG,CAACq3B,SAAO,CAACzjD,CAAC,EAAEyjD,SAAO,CAACvjD,CAAC,EAAEgiD,UAAU,EAAEqB,uBAAuB,GAAGn5C,IAAI,CAAC3K,EAAE,EAAE0pB,UAAU,GAAG5pB,OAAO,CAAC;EACpG;EACA,IAAMokD,EAAE,GAAGvB,UAAU,CAACa,wBAAwB,EAAE95B,UAAU,EAAEnpB,CAAC,EAAEE,CAAC,CAAC;EACjEoY,GAAG,CAACu3B,MAAM,CAAC8T,EAAE,CAAC3jD,CAAC,EAAE2jD,EAAE,CAACzjD,CAAC,CAAC;EACtB,IAAI8hD,UAAU,GAAG,CAAC,EAAE;IAClB,IAAMyB,SAAO,GAAGrB,UAAU,CAACa,wBAAwB,EAAEE,uBAAuB,EAAEnjD,CAAC,EAAEE,CAAC,CAAC;IACnFoY,GAAG,CAAC8T,GAAG,CAACq3B,SAAO,CAACzjD,CAAC,EAAEyjD,SAAO,CAACvjD,CAAC,EAAE8hD,UAAU,EAAE74B,UAAU,GAAG5pB,OAAO,EAAE4jD,uBAAuB,CAAC;EAC1F;EACA7qC,GAAG,CAACipC,SAAS,EAAE;AACjB;AACA,SAASqC,OAAOA,CAACtrC,GAAG,EAAEb,OAAO,EAAE4P,MAAM,EAAEwD,OAAO,EAAE;EAC9C,IAAOg5B,WAAW,GAA+BpsC,OAAO,CAAjDosC,WAAW;IAAE16B,UAAU,GAAmB1R,OAAO,CAApC0R,UAAU;IAAEN,aAAa,GAAIpR,OAAO,CAAxBoR,aAAa;EAC7C,IAAIO,QAAQ,GAAG3R,OAAO,CAAC2R,QAAQ;EAC/B,IAAIy6B,WAAW,EAAE;IACfvB,OAAO,CAAChqC,GAAG,EAAEb,OAAO,EAAE4P,MAAM,EAAEwD,OAAO,EAAE1B,UAAU,GAAGlqB,GAAG,CAAC;IACxD,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2mD,WAAW,EAAE,EAAE3mD,CAAC,EAAE;MACpCob,GAAG,CAAC4Z,IAAI,EAAE;IACZ;IACA,IAAI,CAACnM,KAAK,CAAC8C,aAAa,CAAC,EAAE;MACzBO,QAAQ,GAAGD,UAAU,GAAGN,aAAa,GAAG5pB,GAAG;MAC3C,IAAI4pB,aAAa,GAAG5pB,GAAG,KAAK,CAAC,EAAE;QAC7BmqB,QAAQ,IAAInqB,GAAG;MACjB;IACF;EACF;EACAqjD,OAAO,CAAChqC,GAAG,EAAEb,OAAO,EAAE4P,MAAM,EAAEwD,OAAO,EAAEzB,QAAQ,CAAC;EAChD9Q,GAAG,CAAC4Z,IAAI,EAAE;EACV,OAAO9I,QAAQ;AACjB;AACA,SAAS06B,qBAAqBA,CAACxrC,GAAG,EAAEb,OAAO,EAAEssC,KAAK,EAAE;EAClD,IAAO/jD,CAAC,GAA6CyX,OAAO,CAArDzX,CAAC;IAAEE,CAAC,GAA0CuX,OAAO,CAAlDvX,CAAC;IAAEipB,UAAU,GAA8B1R,OAAO,CAA/C0R,UAAU;IAAEk4B,WAAW,GAAiB5pC,OAAO,CAAnC4pC,WAAW;IAAEwC,WAAW,GAAIpsC,OAAO,CAAtBosC,WAAW;EACjD,IAAMt5B,WAAW,GAAGngB,IAAI,CAACuC,GAAG,CAAC8K,OAAO,CAAC8S,WAAW,GAAG82B,WAAW,EAAE,CAAC,CAAC;EAClE,IAAM/2B,WAAW,GAAG7S,OAAO,CAAC6S,WAAW,GAAG+2B,WAAW;EACrD,IAAInkD,CAAC;EACL,IAAI6mD,KAAK,EAAE;IACT3C,OAAO,CAAC9oC,GAAG,EAAEb,OAAO,EAAE0R,UAAU,GAAGlqB,GAAG,CAAC;EACzC;EACAqZ,GAAG,CAACq3B,SAAS,EAAE;EACfr3B,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEoqB,WAAW,EAAEnB,UAAU,GAAGlqB,GAAG,EAAEkqB,UAAU,EAAE,IAAI,CAAC;EAC9D,KAAKjsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2mD,WAAW,EAAE,EAAE3mD,CAAC,EAAE;IAChCob,GAAG,CAACw3B,MAAM,EAAE;EACd;EACAx3B,GAAG,CAACq3B,SAAS,EAAE;EACfr3B,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEqqB,WAAW,EAAEpB,UAAU,EAAEA,UAAU,GAAGlqB,GAAG,CAAC;EACxD,KAAK/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2mD,WAAW,EAAE,EAAE3mD,CAAC,EAAE;IAChCob,GAAG,CAACw3B,MAAM,EAAE;EACd;AACF;AACA,SAASrP,UAAUA,CAACnoB,GAAG,EAAEb,OAAO,EAAE4P,MAAM,EAAEwD,OAAO,EAAEzB,QAAQ,EAAE;EAC3D,IAAO1X,OAAO,GAAI+F,OAAO,CAAlB/F,OAAO;EACd,IAAMqyC,KAAK,GAAGryC,OAAO,CAAC6a,WAAW,KAAK,OAAO;EAC7C,IAAI,CAAC7a,OAAO,CAAC8a,WAAW,EAAE;IACxB;EACF;EACA,IAAIu3B,KAAK,EAAE;IACTzrC,GAAG,CAACkV,SAAS,GAAG9b,OAAO,CAAC8a,WAAW,GAAG,CAAC;IACvClU,GAAG,CAAC0rC,QAAQ,GAAG,OAAO;EACxB,CAAC,MAAM;IACL1rC,GAAG,CAACkV,SAAS,GAAG9b,OAAO,CAAC8a,WAAW;IACnClU,GAAG,CAAC0rC,QAAQ,GAAG,OAAO;EACxB;EACA,IAAIvsC,OAAO,CAACosC,WAAW,EAAE;IACvBC,qBAAqB,CAACxrC,GAAG,EAAEb,OAAO,EAAEssC,KAAK,CAAC;EAC5C;EACA,IAAIA,KAAK,EAAE;IACT3C,OAAO,CAAC9oC,GAAG,EAAEb,OAAO,EAAE2R,QAAQ,CAAC;EACjC;EACAk5B,OAAO,CAAChqC,GAAG,EAAEb,OAAO,EAAE4P,MAAM,EAAEwD,OAAO,EAAEzB,QAAQ,CAAC;EAChD9Q,GAAG,CAACw3B,MAAM,EAAE;AACd;AAAC,IACKmU,UAAU,0BAAAC,SAAA;EAAAlgC,SAAA,CAAAigC,UAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAjgC,YAAA,CAAA+/B,UAAA;EACd,SAAAA,WAAYl2C,GAAG,EAAE;IAAA,IAAAq2C,MAAA;IAAAv7C,eAAA,OAAAo7C,UAAA;IACfG,MAAA,GAAAD,QAAA,CAAA15C,IAAA;IACA25C,MAAA,CAAK1yC,OAAO,GAAGvI,SAAS;IACxBi7C,MAAA,CAAKv7B,aAAa,GAAG1f,SAAS;IAC9Bi7C,MAAA,CAAKj7B,UAAU,GAAGhgB,SAAS;IAC3Bi7C,MAAA,CAAKh7B,QAAQ,GAAGjgB,SAAS;IACzBi7C,MAAA,CAAK95B,WAAW,GAAGnhB,SAAS;IAC5Bi7C,MAAA,CAAK75B,WAAW,GAAGphB,SAAS;IAC5Bi7C,MAAA,CAAK/C,WAAW,GAAG,CAAC;IACpB+C,MAAA,CAAKP,WAAW,GAAG,CAAC;IACpB,IAAI91C,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAAiyC,sBAAA,CAAAD,MAAA,GAAOr2C,GAAG,CAAC;IAC1B;IAAC,OAAAq2C,MAAA;EACH;EAACh7C,YAAA,CAAA66C,UAAA;IAAA56C,GAAA;IAAAC,KAAA,EACD,SAAAgsB,QAAQgvB,MAAM,EAAEC,MAAM,EAAEpvB,gBAAgB,EAAE;MACxC,IAAMjN,KAAK,GAAG,IAAI,CAACmX,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAElK,gBAAgB,CAAC;MACzD,IAAAqvB,kBAAA,GAA0Bv/C,iBAAiB,CAACijB,KAAK,EAAE;UAACloB,CAAC,EAAEskD,MAAM;UAAEpkD,CAAC,EAAEqkD;QAAM,CAAC,CAAC;QAAnE36B,KAAK,GAAA46B,kBAAA,CAAL56B,KAAK;QAAE+L,QAAQ,GAAA6uB,kBAAA,CAAR7uB,QAAQ;MACtB,IAAA8uB,eAAA,GAAwE,IAAI,CAACplB,QAAQ,CAAC,CACpF,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAElK,gBAAgB,CAAC;QANbhM,UAAU,GAAAs7B,eAAA,CAAVt7B,UAAU;QAAEC,QAAQ,GAAAq7B,eAAA,CAARr7B,QAAQ;QAAEkB,WAAW,GAAAm6B,eAAA,CAAXn6B,WAAW;QAAEC,WAAW,GAAAk6B,eAAA,CAAXl6B,WAAW;QAAE1B,aAAa,GAAA47B,eAAA,CAAb57B,aAAa;MAOpE,IAAM67B,OAAO,GAAG,IAAI,CAAChzC,OAAO,CAACmZ,OAAO,GAAG,CAAC;MACxC,IAAM85B,aAAa,GAAG97B,aAAa,IAAI5pB,GAAG,IAAII,aAAa,CAACuqB,KAAK,EAAET,UAAU,EAAEC,QAAQ,CAAC;MACxF,IAAMw7B,YAAY,GAAIjvB,QAAQ,IAAIrL,WAAW,GAAGo6B,OAAO,IAAI/uB,QAAQ,IAAIpL,WAAW,GAAGm6B,OAAQ;MAC7F,OAAQC,aAAa,IAAIC,YAAY;IACvC;EAAC;IAAAv7C,GAAA;IAAAC,KAAA,EACD,SAAAosB,eAAeP,gBAAgB,EAAE;MAC/B,IAAA0vB,eAAA,GAA+D,IAAI,CAACxlB,QAAQ,CAAC,CAC3E,GAAG,EACH,GAAG,EACH,YAAY,EACZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,eAAe,CAChB,EAAElK,gBAAgB,CAAC;QARbn1B,CAAC,GAAA6kD,eAAA,CAAD7kD,CAAC;QAAEE,CAAC,GAAA2kD,eAAA,CAAD3kD,CAAC;QAAEipB,UAAU,GAAA07B,eAAA,CAAV17B,UAAU;QAAEC,QAAQ,GAAAy7B,eAAA,CAARz7B,QAAQ;QAAEkB,WAAW,GAAAu6B,eAAA,CAAXv6B,WAAW;QAAEC,WAAW,GAAAs6B,eAAA,CAAXt6B,WAAW;MAS3D,IAAAu6B,cAAA,GAA0B,IAAI,CAACpzC,OAAO;QAA/B2V,MAAM,GAAAy9B,cAAA,CAANz9B,MAAM;QAAEwD,OAAO,GAAAi6B,cAAA,CAAPj6B,OAAO;MACtB,IAAMk6B,SAAS,GAAG,CAAC57B,UAAU,GAAGC,QAAQ,IAAI,CAAC;MAC7C,IAAM47B,UAAU,GAAG,CAAC16B,WAAW,GAAGC,WAAW,GAAGM,OAAO,GAAGxD,MAAM,IAAI,CAAC;MACrE,OAAO;QACLrnB,CAAC,EAAEA,CAAC,GAAGoK,IAAI,CAACkf,GAAG,CAACy7B,SAAS,CAAC,GAAGC,UAAU;QACvC9kD,CAAC,EAAEA,CAAC,GAAGkK,IAAI,CAACof,GAAG,CAACu7B,SAAS,CAAC,GAAGC;MAC/B,CAAC;IACH;EAAC;IAAA37C,GAAA;IAAAC,KAAA,EACD,SAAA61B,gBAAgBhK,gBAAgB,EAAE;MAChC,OAAO,IAAI,CAACO,cAAc,CAACP,gBAAgB,CAAC;IAC9C;EAAC;IAAA9rB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE;MACR,IAAM9N,EAAE,GAAG,IAAI;MACf,IAAOkH,OAAO,GAAmBlH,EAAE,CAA5BkH,OAAO;QAAEmX,aAAa,GAAIre,EAAE,CAAnBqe,aAAa;MAC7B,IAAMxB,MAAM,GAAG,CAAC3V,OAAO,CAAC2V,MAAM,IAAI,CAAC,IAAI,CAAC;MACxC,IAAMwD,OAAO,GAAG,CAACnZ,OAAO,CAACmZ,OAAO,IAAI,CAAC,IAAI,CAAC;MAC1CrgB,EAAE,CAAC62C,WAAW,GAAI3vC,OAAO,CAAC6a,WAAW,KAAK,OAAO,GAAI,IAAI,GAAG,CAAC;MAC7D/hB,EAAE,CAACq5C,WAAW,GAAGh7B,aAAa,GAAG5pB,GAAG,GAAGmL,IAAI,CAACoE,KAAK,CAACqa,aAAa,GAAG5pB,GAAG,CAAC,GAAG,CAAC;MAC1E,IAAI4pB,aAAa,KAAK,CAAC,IAAIre,EAAE,CAAC8f,WAAW,GAAG,CAAC,IAAI9f,EAAE,CAAC+f,WAAW,GAAG,CAAC,EAAE;QACnE;MACF;MACAjS,GAAG,CAAC22B,IAAI,EAAE;MACV,IAAIgW,YAAY,GAAG,CAAC;MACpB,IAAI59B,MAAM,EAAE;QACV49B,YAAY,GAAG59B,MAAM,GAAG,CAAC;QACzB,IAAM09B,SAAS,GAAG,CAACv6C,EAAE,CAAC2e,UAAU,GAAG3e,EAAE,CAAC4e,QAAQ,IAAI,CAAC;QACnD9Q,GAAG,CAAC4sC,SAAS,CAAC96C,IAAI,CAACkf,GAAG,CAACy7B,SAAS,CAAC,GAAGE,YAAY,EAAE76C,IAAI,CAACof,GAAG,CAACu7B,SAAS,CAAC,GAAGE,YAAY,CAAC;QACrF,IAAIz6C,EAAE,CAACqe,aAAa,IAAIppB,EAAE,EAAE;UAC1BwlD,YAAY,GAAG59B,MAAM;QACvB;MACF;MACA/O,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAAC2b,eAAe;MACvC/U,GAAG,CAACgV,WAAW,GAAG5b,OAAO,CAAC6b,WAAW;MACrC,IAAMnE,QAAQ,GAAGw6B,OAAO,CAACtrC,GAAG,EAAE9N,EAAE,EAAEy6C,YAAY,EAAEp6B,OAAO,CAAC;MACxD4V,UAAU,CAACnoB,GAAG,EAAE9N,EAAE,EAAEy6C,YAAY,EAAEp6B,OAAO,EAAEzB,QAAQ,CAAC;MACpD9Q,GAAG,CAAC62B,OAAO,EAAE;IACf;EAAC;EAAA,OAAA8U,UAAA;AAAA,EA5EsB/kB,OAAO;AA8EhC+kB,UAAU,CAACnvC,EAAE,GAAG,KAAK;AACrBmvC,UAAU,CAAC1mD,QAAQ,GAAG;EACpBgvB,WAAW,EAAE,QAAQ;EACrBgB,WAAW,EAAE,MAAM;EACnBo0B,YAAY,EAAE,CAAC;EACfn1B,WAAW,EAAE,CAAC;EACdnF,MAAM,EAAE,CAAC;EACTwD,OAAO,EAAE,CAAC;EACVjB,KAAK,EAAEzgB;AACT,CAAC;AACD86C,UAAU,CAACxkB,aAAa,GAAG;EACzBpS,eAAe,EAAE;AACnB,CAAC;AAED,SAAS83B,QAAQA,CAAC7sC,GAAG,EAAE5G,OAAO,EAAmB;EAAA,IAAjBwb,KAAK,GAAAtiB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG8G,OAAO;EAC7C4G,GAAG,CAAC8sC,OAAO,GAAG3nD,cAAc,CAACyvB,KAAK,CAACm4B,cAAc,EAAE3zC,OAAO,CAAC2zC,cAAc,CAAC;EAC1E/sC,GAAG,CAACm3B,WAAW,CAAChyC,cAAc,CAACyvB,KAAK,CAAC6T,UAAU,EAAErvB,OAAO,CAACqvB,UAAU,CAAC,CAAC;EACrEzoB,GAAG,CAACo3B,cAAc,GAAGjyC,cAAc,CAACyvB,KAAK,CAAC8T,gBAAgB,EAAEtvB,OAAO,CAACsvB,gBAAgB,CAAC;EACrF1oB,GAAG,CAAC0rC,QAAQ,GAAGvmD,cAAc,CAACyvB,KAAK,CAACo4B,eAAe,EAAE5zC,OAAO,CAAC4zC,eAAe,CAAC;EAC7EhtC,GAAG,CAACkV,SAAS,GAAG/vB,cAAc,CAACyvB,KAAK,CAACV,WAAW,EAAE9a,OAAO,CAAC8a,WAAW,CAAC;EACtElU,GAAG,CAACgV,WAAW,GAAG7vB,cAAc,CAACyvB,KAAK,CAACK,WAAW,EAAE7b,OAAO,CAAC6b,WAAW,CAAC;AAC1E;AACA,SAASsiB,MAAMA,CAACv3B,GAAG,EAAEitC,QAAQ,EAAEv3C,MAAM,EAAE;EACrCsK,GAAG,CAACu3B,MAAM,CAAC7hC,MAAM,CAAChO,CAAC,EAAEgO,MAAM,CAAC9N,CAAC,CAAC;AAChC;AACA,SAASslD,aAAaA,CAAC9zC,OAAO,EAAE;EAC9B,IAAIA,OAAO,CAAC+zC,OAAO,EAAE;IACnB,OAAOx/C,cAAc;EACvB;EACA,IAAIyL,OAAO,CAACg0C,OAAO,IAAIh0C,OAAO,CAACi0C,sBAAsB,KAAK,UAAU,EAAE;IACpE,OAAOx/C,cAAc;EACvB;EACA,OAAO0pC,MAAM;AACf;AACA,SAAS+V,QAAQA,CAAC59B,MAAM,EAAE6G,OAAO,EAAe;EAAA,IAAbmI,MAAM,GAAApsB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAzB,SAAA,GAAAyB,SAAA,MAAG,CAAC,CAAC;EAC5C,IAAMiR,KAAK,GAAGmM,MAAM,CAACnd,MAAM;EAC3B,IAAAg7C,aAAA,GAA6D7uB,MAAM,CAA5D1sB,KAAK;IAAEw7C,WAAW,GAAAD,aAAA,cAAG,CAAC,GAAAA,aAAA;IAAAE,WAAA,GAAgC/uB,MAAM,CAApCpkB,GAAG;IAAEozC,SAAS,GAAAD,WAAA,cAAGlqC,KAAK,GAAG,CAAC,GAAAkqC,WAAA;EACzD,IAAcE,YAAY,GAAqBp3B,OAAO,CAA/CvkB,KAAK;IAAqB47C,UAAU,GAAIr3B,OAAO,CAA1Bjc,GAAG;EAC/B,IAAMtI,KAAK,GAAGF,IAAI,CAACuC,GAAG,CAACm5C,WAAW,EAAEG,YAAY,CAAC;EACjD,IAAMrzC,GAAG,GAAGxI,IAAI,CAACC,GAAG,CAAC27C,SAAS,EAAEE,UAAU,CAAC;EAC3C,IAAMC,OAAO,GAAGL,WAAW,GAAGG,YAAY,IAAID,SAAS,GAAGC,YAAY,IAAIH,WAAW,GAAGI,UAAU,IAAIF,SAAS,GAAGE,UAAU;EAC5H,OAAO;IACLrqC,KAAK,EAALA,KAAK;IACLvR,KAAK,EAALA,KAAK;IACLqE,IAAI,EAAEkgB,OAAO,CAAClgB,IAAI;IAClB+E,IAAI,EAAEd,GAAG,GAAGtI,KAAK,IAAI,CAAC67C,OAAO,GAAGtqC,KAAK,GAAGjJ,GAAG,GAAGtI,KAAK,GAAGsI,GAAG,GAAGtI;EAC9D,CAAC;AACH;AACA,SAAS87C,WAAWA,CAAC9tC,GAAG,EAAE8V,IAAI,EAAES,OAAO,EAAEmI,MAAM,EAAE;EAC/C,IAAOhP,MAAM,GAAaoG,IAAI,CAAvBpG,MAAM;IAAEtW,OAAO,GAAI0c,IAAI,CAAf1c,OAAO;EACtB,IAAA20C,SAAA,GAAmCT,QAAQ,CAAC59B,MAAM,EAAE6G,OAAO,EAAEmI,MAAM,CAAC;IAA7Dnb,KAAK,GAAAwqC,SAAA,CAALxqC,KAAK;IAAEvR,KAAK,GAAA+7C,SAAA,CAAL/7C,KAAK;IAAEqE,IAAI,GAAA03C,SAAA,CAAJ13C,IAAI;IAAE+E,IAAI,GAAA2yC,SAAA,CAAJ3yC,IAAI;EAC/B,IAAM4yC,UAAU,GAAGd,aAAa,CAAC9zC,OAAO,CAAC;EACzC,IAAA60C,KAAA,GAA6BvvB,MAAM,IAAI,CAAC,CAAC;IAAAwvB,UAAA,GAAAD,KAAA,CAApCzlC,IAAI;IAAJA,IAAI,GAAA0lC,UAAA,cAAG,IAAI,GAAAA,UAAA;IAAE7zC,OAAO,GAAA4zC,KAAA,CAAP5zC,OAAO;EACzB,IAAIzV,CAAC,EAAEgrB,KAAK,EAAElM,IAAI;EAClB,KAAK9e,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC1BgrB,KAAK,GAAGF,MAAM,CAAC,CAAC1d,KAAK,IAAIqI,OAAO,GAAGe,IAAI,GAAGxW,CAAC,GAAGA,CAAC,CAAC,IAAI2e,KAAK,CAAC;IAC1D,IAAIqM,KAAK,CAACI,IAAI,EAAE;MACd;IACF,CAAC,MAAM,IAAIxH,IAAI,EAAE;MACfxI,GAAG,CAACs3B,MAAM,CAAC1nB,KAAK,CAACloB,CAAC,EAAEkoB,KAAK,CAAChoB,CAAC,CAAC;MAC5B4gB,IAAI,GAAG,KAAK;IACd,CAAC,MAAM;MACLwlC,UAAU,CAAChuC,GAAG,EAAE0D,IAAI,EAAEkM,KAAK,EAAEvV,OAAO,EAAEjB,OAAO,CAAC+zC,OAAO,CAAC;IACxD;IACAzpC,IAAI,GAAGkM,KAAK;EACd;EACA,IAAIvZ,IAAI,EAAE;IACRuZ,KAAK,GAAGF,MAAM,CAAC,CAAC1d,KAAK,IAAIqI,OAAO,GAAGe,IAAI,GAAG,CAAC,CAAC,IAAImI,KAAK,CAAC;IACtDyqC,UAAU,CAAChuC,GAAG,EAAE0D,IAAI,EAAEkM,KAAK,EAAEvV,OAAO,EAAEjB,OAAO,CAAC+zC,OAAO,CAAC;EACxD;EACA,OAAO,CAAC,CAAC92C,IAAI;AACf;AACA,SAAS83C,eAAeA,CAACnuC,GAAG,EAAE8V,IAAI,EAAES,OAAO,EAAEmI,MAAM,EAAE;EACnD,IAAMhP,MAAM,GAAGoG,IAAI,CAACpG,MAAM;EAC1B,IAAA0+B,UAAA,GAA6Bd,QAAQ,CAAC59B,MAAM,EAAE6G,OAAO,EAAEmI,MAAM,CAAC;IAAvDnb,KAAK,GAAA6qC,UAAA,CAAL7qC,KAAK;IAAEvR,KAAK,GAAAo8C,UAAA,CAALp8C,KAAK;IAAEoJ,IAAI,GAAAgzC,UAAA,CAAJhzC,IAAI;EACzB,IAAAizC,KAAA,GAA+B3vB,MAAM,IAAI,CAAC,CAAC;IAAA4vB,UAAA,GAAAD,KAAA,CAApC7lC,IAAI;IAAJA,IAAI,GAAA8lC,UAAA,cAAG,IAAI,GAAAA,UAAA;IAAEj0C,OAAO,GAAAg0C,KAAA,CAAPh0C,OAAO;EAC3B,IAAIk0C,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAI5pD,CAAC,EAAEgrB,KAAK,EAAE6+B,KAAK,EAAE98B,IAAI,EAAEF,IAAI,EAAEi9B,KAAK;EACtC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAItzC,KAAK;IAAA,OAAK,CAACrJ,KAAK,IAAIqI,OAAO,GAAGe,IAAI,GAAGC,KAAK,GAAGA,KAAK,CAAC,IAAIkI,KAAK;EAAA;EAChF,IAAMqrC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;IAClB,IAAIj9B,IAAI,KAAKF,IAAI,EAAE;MACjBzR,GAAG,CAACu3B,MAAM,CAACgX,IAAI,EAAE98B,IAAI,CAAC;MACtBzR,GAAG,CAACu3B,MAAM,CAACgX,IAAI,EAAE58B,IAAI,CAAC;MACtB3R,GAAG,CAACu3B,MAAM,CAACgX,IAAI,EAAEG,KAAK,CAAC;IACzB;EACF,CAAC;EACD,IAAIlmC,IAAI,EAAE;IACRoH,KAAK,GAAGF,MAAM,CAACi/B,UAAU,CAAC,CAAC,CAAC,CAAC;IAC7B3uC,GAAG,CAACs3B,MAAM,CAAC1nB,KAAK,CAACloB,CAAC,EAAEkoB,KAAK,CAAChoB,CAAC,CAAC;EAC9B;EACA,KAAKhD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IAC1BgrB,KAAK,GAAGF,MAAM,CAACi/B,UAAU,CAAC/pD,CAAC,CAAC,CAAC;IAC7B,IAAIgrB,KAAK,CAACI,IAAI,EAAE;MACd;IACF;IACA,IAAMtoB,CAAC,GAAGkoB,KAAK,CAACloB,CAAC;IACjB,IAAME,CAAC,GAAGgoB,KAAK,CAAChoB,CAAC;IACjB,IAAMinD,MAAM,GAAGnnD,CAAC,GAAG,CAAC;IACpB,IAAImnD,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAI7mD,CAAC,GAAG+pB,IAAI,EAAE;QACZA,IAAI,GAAG/pB,CAAC;MACV,CAAC,MAAM,IAAIA,CAAC,GAAG6pB,IAAI,EAAE;QACnBA,IAAI,GAAG7pB,CAAC;MACV;MACA2mD,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAG7mD,CAAC,IAAI,EAAE8mD,MAAM;IACvC,CAAC,MAAM;MACLI,KAAK,EAAE;MACP5uC,GAAG,CAACu3B,MAAM,CAAC7vC,CAAC,EAAEE,CAAC,CAAC;MAChB6mD,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACV78B,IAAI,GAAGF,IAAI,GAAG7pB,CAAC;IACjB;IACA8mD,KAAK,GAAG9mD,CAAC;EACX;EACAgnD,KAAK,EAAE;AACT;AACA,SAASE,iBAAiBA,CAACh5B,IAAI,EAAE;EAC/B,IAAM1b,IAAI,GAAG0b,IAAI,CAAC1c,OAAO;EACzB,IAAMqvB,UAAU,GAAGruB,IAAI,CAACquB,UAAU,IAAIruB,IAAI,CAACquB,UAAU,CAACl2B,MAAM;EAC5D,IAAMw8C,WAAW,GAAG,CAACj5B,IAAI,CAACO,UAAU,IAAI,CAACP,IAAI,CAAC1f,KAAK,IAAI,CAACgE,IAAI,CAACgzC,OAAO,IAAIhzC,IAAI,CAACizC,sBAAsB,KAAK,UAAU,IAAI,CAACjzC,IAAI,CAAC+yC,OAAO,IAAI,CAAC1kB,UAAU;EAClJ,OAAOsmB,WAAW,GAAGZ,eAAe,GAAGL,WAAW;AACpD;AACA,SAASkB,uBAAuBA,CAAC51C,OAAO,EAAE;EACxC,IAAIA,OAAO,CAAC+zC,OAAO,EAAE;IACnB,OAAO9/C,qBAAqB;EAC9B;EACA,IAAI+L,OAAO,CAACg0C,OAAO,IAAIh0C,OAAO,CAACi0C,sBAAsB,KAAK,UAAU,EAAE;IACpE,OAAO9/C,oBAAoB;EAC7B;EACA,OAAOE,YAAY;AACrB;AACA,SAASwhD,mBAAmBA,CAACjvC,GAAG,EAAE8V,IAAI,EAAE9jB,KAAK,EAAEuR,KAAK,EAAE;EACpD,IAAI2rC,IAAI,GAAGp5B,IAAI,CAACq5B,KAAK;EACrB,IAAI,CAACD,IAAI,EAAE;IACTA,IAAI,GAAGp5B,IAAI,CAACq5B,KAAK,GAAG,IAAIC,MAAM,EAAE;IAChC,IAAIt5B,IAAI,CAACo5B,IAAI,CAACA,IAAI,EAAEl9C,KAAK,EAAEuR,KAAK,CAAC,EAAE;MACjC2rC,IAAI,CAACjG,SAAS,EAAE;IAClB;EACF;EACA4D,QAAQ,CAAC7sC,GAAG,EAAE8V,IAAI,CAAC1c,OAAO,CAAC;EAC3B4G,GAAG,CAACw3B,MAAM,CAAC0X,IAAI,CAAC;AAClB;AACA,SAASG,gBAAgBA,CAACrvC,GAAG,EAAE8V,IAAI,EAAE9jB,KAAK,EAAEuR,KAAK,EAAE;EACjD,IAAO+rC,QAAQ,GAAax5B,IAAI,CAAzBw5B,QAAQ;IAAEl2C,OAAO,GAAI0c,IAAI,CAAf1c,OAAO;EACxB,IAAMm2C,aAAa,GAAGT,iBAAiB,CAACh5B,IAAI,CAAC;EAAC,IAAA05B,UAAA,GAAA/xC,0BAAA,CACxB6xC,QAAQ;IAAAG,MAAA;EAAA;IAA9B,KAAAD,UAAA,CAAA1pD,CAAA,MAAA2pD,MAAA,GAAAD,UAAA,CAAA5oD,CAAA,IAAAgX,IAAA,GAAgC;MAAA,IAArB2Y,OAAO,GAAAk5B,MAAA,CAAAz+C,KAAA;MAChB67C,QAAQ,CAAC7sC,GAAG,EAAE5G,OAAO,EAAEmd,OAAO,CAAC3B,KAAK,CAAC;MACrC5U,GAAG,CAACq3B,SAAS,EAAE;MACf,IAAIkY,aAAa,CAACvvC,GAAG,EAAE8V,IAAI,EAAES,OAAO,EAAE;QAACvkB,KAAK,EAALA,KAAK;QAAEsI,GAAG,EAAEtI,KAAK,GAAGuR,KAAK,GAAG;MAAC,CAAC,CAAC,EAAE;QACtEvD,GAAG,CAACipC,SAAS,EAAE;MACjB;MACAjpC,GAAG,CAACw3B,MAAM,EAAE;IACd;EAAC,SAAA35B,GAAA;IAAA2xC,UAAA,CAAAhrD,CAAA,CAAAqZ,GAAA;EAAA;IAAA2xC,UAAA,CAAAhqD,CAAA;EAAA;AACH;AACA,IAAMkqD,SAAS,GAAG,OAAON,MAAM,KAAK,UAAU;AAC9C,SAASv8C,KAAIA,CAACmN,GAAG,EAAE8V,IAAI,EAAE9jB,KAAK,EAAEuR,KAAK,EAAE;EACrC,IAAImsC,SAAS,IAAI55B,IAAI,CAACw5B,QAAQ,CAAC/8C,MAAM,KAAK,CAAC,EAAE;IAC3C08C,mBAAmB,CAACjvC,GAAG,EAAE8V,IAAI,EAAE9jB,KAAK,EAAEuR,KAAK,CAAC;EAC9C,CAAC,MAAM;IACL8rC,gBAAgB,CAACrvC,GAAG,EAAE8V,IAAI,EAAE9jB,KAAK,EAAEuR,KAAK,CAAC;EAC3C;AACF;AAAC,IACKosC,WAAW,0BAAAC,SAAA;EAAAlkC,SAAA,CAAAikC,WAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAjkC,YAAA,CAAA+jC,WAAA;EACf,SAAAA,YAAYl6C,GAAG,EAAE;IAAA,IAAAq6C,MAAA;IAAAv/C,eAAA,OAAAo/C,WAAA;IACfG,MAAA,GAAAD,QAAA,CAAA19C,IAAA;IACA29C,MAAA,CAAKt5B,QAAQ,GAAG,IAAI;IACpBs5B,MAAA,CAAK12C,OAAO,GAAGvI,SAAS;IACxBi/C,MAAA,CAAK15C,KAAK,GAAGvF,SAAS;IACtBi/C,MAAA,CAAKr2B,SAAS,GAAG5oB,SAAS;IAC1Bi/C,MAAA,CAAKX,KAAK,GAAGt+C,SAAS;IACtBi/C,MAAA,CAAKC,OAAO,GAAGl/C,SAAS;IACxBi/C,MAAA,CAAKE,SAAS,GAAGn/C,SAAS;IAC1Bi/C,MAAA,CAAKz5B,UAAU,GAAG,KAAK;IACvBy5B,MAAA,CAAKG,cAAc,GAAG,KAAK;IAC3B,IAAIx6C,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAAiyC,sBAAA,CAAA+D,MAAA,GAAOr6C,GAAG,CAAC;IAC1B;IAAC,OAAAq6C,MAAA;EACH;EAACh/C,YAAA,CAAA6+C,WAAA;IAAA5+C,GAAA;IAAAC,KAAA,EACD,SAAAkmB,oBAAoBnR,SAAS,EAAErE,SAAS,EAAE;MACxC,IAAMxP,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAI,CAACA,OAAO,CAACg0C,OAAO,IAAIh0C,OAAO,CAACi0C,sBAAsB,KAAK,UAAU,KAAK,CAACj0C,OAAO,CAAC+zC,OAAO,IAAI,CAACj7C,EAAE,CAAC+9C,cAAc,EAAE;QAChH,IAAM55C,IAAI,GAAG+C,OAAO,CAACsd,QAAQ,GAAGxkB,EAAE,CAACkE,KAAK,GAAGlE,EAAE,CAACunB,SAAS;QACvD1sB,0BAA0B,CAACmF,EAAE,CAAC69C,OAAO,EAAE32C,OAAO,EAAE2M,SAAS,EAAE1P,IAAI,EAAEqL,SAAS,CAAC;QAC3ExP,EAAE,CAAC+9C,cAAc,GAAG,IAAI;MAC1B;IACF;EAAC;IAAAl/C,GAAA;IAAAsC,GAAA,EAQD,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAAC08C,OAAO;IACrB,CAAC;IAAAv8C,GAAA,EATD,SAAAA,IAAWkc,MAAM,EAAE;MACjB,IAAMxd,EAAE,GAAG,IAAI;MACfA,EAAE,CAAC69C,OAAO,GAAGrgC,MAAM;MACnB,OAAOxd,EAAE,CAAC89C,SAAS;MACnB,OAAO99C,EAAE,CAACi9C,KAAK;MACfj9C,EAAE,CAAC+9C,cAAc,GAAG,KAAK;IAC3B;EAAC;IAAAl/C,GAAA;IAAAsC,GAAA,EAID,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAAC28C,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG/iD,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAACmM,OAAO,CAACmd,OAAO,CAAC,CAAC;IAC1F;EAAC;IAAAxlB,GAAA;IAAAC,KAAA,EACD,SAAAo5B,MAAA,EAAQ;MACN,IAAMklB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM5/B,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,OAAO4/B,QAAQ,CAAC/8C,MAAM,IAAImd,MAAM,CAAC4/B,QAAQ,CAAC,CAAC,CAAC,CAACt9C,KAAK,CAAC;IACrD;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EACD,SAAAsc,KAAA,EAAO;MACL,IAAMgiC,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAM5/B,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMnM,KAAK,GAAG+rC,QAAQ,CAAC/8C,MAAM;MAC7B,OAAOgR,KAAK,IAAImM,MAAM,CAAC4/B,QAAQ,CAAC/rC,KAAK,GAAG,CAAC,CAAC,CAACjJ,GAAG,CAAC;IACjD;EAAC;IAAAvJ,GAAA;IAAAC,KAAA,EACD,SAAAk/C,YAAYtgC,KAAK,EAAEqpB,QAAQ,EAAE;MAC3B,IAAM/mC,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMpI,KAAK,GAAG4e,KAAK,CAACqpB,QAAQ,CAAC;MAC7B,IAAMvpB,MAAM,GAAGxd,EAAE,CAACwd,MAAM;MACxB,IAAM4/B,QAAQ,GAAGniD,cAAc,CAAC+E,EAAE,EAAE;QAAC+mC,QAAQ,EAARA,QAAQ;QAAEjnC,KAAK,EAAEhB,KAAK;QAAEsJ,GAAG,EAAEtJ;MAAK,CAAC,CAAC;MACzE,IAAI,CAACs+C,QAAQ,CAAC/8C,MAAM,EAAE;QACpB;MACF;MACA,IAAM04B,MAAM,GAAG,EAAE;MACjB,IAAMklB,YAAY,GAAGnB,uBAAuB,CAAC51C,OAAO,CAAC;MACrD,IAAIxU,CAAC,EAAEwW,IAAI;MACX,KAAKxW,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGk0C,QAAQ,CAAC/8C,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACjD,IAAAwrD,WAAA,GAAqBd,QAAQ,CAAC1qD,CAAC,CAAC;UAAzBoN,KAAK,GAAAo+C,WAAA,CAALp+C,KAAK;UAAEsI,GAAG,GAAA81C,WAAA,CAAH91C,GAAG;QACjB,IAAM28B,EAAE,GAAGvnB,MAAM,CAAC1d,KAAK,CAAC;QACxB,IAAMklC,EAAE,GAAGxnB,MAAM,CAACpV,GAAG,CAAC;QACtB,IAAI28B,EAAE,KAAKC,EAAE,EAAE;UACbjM,MAAM,CAACr3B,IAAI,CAACqjC,EAAE,CAAC;UACf;QACF;QACA,IAAM7wC,CAAC,GAAG0L,IAAI,CAAC8X,GAAG,CAAC,CAAC5Y,KAAK,GAAGimC,EAAE,CAACgC,QAAQ,CAAC,KAAK/B,EAAE,CAAC+B,QAAQ,CAAC,GAAGhC,EAAE,CAACgC,QAAQ,CAAC,CAAC,CAAC;QAC1E,IAAMoX,YAAY,GAAGF,YAAY,CAAClZ,EAAE,EAAEC,EAAE,EAAE9wC,CAAC,EAAEgT,OAAO,CAAC+zC,OAAO,CAAC;QAC7DkD,YAAY,CAACpX,QAAQ,CAAC,GAAGrpB,KAAK,CAACqpB,QAAQ,CAAC;QACxChO,MAAM,CAACr3B,IAAI,CAACy8C,YAAY,CAAC;MAC3B;MACA,OAAOplB,MAAM,CAAC14B,MAAM,KAAK,CAAC,GAAG04B,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;IACjD;EAAC;IAAAl6B,GAAA;IAAAC,KAAA,EACD,SAAA88C,YAAY9tC,GAAG,EAAEuW,OAAO,EAAEmI,MAAM,EAAE;MAChC,IAAM6wB,aAAa,GAAGT,iBAAiB,CAAC,IAAI,CAAC;MAC7C,OAAOS,aAAa,CAACvvC,GAAG,EAAE,IAAI,EAAEuW,OAAO,EAAEmI,MAAM,CAAC;IAClD;EAAC;IAAA3tB,GAAA;IAAAC,KAAA,EACD,SAAAk+C,KAAKlvC,GAAG,EAAEhO,KAAK,EAAEuR,KAAK,EAAE;MACtB,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAMo9C,QAAQ,GAAGp9C,EAAE,CAACo9C,QAAQ;MAC5B,IAAMC,aAAa,GAAGT,iBAAiB,CAAC58C,EAAE,CAAC;MAC3C,IAAImE,IAAI,GAAGnE,EAAE,CAACkE,KAAK;MACnBpE,KAAK,GAAGA,KAAK,IAAI,CAAC;MAClBuR,KAAK,GAAGA,KAAK,IAAKrR,EAAE,CAACwd,MAAM,CAACnd,MAAM,GAAGP,KAAM;MAAC,IAAAs+C,UAAA,GAAA7yC,0BAAA,CACtB6xC,QAAQ;QAAAiB,MAAA;MAAA;QAA9B,KAAAD,UAAA,CAAAxqD,CAAA,MAAAyqD,MAAA,GAAAD,UAAA,CAAA1pD,CAAA,IAAAgX,IAAA,GAAgC;UAAA,IAArB2Y,OAAO,GAAAg6B,MAAA,CAAAv/C,KAAA;UAChBqF,IAAI,IAAIk5C,aAAa,CAACvvC,GAAG,EAAE9N,EAAE,EAAEqkB,OAAO,EAAE;YAACvkB,KAAK,EAALA,KAAK;YAAEsI,GAAG,EAAEtI,KAAK,GAAGuR,KAAK,GAAG;UAAC,CAAC,CAAC;QAC1E;MAAC,SAAA1F,GAAA;QAAAyyC,UAAA,CAAA9rD,CAAA,CAAAqZ,GAAA;MAAA;QAAAyyC,UAAA,CAAA9qD,CAAA;MAAA;MACD,OAAO,CAAC,CAAC6Q,IAAI;IACf;EAAC;IAAAtF,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE+F,SAAS,EAAE/T,KAAK,EAAEuR,KAAK,EAAE;MACjC,IAAMrR,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO,IAAI,CAAC,CAAC;MAChC,IAAMsW,MAAM,GAAGxd,EAAE,CAACwd,MAAM,IAAI,EAAE;MAC9B,IAAI,CAACA,MAAM,CAACnd,MAAM,IAAI,CAAC6G,OAAO,CAAC8a,WAAW,EAAE;QAC1C;MACF;MACAlU,GAAG,CAAC22B,IAAI,EAAE;MACV9jC,KAAI,CAACmN,GAAG,EAAE9N,EAAE,EAAEF,KAAK,EAAEuR,KAAK,CAAC;MAC3BvD,GAAG,CAAC62B,OAAO,EAAE;MACb,IAAI3kC,EAAE,CAACskB,QAAQ,EAAE;QACftkB,EAAE,CAAC+9C,cAAc,GAAG,KAAK;QACzB/9C,EAAE,CAACi9C,KAAK,GAAGt+C,SAAS;MACtB;IACF;EAAC;EAAA,OAAA8+C,WAAA;AAAA,EA1GuB/oB,OAAO;AA4GjC+oB,WAAW,CAACnzC,EAAE,GAAG,MAAM;AACvBmzC,WAAW,CAAC1qD,QAAQ,GAAG;EACrB8nD,cAAc,EAAE,MAAM;EACtBtkB,UAAU,EAAE,EAAE;EACdC,gBAAgB,EAAE,CAAC;EACnBskB,eAAe,EAAE,OAAO;EACxB94B,WAAW,EAAE,CAAC;EACds8B,eAAe,EAAE,IAAI;EACrBnD,sBAAsB,EAAE,SAAS;EACjCzzB,IAAI,EAAE,KAAK;EACXlD,QAAQ,EAAE,KAAK;EACfy2B,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;AACDuC,WAAW,CAACxoB,aAAa,GAAG;EAC1BpS,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AACD06B,WAAW,CAACxkD,WAAW,GAAG;EACxB4M,WAAW,EAAE,IAAI;EACjBD,UAAU,EAAE,SAAAA,WAACE,IAAI;IAAA,OAAKA,IAAI,KAAK,YAAY,IAAIA,IAAI,KAAK,MAAM;EAAA;AAChE,CAAC;AAED,SAASy4C,SAASA,CAAC50B,EAAE,EAAEkC,GAAG,EAAE1f,IAAI,EAAEwe,gBAAgB,EAAE;EAClD,IAAMzjB,OAAO,GAAGyiB,EAAE,CAACziB,OAAO;EAC1B,IAAAs3C,YAAA,GAAwB70B,EAAE,CAACkL,QAAQ,CAAC,CAAC1oB,IAAI,CAAC,EAAEwe,gBAAgB,CAAC;IAA9C7rB,KAAK,GAAA0/C,YAAA,CAAZryC,IAAI;EACZ,OAAQvM,IAAI,CAAC8X,GAAG,CAACmU,GAAG,GAAG/sB,KAAK,CAAC,GAAGoI,OAAO,CAAC6W,MAAM,GAAG7W,OAAO,CAACu3C,SAAS;AACpE;AAAC,IACKC,YAAY,0BAAAC,SAAA;EAAAnlC,SAAA,CAAAklC,YAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAllC,YAAA,CAAAglC,YAAA;EAChB,SAAAA,aAAYn7C,GAAG,EAAE;IAAA,IAAAs7C,MAAA;IAAAxgD,eAAA,OAAAqgD,YAAA;IACfG,MAAA,GAAAD,QAAA,CAAA3+C,IAAA;IACA4+C,MAAA,CAAK33C,OAAO,GAAGvI,SAAS;IACxBkgD,MAAA,CAAK/yC,MAAM,GAAGnN,SAAS;IACvBkgD,MAAA,CAAK/gC,IAAI,GAAGnf,SAAS;IACrBkgD,MAAA,CAAKx8C,IAAI,GAAG1D,SAAS;IACrB,IAAI4E,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAAiyC,sBAAA,CAAAgF,MAAA,GAAOt7C,GAAG,CAAC;IAC1B;IAAC,OAAAs7C,MAAA;EACH;EAACjgD,YAAA,CAAA8/C,YAAA;IAAA7/C,GAAA;IAAAC,KAAA,EACD,SAAAgsB,QAAQg0B,MAAM,EAAEC,MAAM,EAAEp0B,gBAAgB,EAAE;MACxC,IAAMzjB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAA83C,eAAA,GAAe,IAAI,CAACnqB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAElK,gBAAgB,CAAC;QAAnDn1B,CAAC,GAAAwpD,eAAA,CAADxpD,CAAC;QAAEE,CAAC,GAAAspD,eAAA,CAADtpD,CAAC;MACX,OAASkK,IAAI,CAAC6qB,GAAG,CAACq0B,MAAM,GAAGtpD,CAAC,EAAE,CAAC,CAAC,GAAGoK,IAAI,CAAC6qB,GAAG,CAACs0B,MAAM,GAAGrpD,CAAC,EAAE,CAAC,CAAC,GAAIkK,IAAI,CAAC6qB,GAAG,CAACvjB,OAAO,CAACu3C,SAAS,GAAGv3C,OAAO,CAAC6W,MAAM,EAAE,CAAC,CAAC;IAC/G;EAAC;IAAAlf,GAAA;IAAAC,KAAA,EACD,SAAAmgD,SAASH,MAAM,EAAEn0B,gBAAgB,EAAE;MACjC,OAAO4zB,SAAS,CAAC,IAAI,EAAEO,MAAM,EAAE,GAAG,EAAEn0B,gBAAgB,CAAC;IACvD;EAAC;IAAA9rB,GAAA;IAAAC,KAAA,EACD,SAAAogD,SAASH,MAAM,EAAEp0B,gBAAgB,EAAE;MACjC,OAAO4zB,SAAS,CAAC,IAAI,EAAEQ,MAAM,EAAE,GAAG,EAAEp0B,gBAAgB,CAAC;IACvD;EAAC;IAAA9rB,GAAA;IAAAC,KAAA,EACD,SAAAosB,eAAeP,gBAAgB,EAAE;MAC/B,IAAAw0B,eAAA,GAAe,IAAI,CAACtqB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAElK,gBAAgB,CAAC;QAAnDn1B,CAAC,GAAA2pD,eAAA,CAAD3pD,CAAC;QAAEE,CAAC,GAAAypD,eAAA,CAADzpD,CAAC;MACX,OAAO;QAACF,CAAC,EAADA,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC;IACf;EAAC;IAAAmJ,GAAA;IAAAC,KAAA,EACD,SAAA6I,KAAKT,OAAO,EAAE;MACZA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;MACvC,IAAI6W,MAAM,GAAG7W,OAAO,CAAC6W,MAAM,IAAI,CAAC;MAChCA,MAAM,GAAGne,IAAI,CAACuC,GAAG,CAAC4b,MAAM,EAAEA,MAAM,IAAI7W,OAAO,CAACk4C,WAAW,IAAI,CAAC,CAAC;MAC7D,IAAMp9B,WAAW,GAAGjE,MAAM,IAAI7W,OAAO,CAAC8a,WAAW,IAAI,CAAC;MACtD,OAAO,CAACjE,MAAM,GAAGiE,WAAW,IAAI,CAAC;IACnC;EAAC;IAAAnjB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE;MACR,IAAM9N,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAIlH,EAAE,CAAC8d,IAAI,IAAI5W,OAAO,CAAC6W,MAAM,GAAG,GAAG,EAAE;QACnC;MACF;MACAjQ,GAAG,CAACgV,WAAW,GAAG5b,OAAO,CAAC6b,WAAW;MACrCjV,GAAG,CAACkV,SAAS,GAAG9b,OAAO,CAAC8a,WAAW;MACnClU,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAAC2b,eAAe;MACvChnB,SAAS,CAACiS,GAAG,EAAE5G,OAAO,EAAElH,EAAE,CAACxK,CAAC,EAAEwK,EAAE,CAACtK,CAAC,CAAC;IACrC;EAAC;IAAAmJ,GAAA;IAAAC,KAAA,EACD,SAAA8qB,SAAA,EAAW;MACT,IAAM1iB,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,CAAC,CAAC;MAClC,OAAOA,OAAO,CAAC6W,MAAM,GAAG7W,OAAO,CAACu3C,SAAS;IAC3C;EAAC;EAAA,OAAAC,YAAA;AAAA,EA/CwBhqB,OAAO;AAiDlCgqB,YAAY,CAACp0C,EAAE,GAAG,OAAO;AACzBo0C,YAAY,CAAC3rD,QAAQ,GAAG;EACtBivB,WAAW,EAAE,CAAC;EACdy8B,SAAS,EAAE,CAAC;EACZx8B,gBAAgB,EAAE,CAAC;EACnBm9B,WAAW,EAAE,CAAC;EACd58B,UAAU,EAAE,QAAQ;EACpBzE,MAAM,EAAE,CAAC;EACTK,QAAQ,EAAE;AACZ,CAAC;AACDsgC,YAAY,CAACzpB,aAAa,GAAG;EAC3BpS,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,SAASs8B,YAAYA,CAACC,GAAG,EAAE30B,gBAAgB,EAAE;EAC3C,IAAA40B,aAAA,GAAoCD,GAAG,CAACzqB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAElK,gBAAgB,CAAC;IAAlGn1B,CAAC,GAAA+pD,aAAA,CAAD/pD,CAAC;IAAEE,CAAC,GAAA6pD,aAAA,CAAD7pD,CAAC;IAAE0kB,IAAI,GAAAmlC,aAAA,CAAJnlC,IAAI;IAAEc,KAAK,GAAAqkC,aAAA,CAALrkC,KAAK;IAAED,MAAM,GAAAskC,aAAA,CAANtkC,MAAM;EAChC,IAAItS,IAAI,EAAEF,KAAK,EAAED,GAAG,EAAEE,MAAM,EAAE82C,IAAI;EAClC,IAAIF,GAAG,CAAChlC,UAAU,EAAE;IAClBklC,IAAI,GAAGvkC,MAAM,GAAG,CAAC;IACjBtS,IAAI,GAAG/I,IAAI,CAACC,GAAG,CAACrK,CAAC,EAAE4kB,IAAI,CAAC;IACxB3R,KAAK,GAAG7I,IAAI,CAACuC,GAAG,CAAC3M,CAAC,EAAE4kB,IAAI,CAAC;IACzB5R,GAAG,GAAG9S,CAAC,GAAG8pD,IAAI;IACd92C,MAAM,GAAGhT,CAAC,GAAG8pD,IAAI;EACnB,CAAC,MAAM;IACLA,IAAI,GAAGtkC,KAAK,GAAG,CAAC;IAChBvS,IAAI,GAAGnT,CAAC,GAAGgqD,IAAI;IACf/2C,KAAK,GAAGjT,CAAC,GAAGgqD,IAAI;IAChBh3C,GAAG,GAAG5I,IAAI,CAACC,GAAG,CAACnK,CAAC,EAAE0kB,IAAI,CAAC;IACvB1R,MAAM,GAAG9I,IAAI,CAACuC,GAAG,CAACzM,CAAC,EAAE0kB,IAAI,CAAC;EAC5B;EACA,OAAO;IAACzR,IAAI,EAAJA,IAAI;IAAEH,GAAG,EAAHA,GAAG;IAAEC,KAAK,EAALA,KAAK;IAAEC,MAAM,EAANA;EAAM,CAAC;AACnC;AACA,SAAS+2C,kBAAkBA,CAACH,GAAG,EAAE;EAC/B,IAAIhmB,IAAI,GAAGgmB,GAAG,CAACp4C,OAAO,CAACw4C,aAAa;EACpC,IAAM16C,GAAG,GAAG,CAAC,CAAC;EACd,IAAI,CAACs0B,IAAI,EAAE;IACT,OAAOt0B,GAAG;EACZ;EACAs0B,IAAI,GAAGgmB,GAAG,CAAChlC,UAAU,GACjBqlC,SAAS,CAACrmB,IAAI,EAAE,MAAM,EAAE,OAAO,EAAEgmB,GAAG,CAACllC,IAAI,GAAGklC,GAAG,CAAC9pD,CAAC,CAAC,GAClDmqD,SAAS,CAACrmB,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAEgmB,GAAG,CAACllC,IAAI,GAAGklC,GAAG,CAAC5pD,CAAC,CAAC;EACtDsP,GAAG,CAACs0B,IAAI,CAAC,GAAG,IAAI;EAChB,OAAOt0B,GAAG;AACZ;AACA,SAAS26C,SAASA,CAACrmB,IAAI,EAAElnC,CAAC,EAAEQ,CAAC,EAAEuV,OAAO,EAAE;EACtC,IAAIA,OAAO,EAAE;IACXmxB,IAAI,GAAGsmB,IAAI,CAACtmB,IAAI,EAAElnC,CAAC,EAAEQ,CAAC,CAAC;IACvB0mC,IAAI,GAAGumB,QAAQ,CAACvmB,IAAI,EAAE1mC,CAAC,EAAER,CAAC,CAAC;EAC7B,CAAC,MAAM;IACLknC,IAAI,GAAGumB,QAAQ,CAACvmB,IAAI,EAAElnC,CAAC,EAAEQ,CAAC,CAAC;EAC7B;EACA,OAAO0mC,IAAI;AACb;AACA,SAASsmB,IAAIA,CAACE,IAAI,EAAE5zB,EAAE,EAAE6zB,EAAE,EAAE;EAC1B,OAAOD,IAAI,KAAK5zB,EAAE,GAAG6zB,EAAE,GAAGD,IAAI,KAAKC,EAAE,GAAG7zB,EAAE,GAAG4zB,IAAI;AACnD;AACA,SAASD,QAAQA,CAAC7sD,CAAC,EAAE8M,KAAK,EAAEsI,GAAG,EAAE;EAC/B,OAAOpV,CAAC,KAAK,OAAO,GAAG8M,KAAK,GAAG9M,CAAC,KAAK,KAAK,GAAGoV,GAAG,GAAGpV,CAAC;AACtD;AACA,SAASgtD,WAAWA,CAACliC,IAAI,EAAEhf,KAAK,EAAEe,GAAG,EAAEsC,GAAG,EAAE;EAC1C,OAAO2b,IAAI,GAAG,CAAC,GAAGle,IAAI,CAACuC,GAAG,CAACvC,IAAI,CAACC,GAAG,CAACf,KAAK,EAAEqD,GAAG,CAAC,EAAEtC,GAAG,CAAC;AACvD;AACA,SAASogD,gBAAgBA,CAACX,GAAG,EAAEY,IAAI,EAAEC,IAAI,EAAE;EACzC,IAAMrhD,KAAK,GAAGwgD,GAAG,CAACp4C,OAAO,CAAC8a,WAAW;EACrC,IAAMlE,IAAI,GAAG2hC,kBAAkB,CAACH,GAAG,CAAC;EACpC,IAAM1qD,CAAC,GAAGqH,MAAM,CAAC6C,KAAK,CAAC;EACvB,OAAO;IACL5K,CAAC,EAAE8rD,WAAW,CAACliC,IAAI,CAACtV,GAAG,EAAE5T,CAAC,CAAC4T,GAAG,EAAE,CAAC,EAAE23C,IAAI,CAAC;IACxCjuD,CAAC,EAAE8tD,WAAW,CAACliC,IAAI,CAACrV,KAAK,EAAE7T,CAAC,CAAC6T,KAAK,EAAE,CAAC,EAAEy3C,IAAI,CAAC;IAC5CttD,CAAC,EAAEotD,WAAW,CAACliC,IAAI,CAACpV,MAAM,EAAE9T,CAAC,CAAC8T,MAAM,EAAE,CAAC,EAAEy3C,IAAI,CAAC;IAC9C/sD,CAAC,EAAE4sD,WAAW,CAACliC,IAAI,CAACnV,IAAI,EAAE/T,CAAC,CAAC+T,IAAI,EAAE,CAAC,EAAEu3C,IAAI;EAC3C,CAAC;AACH;AACA,SAASE,iBAAiBA,CAACd,GAAG,EAAEY,IAAI,EAAEC,IAAI,EAAE;EAC1C,IAAAE,cAAA,GAA6Bf,GAAG,CAACzqB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAA1D9Z,kBAAkB,GAAAslC,cAAA,CAAlBtlC,kBAAkB;EACzB,IAAMjc,KAAK,GAAGwgD,GAAG,CAACp4C,OAAO,CAACiwC,YAAY;EACtC,IAAMviD,CAAC,GAAGuH,aAAa,CAAC2C,KAAK,CAAC;EAC9B,IAAMwhD,IAAI,GAAG1gD,IAAI,CAACC,GAAG,CAACqgD,IAAI,EAAEC,IAAI,CAAC;EACjC,IAAMriC,IAAI,GAAG2hC,kBAAkB,CAACH,GAAG,CAAC;EACpC,IAAMiB,YAAY,GAAGxlC,kBAAkB,IAAIpoB,QAAQ,CAACmM,KAAK,CAAC;EAC1D,OAAO;IACL0hD,OAAO,EAAER,WAAW,CAAC,CAACO,YAAY,IAAIziC,IAAI,CAACtV,GAAG,IAAIsV,IAAI,CAACnV,IAAI,EAAE/T,CAAC,CAAC4rD,OAAO,EAAE,CAAC,EAAEF,IAAI,CAAC;IAChFG,QAAQ,EAAET,WAAW,CAAC,CAACO,YAAY,IAAIziC,IAAI,CAACtV,GAAG,IAAIsV,IAAI,CAACrV,KAAK,EAAE7T,CAAC,CAAC6rD,QAAQ,EAAE,CAAC,EAAEH,IAAI,CAAC;IACnFI,UAAU,EAAEV,WAAW,CAAC,CAACO,YAAY,IAAIziC,IAAI,CAACpV,MAAM,IAAIoV,IAAI,CAACnV,IAAI,EAAE/T,CAAC,CAAC8rD,UAAU,EAAE,CAAC,EAAEJ,IAAI,CAAC;IACzFK,WAAW,EAAEX,WAAW,CAAC,CAACO,YAAY,IAAIziC,IAAI,CAACpV,MAAM,IAAIoV,IAAI,CAACrV,KAAK,EAAE7T,CAAC,CAAC+rD,WAAW,EAAE,CAAC,EAAEL,IAAI;EAC7F,CAAC;AACH;AACA,SAASM,aAAaA,CAACtB,GAAG,EAAE;EAC1B,IAAMvpB,MAAM,GAAGspB,YAAY,CAACC,GAAG,CAAC;EAChC,IAAMpkC,KAAK,GAAG6a,MAAM,CAACttB,KAAK,GAAGstB,MAAM,CAACptB,IAAI;EACxC,IAAMsS,MAAM,GAAG8a,MAAM,CAACrtB,MAAM,GAAGqtB,MAAM,CAACvtB,GAAG;EACzC,IAAMqc,MAAM,GAAGo7B,gBAAgB,CAACX,GAAG,EAAEpkC,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC3D,IAAM8C,MAAM,GAAGqiC,iBAAiB,CAACd,GAAG,EAAEpkC,KAAK,GAAG,CAAC,EAAED,MAAM,GAAG,CAAC,CAAC;EAC5D,OAAO;IACL4lC,KAAK,EAAE;MACLrrD,CAAC,EAAEugC,MAAM,CAACptB,IAAI;MACdjT,CAAC,EAAEqgC,MAAM,CAACvtB,GAAG;MACblT,CAAC,EAAE4lB,KAAK;MACRxnB,CAAC,EAAEunB,MAAM;MACT8C,MAAM,EAANA;IACF,CAAC;IACDw7B,KAAK,EAAE;MACL/jD,CAAC,EAAEugC,MAAM,CAACptB,IAAI,GAAGkc,MAAM,CAACzxB,CAAC;MACzBsC,CAAC,EAAEqgC,MAAM,CAACvtB,GAAG,GAAGqc,MAAM,CAAC3wB,CAAC;MACxBoB,CAAC,EAAE4lB,KAAK,GAAG2J,MAAM,CAACzxB,CAAC,GAAGyxB,MAAM,CAAC3yB,CAAC;MAC9BwB,CAAC,EAAEunB,MAAM,GAAG4J,MAAM,CAAC3wB,CAAC,GAAG2wB,MAAM,CAACjyB,CAAC;MAC/BmrB,MAAM,EAAE;QACNyiC,OAAO,EAAE5gD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE4b,MAAM,CAACyiC,OAAO,GAAG5gD,IAAI,CAACuC,GAAG,CAAC0iB,MAAM,CAAC3wB,CAAC,EAAE2wB,MAAM,CAACzxB,CAAC,CAAC,CAAC;QACnEqtD,QAAQ,EAAE7gD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE4b,MAAM,CAAC0iC,QAAQ,GAAG7gD,IAAI,CAACuC,GAAG,CAAC0iB,MAAM,CAAC3wB,CAAC,EAAE2wB,MAAM,CAAC3yB,CAAC,CAAC,CAAC;QACrEwuD,UAAU,EAAE9gD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE4b,MAAM,CAAC2iC,UAAU,GAAG9gD,IAAI,CAACuC,GAAG,CAAC0iB,MAAM,CAACjyB,CAAC,EAAEiyB,MAAM,CAACzxB,CAAC,CAAC,CAAC;QACzEutD,WAAW,EAAE/gD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE4b,MAAM,CAAC4iC,WAAW,GAAG/gD,IAAI,CAACuC,GAAG,CAAC0iB,MAAM,CAACjyB,CAAC,EAAEiyB,MAAM,CAAC3yB,CAAC,CAAC;MAC5E;IACF;EACF,CAAC;AACH;AACA,SAAS44B,QAAOA,CAACw0B,GAAG,EAAE9pD,CAAC,EAAEE,CAAC,EAAEi1B,gBAAgB,EAAE;EAC5C,IAAMm2B,KAAK,GAAGtrD,CAAC,KAAK,IAAI;EACxB,IAAMurD,KAAK,GAAGrrD,CAAC,KAAK,IAAI;EACxB,IAAMsrD,QAAQ,GAAGF,KAAK,IAAIC,KAAK;EAC/B,IAAMhrB,MAAM,GAAGupB,GAAG,IAAI,CAAC0B,QAAQ,IAAI3B,YAAY,CAACC,GAAG,EAAE30B,gBAAgB,CAAC;EACtE,OAAOoL,MAAM,KACT+qB,KAAK,IAAItrD,CAAC,IAAIugC,MAAM,CAACptB,IAAI,IAAInT,CAAC,IAAIugC,MAAM,CAACttB,KAAK,CAAC,KAC/Cs4C,KAAK,IAAIrrD,CAAC,IAAIqgC,MAAM,CAACvtB,GAAG,IAAI9S,CAAC,IAAIqgC,MAAM,CAACrtB,MAAM,CAAC;AACrD;AACA,SAASu4C,SAASA,CAACljC,MAAM,EAAE;EACzB,OAAOA,MAAM,CAACyiC,OAAO,IAAIziC,MAAM,CAAC0iC,QAAQ,IAAI1iC,MAAM,CAAC2iC,UAAU,IAAI3iC,MAAM,CAAC4iC,WAAW;AACrF;AACA,SAASO,iBAAiBA,CAACpzC,GAAG,EAAEqzC,IAAI,EAAE;EACpCrzC,GAAG,CAACqzC,IAAI,CAACA,IAAI,CAAC3rD,CAAC,EAAE2rD,IAAI,CAACzrD,CAAC,EAAEyrD,IAAI,CAAC7rD,CAAC,EAAE6rD,IAAI,CAACztD,CAAC,CAAC;AAC1C;AAAC,IACK0tD,UAAU,0BAAAC,SAAA;EAAA7nC,SAAA,CAAA4nC,UAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA5nC,YAAA,CAAA0nC,UAAA;EACd,SAAAA,WAAY79C,GAAG,EAAE;IAAA,IAAAg+C,OAAA;IAAAljD,eAAA,OAAA+iD,UAAA;IACfG,OAAA,GAAAD,QAAA,CAAArhD,IAAA;IACAshD,OAAA,CAAKr6C,OAAO,GAAGvI,SAAS;IACxB4iD,OAAA,CAAKjnC,UAAU,GAAG3b,SAAS;IAC3B4iD,OAAA,CAAKnnC,IAAI,GAAGzb,SAAS;IACrB4iD,OAAA,CAAKrmC,KAAK,GAAGvc,SAAS;IACtB4iD,OAAA,CAAKtmC,MAAM,GAAGtc,SAAS;IACvB,IAAI4E,GAAG,EAAE;MACPgC,MAAM,CAACqC,MAAM,CAAAiyC,sBAAA,CAAA0H,OAAA,GAAOh+C,GAAG,CAAC;IAC1B;IAAC,OAAAg+C,OAAA;EACH;EAAC3iD,YAAA,CAAAwiD,UAAA;IAAAviD,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE;MACR,IAAM5G,OAAO,GAAG,IAAI,CAACA,OAAO;MAC5B,IAAAs6C,cAAA,GAAuBZ,aAAa,CAAC,IAAI,CAAC;QAAnCrH,KAAK,GAAAiI,cAAA,CAALjI,KAAK;QAAEsH,KAAK,GAAAW,cAAA,CAALX,KAAK;MACnB,IAAMY,WAAW,GAAGR,SAAS,CAACJ,KAAK,CAAC9iC,MAAM,CAAC,GAAGhiB,kBAAkB,GAAGmlD,iBAAiB;MACpFpzC,GAAG,CAAC22B,IAAI,EAAE;MACV,IAAIoc,KAAK,CAACvrD,CAAC,KAAKikD,KAAK,CAACjkD,CAAC,IAAIurD,KAAK,CAACntD,CAAC,KAAK6lD,KAAK,CAAC7lD,CAAC,EAAE;QAC9Coa,GAAG,CAACq3B,SAAS,EAAE;QACfsc,WAAW,CAAC3zC,GAAG,EAAE+yC,KAAK,CAAC;QACvB/yC,GAAG,CAAC4F,IAAI,EAAE;QACV+tC,WAAW,CAAC3zC,GAAG,EAAEyrC,KAAK,CAAC;QACvBzrC,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAAC6b,WAAW;QACnCjV,GAAG,CAAC4Z,IAAI,CAAC,SAAS,CAAC;MACrB;MACA5Z,GAAG,CAACq3B,SAAS,EAAE;MACfsc,WAAW,CAAC3zC,GAAG,EAAEyrC,KAAK,CAAC;MACvBzrC,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAAC2b,eAAe;MACvC/U,GAAG,CAAC4Z,IAAI,EAAE;MACV5Z,GAAG,CAAC62B,OAAO,EAAE;IACf;EAAC;IAAA9lC,GAAA;IAAAC,KAAA,EACD,SAAAgsB,QAAQg0B,MAAM,EAAEC,MAAM,EAAEp0B,gBAAgB,EAAE;MACxC,OAAOG,QAAO,CAAC,IAAI,EAAEg0B,MAAM,EAAEC,MAAM,EAAEp0B,gBAAgB,CAAC;IACxD;EAAC;IAAA9rB,GAAA;IAAAC,KAAA,EACD,SAAAmgD,SAASH,MAAM,EAAEn0B,gBAAgB,EAAE;MACjC,OAAOG,QAAO,CAAC,IAAI,EAAEg0B,MAAM,EAAE,IAAI,EAAEn0B,gBAAgB,CAAC;IACtD;EAAC;IAAA9rB,GAAA;IAAAC,KAAA,EACD,SAAAogD,SAASH,MAAM,EAAEp0B,gBAAgB,EAAE;MACjC,OAAOG,QAAO,CAAC,IAAI,EAAE,IAAI,EAAEi0B,MAAM,EAAEp0B,gBAAgB,CAAC;IACtD;EAAC;IAAA9rB,GAAA;IAAAC,KAAA,EACD,SAAAosB,eAAeP,gBAAgB,EAAE;MAC/B,IAAA+2B,eAAA,GAAiC,IAAI,CAAC7sB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,YAAY,CAAC,EAAElK,gBAAgB,CAAC;QAA3Fn1B,CAAC,GAAAksD,eAAA,CAADlsD,CAAC;QAAEE,CAAC,GAAAgsD,eAAA,CAADhsD,CAAC;QAAE0kB,IAAI,GAAAsnC,eAAA,CAAJtnC,IAAI;QAAEE,UAAU,GAAAonC,eAAA,CAAVpnC,UAAU;MAC7B,OAAO;QACL9kB,CAAC,EAAE8kB,UAAU,GAAG,CAAC9kB,CAAC,GAAG4kB,IAAI,IAAI,CAAC,GAAG5kB,CAAC;QAClCE,CAAC,EAAE4kB,UAAU,GAAG5kB,CAAC,GAAG,CAACA,CAAC,GAAG0kB,IAAI,IAAI;MACnC,CAAC;IACH;EAAC;IAAAvb,GAAA;IAAAC,KAAA,EACD,SAAA8qB,SAASzd,IAAI,EAAE;MACb,OAAOA,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC+O,KAAK,GAAG,CAAC,GAAG,IAAI,CAACD,MAAM,GAAG,CAAC;IACxD;EAAC;EAAA,OAAAmmC,UAAA;AAAA,EAjDsB1sB,OAAO;AAmDhC0sB,UAAU,CAAC92C,EAAE,GAAG,KAAK;AACrB82C,UAAU,CAACruD,QAAQ,GAAG;EACpB2sD,aAAa,EAAE,OAAO;EACtB19B,WAAW,EAAE,CAAC;EACdm1B,YAAY,EAAE,CAAC;EACfp8B,kBAAkB,EAAE,IAAI;EACxByH,UAAU,EAAE7jB;AACd,CAAC;AACDyiD,UAAU,CAACnsB,aAAa,GAAG;EACzBpS,eAAe,EAAE,iBAAiB;EAClCE,WAAW,EAAE;AACf,CAAC;AAED,IAAIpP,QAAQ,GAAG,aAAapO,MAAM,CAACqP,MAAM,CAAC;EAC1CmT,SAAS,EAAE,IAAI;EACf0xB,UAAU,EAAEA,UAAU;EACtBgE,WAAW,EAAEA,WAAW;EACxBiB,YAAY,EAAEA,YAAY;EAC1B0C,UAAU,EAAEA;AACZ,CAAC,CAAC;AAEF,SAASO,cAAcA,CAAC/3C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEsb,cAAc,EAAEzlB,OAAO,EAAE;EACnE,IAAM06C,OAAO,GAAG16C,OAAO,CAAC06C,OAAO,IAAIj1B,cAAc;EACjD,IAAIi1B,OAAO,IAAIvwC,KAAK,EAAE;IACpB,OAAOzH,IAAI,CAAC4Z,KAAK,CAAC1jB,KAAK,EAAEA,KAAK,GAAGuR,KAAK,CAAC;EACzC;EACA,IAAMwwC,SAAS,GAAG,EAAE;EACpB,IAAMC,WAAW,GAAG,CAACzwC,KAAK,GAAG,CAAC,KAAKuwC,OAAO,GAAG,CAAC,CAAC;EAC/C,IAAIG,YAAY,GAAG,CAAC;EACpB,IAAMC,QAAQ,GAAGliD,KAAK,GAAGuR,KAAK,GAAG,CAAC;EAClC,IAAIjf,CAAC,GAAG0N,KAAK;EACb,IAAIpN,CAAC,EAAEuvD,YAAY,EAAEC,OAAO,EAAEtuC,IAAI,EAAEuuC,KAAK;EACzCN,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGn4C,IAAI,CAACxX,CAAC,CAAC;EACnC,KAAKM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkvD,OAAO,GAAG,CAAC,EAAElvD,CAAC,EAAE,EAAE;IAChC,IAAI2pD,IAAI,GAAG,CAAC;IACZ,IAAI+F,IAAI,GAAG,CAAC;IACZ,IAAItuD,CAAC;IACL,IAAMuuD,aAAa,GAAGziD,IAAI,CAACoE,KAAK,CAAC,CAACtR,CAAC,GAAG,CAAC,IAAIovD,WAAW,CAAC,GAAG,CAAC,GAAGhiD,KAAK;IACnE,IAAMwiD,WAAW,GAAG1iD,IAAI,CAACC,GAAG,CAACD,IAAI,CAACoE,KAAK,CAAC,CAACtR,CAAC,GAAG,CAAC,IAAIovD,WAAW,CAAC,GAAG,CAAC,EAAEzwC,KAAK,CAAC,GAAGvR,KAAK;IAClF,IAAMyiD,cAAc,GAAGD,WAAW,GAAGD,aAAa;IAClD,KAAKvuD,CAAC,GAAGuuD,aAAa,EAAEvuD,CAAC,GAAGwuD,WAAW,EAAExuD,CAAC,EAAE,EAAE;MAC5CuoD,IAAI,IAAIzyC,IAAI,CAAC9V,CAAC,CAAC,CAAC0B,CAAC;MACjB4sD,IAAI,IAAIx4C,IAAI,CAAC9V,CAAC,CAAC,CAAC4B,CAAC;IACnB;IACA2mD,IAAI,IAAIkG,cAAc;IACtBH,IAAI,IAAIG,cAAc;IACtB,IAAMC,SAAS,GAAG5iD,IAAI,CAACoE,KAAK,CAACtR,CAAC,GAAGovD,WAAW,CAAC,GAAG,CAAC,GAAGhiD,KAAK;IACzD,IAAM2iD,OAAO,GAAG7iD,IAAI,CAACoE,KAAK,CAAC,CAACtR,CAAC,GAAG,CAAC,IAAIovD,WAAW,CAAC,GAAG,CAAC,GAAGhiD,KAAK;IAC7D,IAAA4iD,OAAA,GAAiC94C,IAAI,CAACxX,CAAC,CAAC;MAA9BuwD,OAAO,GAAAD,OAAA,CAAVltD,CAAC;MAAcotD,OAAO,GAAAF,OAAA,CAAVhtD,CAAC;IACpBwsD,OAAO,GAAGtuC,IAAI,GAAG,CAAC,CAAC;IACnB,KAAK9f,CAAC,GAAG0uD,SAAS,EAAE1uD,CAAC,GAAG2uD,OAAO,EAAE3uD,CAAC,EAAE,EAAE;MACpC8f,IAAI,GAAG,GAAG,GAAGhU,IAAI,CAAC8X,GAAG,CACnB,CAACirC,OAAO,GAAGtG,IAAI,KAAKzyC,IAAI,CAAC9V,CAAC,CAAC,CAAC4B,CAAC,GAAGktD,OAAO,CAAC,GACxC,CAACD,OAAO,GAAG/4C,IAAI,CAAC9V,CAAC,CAAC,CAAC0B,CAAC,KAAK4sD,IAAI,GAAGQ,OAAO,CAAC,CACzC;MACD,IAAIhvC,IAAI,GAAGsuC,OAAO,EAAE;QAClBA,OAAO,GAAGtuC,IAAI;QACdquC,YAAY,GAAGr4C,IAAI,CAAC9V,CAAC,CAAC;QACtBquD,KAAK,GAAGruD,CAAC;MACX;IACF;IACA+tD,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGE,YAAY;IACxC7vD,CAAC,GAAG+vD,KAAK;EACX;EACAN,SAAS,CAACE,YAAY,EAAE,CAAC,GAAGn4C,IAAI,CAACo4C,QAAQ,CAAC;EAC1C,OAAOH,SAAS;AAClB;AACA,SAASgB,gBAAgBA,CAACj5C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEsb,cAAc,EAAE;EAC5D,IAAI0vB,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAG,CAAC;EACd,IAAI5pD,CAAC,EAAEgrB,KAAK,EAAEloB,CAAC,EAAEE,CAAC,EAAE6mD,KAAK,EAAEuG,QAAQ,EAAEC,QAAQ,EAAEC,UAAU,EAAEvjC,IAAI,EAAEF,IAAI;EACrE,IAAMsiC,SAAS,GAAG,EAAE;EACpB,IAAMG,QAAQ,GAAGliD,KAAK,GAAGuR,KAAK,GAAG,CAAC;EAClC,IAAM4xC,IAAI,GAAGr5C,IAAI,CAAC9J,KAAK,CAAC,CAACtK,CAAC;EAC1B,IAAM0tD,IAAI,GAAGt5C,IAAI,CAACo4C,QAAQ,CAAC,CAACxsD,CAAC;EAC7B,IAAM2tD,EAAE,GAAGD,IAAI,GAAGD,IAAI;EACtB,KAAKvwD,CAAC,GAAGoN,KAAK,EAAEpN,CAAC,GAAGoN,KAAK,GAAGuR,KAAK,EAAE,EAAE3e,CAAC,EAAE;IACtCgrB,KAAK,GAAG9T,IAAI,CAAClX,CAAC,CAAC;IACf8C,CAAC,GAAG,CAACkoB,KAAK,CAACloB,CAAC,GAAGytD,IAAI,IAAIE,EAAE,GAAGx2B,cAAc;IAC1Cj3B,CAAC,GAAGgoB,KAAK,CAAChoB,CAAC;IACX,IAAMinD,MAAM,GAAGnnD,CAAC,GAAG,CAAC;IACpB,IAAImnD,MAAM,KAAKJ,KAAK,EAAE;MACpB,IAAI7mD,CAAC,GAAG+pB,IAAI,EAAE;QACZA,IAAI,GAAG/pB,CAAC;QACRotD,QAAQ,GAAGpwD,CAAC;MACd,CAAC,MAAM,IAAIgD,CAAC,GAAG6pB,IAAI,EAAE;QACnBA,IAAI,GAAG7pB,CAAC;QACRqtD,QAAQ,GAAGrwD,CAAC;MACd;MACA2pD,IAAI,GAAG,CAACC,MAAM,GAAGD,IAAI,GAAG3+B,KAAK,CAACloB,CAAC,IAAI,EAAE8mD,MAAM;IAC7C,CAAC,MAAM;MACL,IAAM8G,SAAS,GAAG1wD,CAAC,GAAG,CAAC;MACvB,IAAI,CAACqB,aAAa,CAAC+uD,QAAQ,CAAC,IAAI,CAAC/uD,aAAa,CAACgvD,QAAQ,CAAC,EAAE;QACxD,IAAMM,kBAAkB,GAAGzjD,IAAI,CAACC,GAAG,CAACijD,QAAQ,EAAEC,QAAQ,CAAC;QACvD,IAAMO,kBAAkB,GAAG1jD,IAAI,CAACuC,GAAG,CAAC2gD,QAAQ,EAAEC,QAAQ,CAAC;QACvD,IAAIM,kBAAkB,KAAKL,UAAU,IAAIK,kBAAkB,KAAKD,SAAS,EAAE;UACzEvB,SAAS,CAACngD,IAAI,CAAA6hD,aAAA,CAAAA,aAAA,KACT35C,IAAI,CAACy5C,kBAAkB,CAAC;YAC3B7tD,CAAC,EAAE6mD;UAAI,GACP;QACJ;QACA,IAAIiH,kBAAkB,KAAKN,UAAU,IAAIM,kBAAkB,KAAKF,SAAS,EAAE;UACzEvB,SAAS,CAACngD,IAAI,CAAA6hD,aAAA,CAAAA,aAAA,KACT35C,IAAI,CAAC05C,kBAAkB,CAAC;YAC3B9tD,CAAC,EAAE6mD;UAAI,GACP;QACJ;MACF;MACA,IAAI3pD,CAAC,GAAG,CAAC,IAAI0wD,SAAS,KAAKJ,UAAU,EAAE;QACrCnB,SAAS,CAACngD,IAAI,CAACkI,IAAI,CAACw5C,SAAS,CAAC,CAAC;MACjC;MACAvB,SAAS,CAACngD,IAAI,CAACgc,KAAK,CAAC;MACrB6+B,KAAK,GAAGI,MAAM;MACdL,MAAM,GAAG,CAAC;MACV78B,IAAI,GAAGF,IAAI,GAAG7pB,CAAC;MACfotD,QAAQ,GAAGC,QAAQ,GAAGC,UAAU,GAAGtwD,CAAC;IACtC;EACF;EACA,OAAOmvD,SAAS;AAClB;AACA,SAAS2B,qBAAqBA,CAACz2C,OAAO,EAAE;EACtC,IAAIA,OAAO,CAACoX,UAAU,EAAE;IACtB,IAAMva,IAAI,GAAGmD,OAAO,CAACoB,KAAK;IAC1B,OAAOpB,OAAO,CAACoX,UAAU;IACzB,OAAOpX,OAAO,CAACoB,KAAK;IACpB5I,MAAM,CAACk+C,cAAc,CAAC12C,OAAO,EAAE,MAAM,EAAE;MAACjO,KAAK,EAAE8K;IAAI,CAAC,CAAC;EACvD;AACF;AACA,SAAS85C,kBAAkBA,CAAC1kD,KAAK,EAAE;EACjCA,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACvQ,OAAO,CAAC,UAACuN,OAAO,EAAK;IACvCy2C,qBAAqB,CAACz2C,OAAO,CAAC;EAChC,CAAC,CAAC;AACJ;AACA,SAAS42C,yCAAyCA,CAAC35C,IAAI,EAAEwT,MAAM,EAAE;EAC/D,IAAMyH,UAAU,GAAGzH,MAAM,CAACnd,MAAM;EAChC,IAAIP,KAAK,GAAG,CAAC;EACb,IAAIuR,KAAK;EACT,IAAOpF,MAAM,GAAIjC,IAAI,CAAdiC,MAAM;EACb,IAAA23C,sBAAA,GAA2C33C,MAAM,CAAC1B,aAAa,EAAE;IAA1D1K,GAAG,GAAA+jD,sBAAA,CAAH/jD,GAAG;IAAEsC,GAAG,GAAAyhD,sBAAA,CAAHzhD,GAAG;IAAEsI,UAAU,GAAAm5C,sBAAA,CAAVn5C,UAAU;IAAEC,UAAU,GAAAk5C,sBAAA,CAAVl5C,UAAU;EACvC,IAAID,UAAU,EAAE;IACd3K,KAAK,GAAGzK,WAAW,CAACE,YAAY,CAACioB,MAAM,EAAEvR,MAAM,CAACE,IAAI,EAAEtM,GAAG,CAAC,CAACslB,EAAE,EAAE,CAAC,EAAEF,UAAU,GAAG,CAAC,CAAC;EACnF;EACA,IAAIva,UAAU,EAAE;IACd2G,KAAK,GAAGhc,WAAW,CAACE,YAAY,CAACioB,MAAM,EAAEvR,MAAM,CAACE,IAAI,EAAEhK,GAAG,CAAC,CAACijB,EAAE,GAAG,CAAC,EAAEtlB,KAAK,EAAEmlB,UAAU,CAAC,GAAGnlB,KAAK;EAC/F,CAAC,MAAM;IACLuR,KAAK,GAAG4T,UAAU,GAAGnlB,KAAK;EAC5B;EACA,OAAO;IAACA,KAAK,EAALA,KAAK;IAAEuR,KAAK,EAALA;EAAK,CAAC;AACvB;AACA,IAAIwyC,iBAAiB,GAAG;EACtBv5C,EAAE,EAAE,YAAY;EAChBvX,QAAQ,EAAE;IACR+wD,SAAS,EAAE,SAAS;IACpB/rB,OAAO,EAAE;EACX,CAAC;EACDgsB,oBAAoB,EAAE,SAAAA,qBAAC/kD,KAAK,EAAE+0B,IAAI,EAAE7sB,OAAO,EAAK;IAC9C,IAAI,CAACA,OAAO,CAAC6wB,OAAO,EAAE;MACpB2rB,kBAAkB,CAAC1kD,KAAK,CAAC;MACzB;IACF;IACA,IAAM2tB,cAAc,GAAG3tB,KAAK,CAACkc,KAAK;IAClClc,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACvQ,OAAO,CAAC,UAACuN,OAAO,EAAEtD,YAAY,EAAK;MACrD,IAAO0E,KAAK,GAAepB,OAAO,CAA3BoB,KAAK;QAAEqB,SAAS,GAAIzC,OAAO,CAApByC,SAAS;MACvB,IAAMxF,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAACvG,YAAY,CAAC;MAC/C,IAAMG,IAAI,GAAGuE,KAAK,IAAIpB,OAAO,CAACnD,IAAI;MAClC,IAAIvX,OAAO,CAAC,CAACmd,SAAS,EAAExQ,KAAK,CAACkI,OAAO,CAACsI,SAAS,CAAC,CAAC,KAAK,GAAG,EAAE;QACzD;MACF;MACA,IAAIxF,IAAI,CAAC7K,IAAI,KAAK,MAAM,EAAE;QACxB;MACF;MACA,IAAM6kD,KAAK,GAAGhlD,KAAK,CAACyN,MAAM,CAACzC,IAAI,CAACmF,OAAO,CAAC;MACxC,IAAI60C,KAAK,CAAC7kD,IAAI,KAAK,QAAQ,IAAI6kD,KAAK,CAAC7kD,IAAI,KAAK,MAAM,EAAE;QACpD;MACF;MACA,IAAIH,KAAK,CAACkI,OAAO,CAACiK,OAAO,EAAE;QACzB;MACF;MACA,IAAA8yC,sBAAA,GAAqBN,yCAAyC,CAAC35C,IAAI,EAAEJ,IAAI,CAAC;QAArE9J,KAAK,GAAAmkD,sBAAA,CAALnkD,KAAK;QAAEuR,KAAK,GAAA4yC,sBAAA,CAAL5yC,KAAK;MACjB,IAAIA,KAAK,IAAI,CAAC,GAAGsb,cAAc,EAAE;QAC/B62B,qBAAqB,CAACz2C,OAAO,CAAC;QAC9B;MACF;MACA,IAAIhZ,aAAa,CAACoa,KAAK,CAAC,EAAE;QACxBpB,OAAO,CAACoB,KAAK,GAAGvE,IAAI;QACpB,OAAOmD,OAAO,CAACnD,IAAI;QACnBrE,MAAM,CAACk+C,cAAc,CAAC12C,OAAO,EAAE,MAAM,EAAE;UACrCm3C,YAAY,EAAE,IAAI;UAClBxN,UAAU,EAAE,IAAI;UAChBv1C,GAAG,EAAE,SAAAA,IAAA,EAAW;YACd,OAAO,IAAI,CAACgjB,UAAU;UACxB,CAAC;UACD7iB,GAAG,EAAE,SAAAA,IAASxO,CAAC,EAAE;YACf,IAAI,CAACqb,KAAK,GAAGrb,CAAC;UAChB;QACF,CAAC,CAAC;MACJ;MACA,IAAI+uD,SAAS;MACb,QAAQ36C,OAAO,CAAC48C,SAAS;QACzB,KAAK,MAAM;UACTjC,SAAS,GAAGF,cAAc,CAAC/3C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEsb,cAAc,EAAEzlB,OAAO,CAAC;UACvE;QACF,KAAK,SAAS;UACZ26C,SAAS,GAAGgB,gBAAgB,CAACj5C,IAAI,EAAE9J,KAAK,EAAEuR,KAAK,EAAEsb,cAAc,CAAC;UAChE;QACF;UACE,MAAM,IAAI1E,KAAK,sCAAA5d,MAAA,CAAsCnD,OAAO,CAAC48C,SAAS,OAAI;MAAC;MAE7E/2C,OAAO,CAACoX,UAAU,GAAG09B,SAAS;IAChC,CAAC,CAAC;EACJ,CAAC;EACDhN,OAAO,WAAAA,QAAC71C,KAAK,EAAE;IACb0kD,kBAAkB,CAAC1kD,KAAK,CAAC;EAC3B;AACF,CAAC;AAED,SAASmlD,cAAcA,CAACnlD,KAAK,EAAEmK,KAAK,EAAE;EACpC,IAAMa,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAAC7G,KAAK,CAAC;EACxC,IAAMhD,OAAO,GAAG6D,IAAI,IAAIhL,KAAK,CAACmhB,gBAAgB,CAAChX,KAAK,CAAC;EACrD,OAAOhD,OAAO,GAAG6D,IAAI,CAAC+C,OAAO,GAAG,IAAI;AACtC;AACA,SAASq3C,eAAeA,CAACxgC,IAAI,EAAE;EAC7B,IAAM1c,OAAO,GAAG0c,IAAI,CAAC1c,OAAO;EAC5B,IAAMm9C,UAAU,GAAGn9C,OAAO,CAACwgB,IAAI;EAC/B,IAAIA,IAAI,GAAGz0B,cAAc,CAACoxD,UAAU,IAAIA,UAAU,CAAC7gD,MAAM,EAAE6gD,UAAU,CAAC;EACtE,IAAI38B,IAAI,KAAK/oB,SAAS,EAAE;IACtB+oB,IAAI,GAAG,CAAC,CAACxgB,OAAO,CAAC2b,eAAe;EAClC;EACA,IAAI6E,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,IAAI,EAAE;IACnC,OAAO,KAAK;EACd;EACA,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,QAAQ;EACjB;EACA,OAAOA,IAAI;AACb;AACA,SAAS48B,UAAUA,CAAC1gC,IAAI,EAAEza,KAAK,EAAEkI,KAAK,EAAE;EACtC,IAAMqW,IAAI,GAAG08B,eAAe,CAACxgC,IAAI,CAAC;EAClC,IAAIjxB,QAAQ,CAAC+0B,IAAI,CAAC,EAAE;IAClB,OAAOnM,KAAK,CAACmM,IAAI,CAAC5oB,KAAK,CAAC,GAAG,KAAK,GAAG4oB,IAAI;EACzC;EACA,IAAIlkB,MAAM,GAAG+gD,UAAU,CAAC78B,IAAI,CAAC;EAC7B,IAAIj0B,cAAc,CAAC+P,MAAM,CAAC,IAAI5D,IAAI,CAACoE,KAAK,CAACR,MAAM,CAAC,KAAKA,MAAM,EAAE;IAC3D,IAAIkkB,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACtClkB,MAAM,GAAG2F,KAAK,GAAG3F,MAAM;IACzB;IACA,IAAIA,MAAM,KAAK2F,KAAK,IAAI3F,MAAM,GAAG,CAAC,IAAIA,MAAM,IAAI6N,KAAK,EAAE;MACrD,OAAO,KAAK;IACd;IACA,OAAO7N,MAAM;EACf;EACA,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAACgY,OAAO,CAACkM,IAAI,CAAC,IAAI,CAAC,IAAIA,IAAI;AACvE;AACA,SAAS88B,qBAAqBA,CAAC1mB,MAAM,EAAE;EACrC,IAAA2mB,aAAA,GAA2B3mB,MAAM,CAA1B91B,KAAK;IAALA,KAAK,GAAAy8C,aAAA,cAAG,CAAC,CAAC,GAAAA,aAAA;IAAE/8B,IAAI,GAAIoW,MAAM,CAAdpW,IAAI;EACvB,IAAIlkB,MAAM,GAAG,IAAI;EACjB,IAAI8W,UAAU;EACd,IAAIoN,IAAI,KAAK,OAAO,EAAE;IACpBlkB,MAAM,GAAGwE,KAAK,CAACU,MAAM;EACvB,CAAC,MAAM,IAAIgf,IAAI,KAAK,KAAK,EAAE;IACzBlkB,MAAM,GAAGwE,KAAK,CAACQ,GAAG;EACpB,CAAC,MAAM,IAAI7V,QAAQ,CAAC+0B,IAAI,CAAC,EAAE;IACzBlkB,MAAM,GAAGwE,KAAK,CAAC2P,gBAAgB,CAAC+P,IAAI,CAAC5oB,KAAK,CAAC;EAC7C,CAAC,MAAM,IAAIkJ,KAAK,CAACqS,YAAY,EAAE;IAC7B7W,MAAM,GAAGwE,KAAK,CAACqS,YAAY,EAAE;EAC/B;EACA,IAAI5mB,cAAc,CAAC+P,MAAM,CAAC,EAAE;IAC1B8W,UAAU,GAAGtS,KAAK,CAACuS,YAAY,EAAE;IACjC,OAAO;MACL/kB,CAAC,EAAE8kB,UAAU,GAAG9W,MAAM,GAAG,IAAI;MAC7B9N,CAAC,EAAE4kB,UAAU,GAAG,IAAI,GAAG9W;IACzB,CAAC;EACH;EACA,OAAO,IAAI;AACb;AAAC,IACKkhD,SAAS;EACb,SAAAA,UAAYx8C,IAAI,EAAE;IAAA7J,eAAA,OAAAqmD,SAAA;IAChB,IAAI,CAAClvD,CAAC,GAAG0S,IAAI,CAAC1S,CAAC;IACf,IAAI,CAACE,CAAC,GAAGwS,IAAI,CAACxS,CAAC;IACf,IAAI,CAACqoB,MAAM,GAAG7V,IAAI,CAAC6V,MAAM;EAC3B;EAACnf,YAAA,CAAA8lD,SAAA;IAAA7lD,GAAA;IAAAC,KAAA,EACD,SAAA88C,YAAY9tC,GAAG,EAAEioB,MAAM,EAAE7tB,IAAI,EAAE;MAC7B,IAAO1S,CAAC,GAAe,IAAI,CAApBA,CAAC;QAAEE,CAAC,GAAY,IAAI,CAAjBA,CAAC;QAAEqoB,MAAM,GAAI,IAAI,CAAdA,MAAM;MACnBgY,MAAM,GAAGA,MAAM,IAAI;QAACj2B,KAAK,EAAE,CAAC;QAAEsI,GAAG,EAAE3T;MAAG,CAAC;MACvCqZ,GAAG,CAAC8T,GAAG,CAACpsB,CAAC,EAAEE,CAAC,EAAEqoB,MAAM,EAAEgY,MAAM,CAAC3tB,GAAG,EAAE2tB,MAAM,CAACj2B,KAAK,EAAE,IAAI,CAAC;MACrD,OAAO,CAACoI,IAAI,CAAC6tB,MAAM;IACrB;EAAC;IAAAl3B,GAAA;IAAAC,KAAA,EACD,SAAAk/C,YAAYtgC,KAAK,EAAE;MACjB,IAAOloB,CAAC,GAAe,IAAI,CAApBA,CAAC;QAAEE,CAAC,GAAY,IAAI,CAAjBA,CAAC;QAAEqoB,MAAM,GAAI,IAAI,CAAdA,MAAM;MACnB,IAAMqB,KAAK,GAAG1B,KAAK,CAAC0B,KAAK;MACzB,OAAO;QACL5pB,CAAC,EAAEA,CAAC,GAAGoK,IAAI,CAACkf,GAAG,CAACM,KAAK,CAAC,GAAGrB,MAAM;QAC/BroB,CAAC,EAAEA,CAAC,GAAGkK,IAAI,CAACof,GAAG,CAACI,KAAK,CAAC,GAAGrB,MAAM;QAC/BqB,KAAK,EAALA;MACF,CAAC;IACH;EAAC;EAAA,OAAAslC,SAAA;AAAA;AAEH,SAASC,uBAAuBA,CAAC7mB,MAAM,EAAE;EACvC,IAAO91B,KAAK,GAAU81B,MAAM,CAArB91B,KAAK;IAAE0f,IAAI,GAAIoW,MAAM,CAAdpW,IAAI;EAClB,IAAMxgB,OAAO,GAAGc,KAAK,CAACd,OAAO;EAC7B,IAAM7G,MAAM,GAAG2H,KAAK,CAAC8J,SAAS,EAAE,CAACzR,MAAM;EACvC,IAAMmD,MAAM,GAAG,EAAE;EACjB,IAAM1D,KAAK,GAAGoH,OAAO,CAACiB,OAAO,GAAGH,KAAK,CAAC7F,GAAG,GAAG6F,KAAK,CAACnI,GAAG;EACrD,IAAMuI,GAAG,GAAGlB,OAAO,CAACiB,OAAO,GAAGH,KAAK,CAACnI,GAAG,GAAGmI,KAAK,CAAC7F,GAAG;EACnD,IAAIzP,CAAC,EAAEsoB,MAAM,EAAElc,KAAK;EACpB,IAAI4oB,IAAI,KAAK,OAAO,EAAE;IACpB5oB,KAAK,GAAGgB,KAAK;EACf,CAAC,MAAM,IAAI4nB,IAAI,KAAK,KAAK,EAAE;IACzB5oB,KAAK,GAAGsJ,GAAG;EACb,CAAC,MAAM,IAAIzV,QAAQ,CAAC+0B,IAAI,CAAC,EAAE;IACzB5oB,KAAK,GAAG4oB,IAAI,CAAC5oB,KAAK;EACpB,CAAC,MAAM;IACLA,KAAK,GAAGkJ,KAAK,CAAC05B,YAAY,EAAE;EAC9B;EACA,IAAIx6B,OAAO,CAAC4V,IAAI,CAACiK,QAAQ,EAAE;IACzB/L,MAAM,GAAGhT,KAAK,CAACyf,wBAAwB,CAAC,CAAC,EAAE3nB,KAAK,CAAC;IACjD,OAAO,IAAI4kD,SAAS,CAAC;MACnBlvD,CAAC,EAAEwlB,MAAM,CAACxlB,CAAC;MACXE,CAAC,EAAEslB,MAAM,CAACtlB,CAAC;MACXqoB,MAAM,EAAE/V,KAAK,CAAC2e,6BAA6B,CAAC7nB,KAAK;IACnD,CAAC,CAAC;EACJ;EACA,KAAKpM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;IAC3B8Q,MAAM,CAAC9B,IAAI,CAACsG,KAAK,CAACyf,wBAAwB,CAAC/0B,CAAC,EAAEoM,KAAK,CAAC,CAAC;EACvD;EACA,OAAO0E,MAAM;AACf;AACA,SAASohD,eAAeA,CAAC9mB,MAAM,EAAE;EAC/B,IAAM91B,KAAK,GAAG81B,MAAM,CAAC91B,KAAK,IAAI,CAAC,CAAC;EAChC,IAAIA,KAAK,CAACyf,wBAAwB,EAAE;IAClC,OAAOk9B,uBAAuB,CAAC7mB,MAAM,CAAC;EACxC;EACA,OAAO0mB,qBAAqB,CAAC1mB,MAAM,CAAC;AACtC;AACA,SAAS+mB,cAAcA,CAAC/kD,KAAK,EAAEsI,GAAG,EAAEoV,MAAM,EAAE;EAC1C,OAAMpV,GAAG,GAAGtI,KAAK,EAAEsI,GAAG,EAAE,EAAE;IACxB,IAAMsV,KAAK,GAAGF,MAAM,CAACpV,GAAG,CAAC;IACzB,IAAI,CAACmT,KAAK,CAACmC,KAAK,CAACloB,CAAC,CAAC,IAAI,CAAC+lB,KAAK,CAACmC,KAAK,CAAChoB,CAAC,CAAC,EAAE;MACtC;IACF;EACF;EACA,OAAO0S,GAAG;AACZ;AACA,SAAS08C,kBAAkBA,CAACC,QAAQ,EAAEnhC,IAAI,EAAE;EAC1C,IAAAohC,KAAA,GAA6BD,QAAQ,IAAI,CAAC,CAAC;IAAAE,OAAA,GAAAD,KAAA,CAApCxvD,CAAC;IAADA,CAAC,GAAAyvD,OAAA,cAAG,IAAI,GAAAA,OAAA;IAAAC,OAAA,GAAAF,KAAA,CAAEtvD,CAAC;IAADA,CAAC,GAAAwvD,OAAA,cAAG,IAAI,GAAAA,OAAA;EACzB,IAAMC,UAAU,GAAGvhC,IAAI,CAACpG,MAAM;EAC9B,IAAMA,MAAM,GAAG,EAAE;EACjBoG,IAAI,CAACw5B,QAAQ,CAAC59C,OAAO,CAAC,UAAA4lD,KAAA,EAAkB;IAAA,IAAhBtlD,KAAK,GAAAslD,KAAA,CAALtlD,KAAK;MAAEsI,GAAG,GAAAg9C,KAAA,CAAHh9C,GAAG;IAChCA,GAAG,GAAGy8C,cAAc,CAAC/kD,KAAK,EAAEsI,GAAG,EAAE+8C,UAAU,CAAC;IAC5C,IAAMjtB,KAAK,GAAGitB,UAAU,CAACrlD,KAAK,CAAC;IAC/B,IAAMsb,IAAI,GAAG+pC,UAAU,CAAC/8C,GAAG,CAAC;IAC5B,IAAI1S,CAAC,KAAK,IAAI,EAAE;MACd8nB,MAAM,CAAC9b,IAAI,CAAC;QAAClM,CAAC,EAAE0iC,KAAK,CAAC1iC,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC,CAAC;MAC5B8nB,MAAM,CAAC9b,IAAI,CAAC;QAAClM,CAAC,EAAE4lB,IAAI,CAAC5lB,CAAC;QAAEE,CAAC,EAADA;MAAC,CAAC,CAAC;IAC7B,CAAC,MAAM,IAAIF,CAAC,KAAK,IAAI,EAAE;MACrBgoB,MAAM,CAAC9b,IAAI,CAAC;QAAClM,CAAC,EAADA,CAAC;QAAEE,CAAC,EAAEwiC,KAAK,CAACxiC;MAAC,CAAC,CAAC;MAC5B8nB,MAAM,CAAC9b,IAAI,CAAC;QAAClM,CAAC,EAADA,CAAC;QAAEE,CAAC,EAAE0lB,IAAI,CAAC1lB;MAAC,CAAC,CAAC;IAC7B;EACF,CAAC,CAAC;EACF,OAAO8nB,MAAM;AACf;AACA,SAAS6nC,cAAcA,CAACvnB,MAAM,EAAE;EAC9B,IAAO9+B,KAAK,GAAwB8+B,MAAM,CAAnC9+B,KAAK;IAAEgJ,KAAK,GAAiB81B,MAAM,CAA5B91B,KAAK;IAAEmB,KAAK,GAAU20B,MAAM,CAArB30B,KAAK;IAAEya,IAAI,GAAIka,MAAM,CAAdla,IAAI;EAChC,IAAMpG,MAAM,GAAG,EAAE;EACjB,IAAM4/B,QAAQ,GAAGx5B,IAAI,CAACw5B,QAAQ;EAC9B,IAAMkI,YAAY,GAAG1hC,IAAI,CAACpG,MAAM;EAChC,IAAM+nC,UAAU,GAAGC,aAAa,CAACxmD,KAAK,EAAEmK,KAAK,CAAC;EAC9Co8C,UAAU,CAAC7jD,IAAI,CAAC+jD,kBAAkB,CAAC;IAACjwD,CAAC,EAAE,IAAI;IAAEE,CAAC,EAAEsS,KAAK,CAACU;EAAM,CAAC,EAAEkb,IAAI,CAAC,CAAC;EACrE,KAAK,IAAIlxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0qD,QAAQ,CAAC/8C,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACxC,IAAM2xB,OAAO,GAAG+4B,QAAQ,CAAC1qD,CAAC,CAAC;IAC3B,KAAK,IAAIoB,CAAC,GAAGuwB,OAAO,CAACvkB,KAAK,EAAEhM,CAAC,IAAIuwB,OAAO,CAACjc,GAAG,EAAEtU,CAAC,EAAE,EAAE;MACjD4xD,cAAc,CAACloC,MAAM,EAAE8nC,YAAY,CAACxxD,CAAC,CAAC,EAAEyxD,UAAU,CAAC;IACrD;EACF;EACA,OAAO,IAAI9H,WAAW,CAAC;IAACjgC,MAAM,EAANA,MAAM;IAAEtW,OAAO,EAAE,CAAC;EAAC,CAAC,CAAC;AAC/C;AACA,IAAMy+C,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAI37C,IAAI;EAAA,OAAKA,IAAI,CAAC7K,IAAI,KAAK,MAAM,IAAI,CAAC6K,IAAI,CAACiZ,MAAM;AAAA;AAClF,SAASuiC,aAAaA,CAACxmD,KAAK,EAAEmK,KAAK,EAAE;EACnC,IAAMy8C,KAAK,GAAG,EAAE;EAChB,IAAMxuC,KAAK,GAAGpY,KAAK,CAACmqB,4BAA4B,EAAE;EAClD,KAAK,IAAIz2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0kB,KAAK,CAAC/W,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACrC,IAAMsX,IAAI,GAAGoN,KAAK,CAAC1kB,CAAC,CAAC;IACrB,IAAIsX,IAAI,CAACb,KAAK,KAAKA,KAAK,EAAE;MACxB;IACF;IACA,IAAIw8C,2BAA2B,CAAC37C,IAAI,CAAC,EAAE;MACrC47C,KAAK,CAACC,OAAO,CAAC77C,IAAI,CAAC+C,OAAO,CAAC;IAC7B;EACF;EACA,OAAO64C,KAAK;AACd;AACA,SAASF,cAAcA,CAACloC,MAAM,EAAEsoC,WAAW,EAAEP,UAAU,EAAE;EACvD,IAAMQ,SAAS,GAAG,EAAE;EACpB,KAAK,IAAIjyD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyxD,UAAU,CAACllD,MAAM,EAAEvM,CAAC,EAAE,EAAE;IAC1C,IAAM8vB,IAAI,GAAG2hC,UAAU,CAACzxD,CAAC,CAAC;IAC1B,IAAAkyD,UAAA,GAA6BC,SAAS,CAACriC,IAAI,EAAEkiC,WAAW,EAAE,GAAG,CAAC;MAAvD5tB,KAAK,GAAA8tB,UAAA,CAAL9tB,KAAK;MAAE9c,IAAI,GAAA4qC,UAAA,CAAJ5qC,IAAI;MAAEsC,KAAK,GAAAsoC,UAAA,CAALtoC,KAAK;IACzB,IAAI,CAACA,KAAK,IAAKwa,KAAK,IAAI9c,IAAK,EAAE;MAC7B;IACF;IACA,IAAI8c,KAAK,EAAE;MACT6tB,SAAS,CAACF,OAAO,CAACnoC,KAAK,CAAC;IAC1B,CAAC,MAAM;MACLF,MAAM,CAAC9b,IAAI,CAACgc,KAAK,CAAC;MAClB,IAAI,CAACtC,IAAI,EAAE;QACT;MACF;IACF;EACF;EACAoC,MAAM,CAAC9b,IAAI,CAAAG,KAAA,CAAX2b,MAAM,EAASuoC,SAAS,CAAC;AAC3B;AACA,SAASE,SAASA,CAACriC,IAAI,EAAEkiC,WAAW,EAAE/e,QAAQ,EAAE;EAC9C,IAAMrpB,KAAK,GAAGkG,IAAI,CAACo6B,WAAW,CAAC8H,WAAW,EAAE/e,QAAQ,CAAC;EACrD,IAAI,CAACrpB,KAAK,EAAE;IACV,OAAO,CAAC,CAAC;EACX;EACA,IAAMwoC,UAAU,GAAGxoC,KAAK,CAACqpB,QAAQ,CAAC;EAClC,IAAMqW,QAAQ,GAAGx5B,IAAI,CAACw5B,QAAQ;EAC9B,IAAM+H,UAAU,GAAGvhC,IAAI,CAACpG,MAAM;EAC9B,IAAI0a,KAAK,GAAG,KAAK;EACjB,IAAI9c,IAAI,GAAG,KAAK;EAChB,KAAK,IAAI1oB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0qD,QAAQ,CAAC/8C,MAAM,EAAE3N,CAAC,EAAE,EAAE;IACxC,IAAM2xB,OAAO,GAAG+4B,QAAQ,CAAC1qD,CAAC,CAAC;IAC3B,IAAMyzD,UAAU,GAAGhB,UAAU,CAAC9gC,OAAO,CAACvkB,KAAK,CAAC,CAACinC,QAAQ,CAAC;IACtD,IAAMqf,SAAS,GAAGjB,UAAU,CAAC9gC,OAAO,CAACjc,GAAG,CAAC,CAAC2+B,QAAQ,CAAC;IACnD,IAAImf,UAAU,IAAIC,UAAU,IAAID,UAAU,IAAIE,SAAS,EAAE;MACvDluB,KAAK,GAAGguB,UAAU,KAAKC,UAAU;MACjC/qC,IAAI,GAAG8qC,UAAU,KAAKE,SAAS;MAC/B;IACF;EACF;EACA,OAAO;IAACluB,KAAK,EAALA,KAAK;IAAE9c,IAAI,EAAJA,IAAI;IAAEsC,KAAK,EAALA;EAAK,CAAC;AAC7B;AACA,SAAS2oC,SAASA,CAACvoB,MAAM,EAAE;EACzB,IAAO9+B,KAAK,GAAgB8+B,MAAM,CAA3B9+B,KAAK;IAAE0oB,IAAI,GAAUoW,MAAM,CAApBpW,IAAI;IAAE9D,IAAI,GAAIka,MAAM,CAAdla,IAAI;EACxB,IAAInwB,cAAc,CAACi0B,IAAI,CAAC,EAAE;IACxB,OAAOy8B,cAAc,CAACnlD,KAAK,EAAE0oB,IAAI,CAAC;EACpC;EACA,IAAIA,IAAI,KAAK,OAAO,EAAE;IACpB,OAAO29B,cAAc,CAACvnB,MAAM,CAAC;EAC/B;EACA,IAAMinB,QAAQ,GAAGH,eAAe,CAAC9mB,MAAM,CAAC;EACxC,IAAIinB,QAAQ,YAAYL,SAAS,EAAE;IACjC,OAAOK,QAAQ;EACjB;EACA,OAAOU,kBAAkB,CAACV,QAAQ,EAAEnhC,IAAI,CAAC;AAC3C;AACA,SAAS6hC,kBAAkBA,CAACV,QAAQ,EAAEnhC,IAAI,EAAE;EAC1C,IAAIpG,MAAM,GAAG,EAAE;EACf,IAAItZ,KAAK,GAAG,KAAK;EACjB,IAAIrR,OAAO,CAACkyD,QAAQ,CAAC,EAAE;IACrB7gD,KAAK,GAAG,IAAI;IACZsZ,MAAM,GAAGunC,QAAQ;EACnB,CAAC,MAAM;IACLvnC,MAAM,GAAGsnC,kBAAkB,CAACC,QAAQ,EAAEnhC,IAAI,CAAC;EAC7C;EACA,OAAOpG,MAAM,CAACnd,MAAM,GAAG,IAAIo9C,WAAW,CAAC;IACrCjgC,MAAM,EAANA,MAAM;IACNtW,OAAO,EAAE;MAACg0C,OAAO,EAAE;IAAC,CAAC;IACrBh3C,KAAK,EAALA,KAAK;IACLqjB,SAAS,EAAErjB;EACb,CAAC,CAAC,GAAG,IAAI;AACX;AACA,SAASoiD,aAAaA,CAACC,OAAO,EAAEp9C,KAAK,EAAEq9C,SAAS,EAAE;EAChD,IAAM1oB,MAAM,GAAGyoB,OAAO,CAACp9C,KAAK,CAAC;EAC7B,IAAIue,IAAI,GAAGoW,MAAM,CAACpW,IAAI;EACtB,IAAM++B,OAAO,GAAG,CAACt9C,KAAK,CAAC;EACvB,IAAI3F,MAAM;EACV,IAAI,CAACgjD,SAAS,EAAE;IACd,OAAO9+B,IAAI;EACb;EACA,OAAOA,IAAI,KAAK,KAAK,IAAI++B,OAAO,CAACjrC,OAAO,CAACkM,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IACrD,IAAI,CAACj0B,cAAc,CAACi0B,IAAI,CAAC,EAAE;MACzB,OAAOA,IAAI;IACb;IACAlkB,MAAM,GAAG+iD,OAAO,CAAC7+B,IAAI,CAAC;IACtB,IAAI,CAAClkB,MAAM,EAAE;MACX,OAAO,KAAK;IACd;IACA,IAAIA,MAAM,CAAC2C,OAAO,EAAE;MAClB,OAAOuhB,IAAI;IACb;IACA++B,OAAO,CAAC/kD,IAAI,CAACgmB,IAAI,CAAC;IAClBA,IAAI,GAAGlkB,MAAM,CAACkkB,IAAI;EACpB;EACA,OAAO,KAAK;AACd;AACA,SAASjU,KAAKA,CAAC3F,GAAG,EAAEtK,MAAM,EAAEkjD,KAAK,EAAE;EACjC54C,GAAG,CAACq3B,SAAS,EAAE;EACf3hC,MAAM,CAACw5C,IAAI,CAAClvC,GAAG,CAAC;EAChBA,GAAG,CAACu3B,MAAM,CAAC7hC,MAAM,CAAC4X,IAAI,EAAE,CAAC5lB,CAAC,EAAEkxD,KAAK,CAAC;EAClC54C,GAAG,CAACu3B,MAAM,CAAC7hC,MAAM,CAAC00B,KAAK,EAAE,CAAC1iC,CAAC,EAAEkxD,KAAK,CAAC;EACnC54C,GAAG,CAACipC,SAAS,EAAE;EACfjpC,GAAG,CAAC4F,IAAI,EAAE;AACZ;AACA,SAASizC,SAASA,CAAC5f,QAAQ,EAAE7O,KAAK,EAAE9c,IAAI,EAAEjX,IAAI,EAAE;EAC9C,IAAIA,IAAI,EAAE;IACR;EACF;EACA,IAAIrE,KAAK,GAAGo4B,KAAK,CAAC6O,QAAQ,CAAC;EAC3B,IAAI3+B,GAAG,GAAGgT,IAAI,CAAC2rB,QAAQ,CAAC;EACxB,IAAIA,QAAQ,KAAK,OAAO,EAAE;IACxBjnC,KAAK,GAAGvD,eAAe,CAACuD,KAAK,CAAC;IAC9BsI,GAAG,GAAG7L,eAAe,CAAC6L,GAAG,CAAC;EAC5B;EACA,OAAO;IAAC2+B,QAAQ,EAARA,QAAQ;IAAEjnC,KAAK,EAALA,KAAK;IAAEsI,GAAG,EAAHA;EAAG,CAAC;AAC/B;AACA,SAASw+C,QAAQA,CAACx0D,CAAC,EAAEQ,CAAC,EAAE6Q,IAAI,EAAEhE,EAAE,EAAE;EAChC,IAAIrN,CAAC,IAAIQ,CAAC,EAAE;IACV,OAAO6M,EAAE,CAACrN,CAAC,CAACqR,IAAI,CAAC,EAAE7Q,CAAC,CAAC6Q,IAAI,CAAC,CAAC;EAC7B;EACA,OAAOrR,CAAC,GAAGA,CAAC,CAACqR,IAAI,CAAC,GAAG7Q,CAAC,GAAGA,CAAC,CAAC6Q,IAAI,CAAC,GAAG,CAAC;AACtC;AACA,SAASq6C,SAASA,CAACl6B,IAAI,EAAEpgB,MAAM,EAAEujC,QAAQ,EAAE;EACzC,IAAMqW,QAAQ,GAAGx5B,IAAI,CAACw5B,QAAQ;EAC9B,IAAM5/B,MAAM,GAAGoG,IAAI,CAACpG,MAAM;EAC1B,IAAMqpC,OAAO,GAAGrjD,MAAM,CAACga,MAAM;EAC7B,IAAM6pB,KAAK,GAAG,EAAE;EAAC,IAAAyf,UAAA,GAAAv7C,0BAAA,CACK6xC,QAAQ;IAAA2J,MAAA;EAAA;IAA9B,KAAAD,UAAA,CAAAlzD,CAAA,MAAAmzD,MAAA,GAAAD,UAAA,CAAApyD,CAAA,IAAAgX,IAAA,GAAgC;MAAA,IAArB2Y,OAAO,GAAA0iC,MAAA,CAAAjoD,KAAA;MAChB,IAAKgB,KAAK,GAASukB,OAAO,CAArBvkB,KAAK;QAAEsI,GAAG,GAAIic,OAAO,CAAdjc,GAAG;MACfA,GAAG,GAAGy8C,cAAc,CAAC/kD,KAAK,EAAEsI,GAAG,EAAEoV,MAAM,CAAC;MACxC,IAAMuY,MAAM,GAAG4wB,SAAS,CAAC5f,QAAQ,EAAEvpB,MAAM,CAAC1d,KAAK,CAAC,EAAE0d,MAAM,CAACpV,GAAG,CAAC,EAAEic,OAAO,CAAClgB,IAAI,CAAC;MAC5E,IAAI,CAACX,MAAM,CAAC45C,QAAQ,EAAE;QACpB/V,KAAK,CAAC3lC,IAAI,CAAC;UACTo8B,MAAM,EAAEzZ,OAAO;UACf7gB,MAAM,EAAEuyB,MAAM;UACdj2B,KAAK,EAAE0d,MAAM,CAAC1d,KAAK,CAAC;UACpBsI,GAAG,EAAEoV,MAAM,CAACpV,GAAG;QACjB,CAAC,CAAC;QACF;MACF;MACA,IAAM4+C,cAAc,GAAG/rD,cAAc,CAACuI,MAAM,EAAEuyB,MAAM,CAAC;MAAC,IAAAkxB,WAAA,GAAA17C,0BAAA,CACpCy7C,cAAc;QAAAE,OAAA;MAAA;QAAhC,KAAAD,WAAA,CAAArzD,CAAA,MAAAszD,OAAA,GAAAD,WAAA,CAAAvyD,CAAA,IAAAgX,IAAA,GAAkC;UAAA,IAAvBy7C,GAAG,GAAAD,OAAA,CAAApoD,KAAA;UACZ,IAAMsoD,SAAS,GAAGT,SAAS,CAAC5f,QAAQ,EAAE8f,OAAO,CAACM,GAAG,CAACrnD,KAAK,CAAC,EAAE+mD,OAAO,CAACM,GAAG,CAAC/+C,GAAG,CAAC,EAAE++C,GAAG,CAAChjD,IAAI,CAAC;UACrF,IAAMkjD,WAAW,GAAGhrD,aAAa,CAACgoB,OAAO,EAAE7G,MAAM,EAAE4pC,SAAS,CAAC;UAAC,IAAAE,WAAA,GAAA/7C,0BAAA,CACrC87C,WAAW;YAAAE,OAAA;UAAA;YAApC,KAAAD,WAAA,CAAA1zD,CAAA,MAAA2zD,OAAA,GAAAD,WAAA,CAAA5yD,CAAA,IAAAgX,IAAA,GAAsC;cAAA,IAA3B87C,UAAU,GAAAD,OAAA,CAAAzoD,KAAA;cACnBuoC,KAAK,CAAC3lC,IAAI,CAAC;gBACTo8B,MAAM,EAAE0pB,UAAU;gBAClBhkD,MAAM,EAAE2jD,GAAG;gBACXrnD,KAAK,EAAAmS,eAAA,KACF80B,QAAQ,EAAG6f,QAAQ,CAAC7wB,MAAM,EAAEqxB,SAAS,EAAE,OAAO,EAAExnD,IAAI,CAACuC,GAAG,CAAC,CAC3D;gBACDiG,GAAG,EAAA6J,eAAA,KACA80B,QAAQ,EAAG6f,QAAQ,CAAC7wB,MAAM,EAAEqxB,SAAS,EAAE,KAAK,EAAExnD,IAAI,CAACC,GAAG,CAAC;cAE5D,CAAC,CAAC;YACJ;UAAC,SAAA8L,GAAA;YAAA27C,WAAA,CAAAh1D,CAAA,CAAAqZ,GAAA;UAAA;YAAA27C,WAAA,CAAAh0D,CAAA;UAAA;QACH;MAAC,SAAAqY,GAAA;QAAAs7C,WAAA,CAAA30D,CAAA,CAAAqZ,GAAA;MAAA;QAAAs7C,WAAA,CAAA3zD,CAAA;MAAA;IACH;EAAC,SAAAqY,GAAA;IAAAm7C,UAAA,CAAAx0D,CAAA,CAAAqZ,GAAA;EAAA;IAAAm7C,UAAA,CAAAxzD,CAAA;EAAA;EACD,OAAO+zC,KAAK;AACd;AACA,SAASogB,UAAUA,CAAC35C,GAAG,EAAE9F,KAAK,EAAE+tB,MAAM,EAAE;EACtC,IAAA2xB,qBAAA,GAAsB1/C,KAAK,CAAChJ,KAAK,CAAC6U,SAAS;IAApCrL,GAAG,GAAAk/C,qBAAA,CAAHl/C,GAAG;IAAEE,MAAM,GAAAg/C,qBAAA,CAANh/C,MAAM;EAClB,IAAAi/C,KAAA,GAA+B5xB,MAAM,IAAI,CAAC,CAAC;IAApCgR,QAAQ,GAAA4gB,KAAA,CAAR5gB,QAAQ;IAAEjnC,KAAK,GAAA6nD,KAAA,CAAL7nD,KAAK;IAAEsI,GAAG,GAAAu/C,KAAA,CAAHv/C,GAAG;EAC3B,IAAI2+B,QAAQ,KAAK,GAAG,EAAE;IACpBj5B,GAAG,CAACq3B,SAAS,EAAE;IACfr3B,GAAG,CAACqzC,IAAI,CAACrhD,KAAK,EAAE0I,GAAG,EAAEJ,GAAG,GAAGtI,KAAK,EAAE4I,MAAM,GAAGF,GAAG,CAAC;IAC/CsF,GAAG,CAAC4F,IAAI,EAAE;EACZ;AACF;AACA,SAASk0C,kBAAkBA,CAAC95C,GAAG,EAAEtK,MAAM,EAAEka,KAAK,EAAEqpB,QAAQ,EAAE;EACxD,IAAM8gB,iBAAiB,GAAGrkD,MAAM,CAACw6C,WAAW,CAACtgC,KAAK,EAAEqpB,QAAQ,CAAC;EAC7D,IAAI8gB,iBAAiB,EAAE;IACrB/5C,GAAG,CAACu3B,MAAM,CAACwiB,iBAAiB,CAACryD,CAAC,EAAEqyD,iBAAiB,CAACnyD,CAAC,CAAC;EACtD;AACF;AACA,SAASoyD,KAAKA,CAACh6C,GAAG,EAAEvK,GAAG,EAAE;EACvB,IAAOqgB,IAAI,GAAoCrgB,GAAG,CAA3CqgB,IAAI;IAAEpgB,MAAM,GAA4BD,GAAG,CAArCC,MAAM;IAAEujC,QAAQ,GAAkBxjC,GAAG,CAA7BwjC,QAAQ;IAAEt0C,KAAK,GAAW8Q,GAAG,CAAnB9Q,KAAK;IAAEuV,KAAK,GAAIzE,GAAG,CAAZyE,KAAK;EAC3C,IAAMo1C,QAAQ,GAAGU,SAAS,CAACl6B,IAAI,EAAEpgB,MAAM,EAAEujC,QAAQ,CAAC;EAAC,IAAAghB,WAAA,GAAAx8C,0BAAA,CACE6xC,QAAQ;IAAA4K,OAAA;EAAA;IAA7D,KAAAD,WAAA,CAAAn0D,CAAA,MAAAo0D,OAAA,GAAAD,WAAA,CAAArzD,CAAA,IAAAgX,IAAA,GAA+D;MAAA,IAAAu8C,aAAA,GAAAD,OAAA,CAAAlpD,KAAA;QAA3CopD,GAAG,GAAAD,aAAA,CAAXnqB,MAAM;QAAeqpB,GAAG,GAAAc,aAAA,CAAXzkD,MAAM;QAAO1D,KAAK,GAAAmoD,aAAA,CAALnoD,KAAK;QAAEsI,GAAG,GAAA6/C,aAAA,CAAH7/C,GAAG;MAC9C,IAAA+/C,UAAA,GAAgDD,GAAG,CAA5CxlC,KAAK;QAAA0lC,WAAA,GAAAD,UAAA,cAA8B,CAAC,CAAC,GAAAA,UAAA;QAAAE,qBAAA,GAAAD,WAAA,CAA7BvlC,eAAe;QAAfA,eAAe,GAAAwlC,qBAAA,cAAG51D,KAAK,GAAA41D,qBAAA;MACtCv6C,GAAG,CAAC22B,IAAI,EAAE;MACV32B,GAAG,CAAC8U,SAAS,GAAGC,eAAe;MAC/B4kC,UAAU,CAAC35C,GAAG,EAAE9F,KAAK,EAAE2+C,SAAS,CAAC5f,QAAQ,EAAEjnC,KAAK,EAAEsI,GAAG,CAAC,CAAC;MACvD0F,GAAG,CAACq3B,SAAS,EAAE;MACf,IAAMmjB,QAAQ,GAAG,CAAC,CAAC1kC,IAAI,CAACg4B,WAAW,CAAC9tC,GAAG,EAAEo6C,GAAG,CAAC;MAC7C,IAAII,QAAQ,EAAE;QACZx6C,GAAG,CAACipC,SAAS,EAAE;MACjB,CAAC,MAAM;QACL6Q,kBAAkB,CAAC95C,GAAG,EAAEtK,MAAM,EAAE4E,GAAG,EAAE2+B,QAAQ,CAAC;MAChD;MACA,IAAMwhB,UAAU,GAAG,CAAC,CAAC/kD,MAAM,CAACo4C,WAAW,CAAC9tC,GAAG,EAAEq5C,GAAG,EAAE;QAAC7wC,IAAI,EAAEgyC,QAAQ;QAAEngD,OAAO,EAAE;MAAI,CAAC,CAAC;MAClF,IAAMhE,IAAI,GAAGmkD,QAAQ,IAAIC,UAAU;MACnC,IAAI,CAACpkD,IAAI,EAAE;QACTyjD,kBAAkB,CAAC95C,GAAG,EAAEtK,MAAM,EAAE1D,KAAK,EAAEinC,QAAQ,CAAC;MAClD;MACAj5B,GAAG,CAACipC,SAAS,EAAE;MACfjpC,GAAG,CAAC4Z,IAAI,CAACvjB,IAAI,GAAG,SAAS,GAAG,SAAS,CAAC;MACtC2J,GAAG,CAAC62B,OAAO,EAAE;IACf;EAAC,SAAAh5B,GAAA;IAAAo8C,WAAA,CAAAz1D,CAAA,CAAAqZ,GAAA;EAAA;IAAAo8C,WAAA,CAAAz0D,CAAA;EAAA;AACH;AACA,SAASk1D,MAAMA,CAAC16C,GAAG,EAAEvK,GAAG,EAAE;EACxB,IAAOqgB,IAAI,GAAuCrgB,GAAG,CAA9CqgB,IAAI;IAAEpgB,MAAM,GAA+BD,GAAG,CAAxCC,MAAM;IAAEilD,KAAK,GAAwBllD,GAAG,CAAhCklD,KAAK;IAAE7C,KAAK,GAAiBriD,GAAG,CAAzBqiD,KAAK;IAAEhyC,IAAI,GAAWrQ,GAAG,CAAlBqQ,IAAI;IAAE5L,KAAK,GAAIzE,GAAG,CAAZyE,KAAK;EAC9C,IAAM++B,QAAQ,GAAGnjB,IAAI,CAAC1f,KAAK,GAAG,OAAO,GAAGX,GAAG,CAAC4I,IAAI;EAChD2B,GAAG,CAAC22B,IAAI,EAAE;EACV,IAAIsC,QAAQ,KAAK,GAAG,IAAI6e,KAAK,KAAK6C,KAAK,EAAE;IACvCh1C,KAAK,CAAC3F,GAAG,EAAEtK,MAAM,EAAEoQ,IAAI,CAACpL,GAAG,CAAC;IAC5Bs/C,KAAK,CAACh6C,GAAG,EAAE;MAAC8V,IAAI,EAAJA,IAAI;MAAEpgB,MAAM,EAANA,MAAM;MAAE/Q,KAAK,EAAEg2D,KAAK;MAAEzgD,KAAK,EAALA,KAAK;MAAE++B,QAAQ,EAARA;IAAQ,CAAC,CAAC;IACzDj5B,GAAG,CAAC62B,OAAO,EAAE;IACb72B,GAAG,CAAC22B,IAAI,EAAE;IACVhxB,KAAK,CAAC3F,GAAG,EAAEtK,MAAM,EAAEoQ,IAAI,CAAClL,MAAM,CAAC;EACjC;EACAo/C,KAAK,CAACh6C,GAAG,EAAE;IAAC8V,IAAI,EAAJA,IAAI;IAAEpgB,MAAM,EAANA,MAAM;IAAE/Q,KAAK,EAAEmzD,KAAK;IAAE59C,KAAK,EAALA,KAAK;IAAE++B,QAAQ,EAARA;EAAQ,CAAC,CAAC;EACzDj5B,GAAG,CAAC62B,OAAO,EAAE;AACf;AACA,SAAS+jB,QAAQA,CAAC56C,GAAG,EAAEgwB,MAAM,EAAElqB,IAAI,EAAE;EACnC,IAAMpQ,MAAM,GAAG6iD,SAAS,CAACvoB,MAAM,CAAC;EAChC,IAAOla,IAAI,GAAiBka,MAAM,CAA3Bla,IAAI;IAAE5b,KAAK,GAAU81B,MAAM,CAArB91B,KAAK;IAAEmE,IAAI,GAAI2xB,MAAM,CAAd3xB,IAAI;EACxB,IAAMw8C,QAAQ,GAAG/kC,IAAI,CAAC1c,OAAO;EAC7B,IAAMm9C,UAAU,GAAGsE,QAAQ,CAACjhC,IAAI;EAChC,IAAMj1B,KAAK,GAAGk2D,QAAQ,CAAC9lC,eAAe;EACtC,IAAA+lC,KAAA,GAAuCvE,UAAU,IAAI,CAAC,CAAC;IAAAwE,WAAA,GAAAD,KAAA,CAAhDH,KAAK;IAALA,KAAK,GAAAI,WAAA,cAAGp2D,KAAK,GAAAo2D,WAAA;IAAAC,WAAA,GAAAF,KAAA,CAAEhD,KAAK;IAALA,KAAK,GAAAkD,WAAA,cAAGr2D,KAAK,GAAAq2D,WAAA;EACnC,IAAItlD,MAAM,IAAIogB,IAAI,CAACpG,MAAM,CAACnd,MAAM,EAAE;IAChCtI,QAAQ,CAAC+V,GAAG,EAAE8F,IAAI,CAAC;IACnB40C,MAAM,CAAC16C,GAAG,EAAE;MAAC8V,IAAI,EAAJA,IAAI;MAAEpgB,MAAM,EAANA,MAAM;MAAEilD,KAAK,EAALA,KAAK;MAAE7C,KAAK,EAALA,KAAK;MAAEhyC,IAAI,EAAJA,IAAI;MAAE5L,KAAK,EAALA,KAAK;MAAEmE,IAAI,EAAJA;IAAI,CAAC,CAAC;IAC5DhU,UAAU,CAAC2V,GAAG,CAAC;EACjB;AACF;AACA,IAAIi7C,aAAa,GAAG;EAClBz+C,EAAE,EAAE,QAAQ;EACZ0+C,mBAAmB,WAAAA,oBAAChqD,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IACzC,IAAMmK,KAAK,GAAG,CAACrS,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,IAAI,EAAE,EAAE1P,MAAM;IAChD,IAAMkmD,OAAO,GAAG,EAAE;IAClB,IAAIv8C,IAAI,EAAEtX,CAAC,EAAEkxB,IAAI,EAAEka,MAAM;IACzB,KAAKprC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2e,KAAK,EAAE,EAAE3e,CAAC,EAAE;MAC1BsX,IAAI,GAAGhL,KAAK,CAACgR,cAAc,CAACtd,CAAC,CAAC;MAC9BkxB,IAAI,GAAG5Z,IAAI,CAAC+C,OAAO;MACnB+wB,MAAM,GAAG,IAAI;MACb,IAAIla,IAAI,IAAIA,IAAI,CAAC1c,OAAO,IAAI0c,IAAI,YAAY65B,WAAW,EAAE;QACvD3f,MAAM,GAAG;UACP33B,OAAO,EAAEnH,KAAK,CAACmhB,gBAAgB,CAACztB,CAAC,CAAC;UAClCyW,KAAK,EAAEzW,CAAC;UACRg1B,IAAI,EAAE48B,UAAU,CAAC1gC,IAAI,EAAElxB,CAAC,EAAE2e,KAAK,CAAC;UAChCrS,KAAK,EAALA,KAAK;UACLmN,IAAI,EAAEnC,IAAI,CAAC6B,UAAU,CAAC3E,OAAO,CAACsI,SAAS;UACvCxH,KAAK,EAAEgC,IAAI,CAACoB,MAAM;UAClBwY,IAAI,EAAJA;QACF,CAAC;MACH;MACA5Z,IAAI,CAACk/C,OAAO,GAAGprB,MAAM;MACrByoB,OAAO,CAAC7kD,IAAI,CAACo8B,MAAM,CAAC;IACtB;IACA,KAAKprC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2e,KAAK,EAAE,EAAE3e,CAAC,EAAE;MAC1BorC,MAAM,GAAGyoB,OAAO,CAAC7zD,CAAC,CAAC;MACnB,IAAI,CAACorC,MAAM,IAAIA,MAAM,CAACpW,IAAI,KAAK,KAAK,EAAE;QACpC;MACF;MACAoW,MAAM,CAACpW,IAAI,GAAG4+B,aAAa,CAACC,OAAO,EAAE7zD,CAAC,EAAEwU,OAAO,CAACs/C,SAAS,CAAC;IAC5D;EACF,CAAC;EACD2C,UAAU,WAAAA,WAACnqD,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAChC,IAAMvG,IAAI,GAAGuG,OAAO,CAACkiD,QAAQ,KAAK,YAAY;IAC9C,IAAMpgD,QAAQ,GAAGhK,KAAK,CAACmqB,4BAA4B,EAAE;IACrD,IAAMvV,IAAI,GAAG5U,KAAK,CAAC6U,SAAS;IAC5B,KAAK,IAAInhB,CAAC,GAAGsW,QAAQ,CAAC3I,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC7C,IAAMorC,MAAM,GAAG90B,QAAQ,CAACtW,CAAC,CAAC,CAACw2D,OAAO;MAClC,IAAI,CAACprB,MAAM,EAAE;QACX;MACF;MACAA,MAAM,CAACla,IAAI,CAACoB,mBAAmB,CAACpR,IAAI,EAAEkqB,MAAM,CAAC3xB,IAAI,CAAC;MAClD,IAAIxL,IAAI,EAAE;QACR+nD,QAAQ,CAAC1pD,KAAK,CAAC8O,GAAG,EAAEgwB,MAAM,EAAElqB,IAAI,CAAC;MACnC;IACF;EACF,CAAC;EACDy1C,kBAAkB,WAAAA,mBAACrqD,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IACxC,IAAIA,OAAO,CAACkiD,QAAQ,KAAK,oBAAoB,EAAE;MAC7C;IACF;IACA,IAAMpgD,QAAQ,GAAGhK,KAAK,CAACmqB,4BAA4B,EAAE;IACrD,KAAK,IAAIz2B,CAAC,GAAGsW,QAAQ,CAAC3I,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC7C,IAAMorC,MAAM,GAAG90B,QAAQ,CAACtW,CAAC,CAAC,CAACw2D,OAAO;MAClC,IAAIprB,MAAM,EAAE;QACV4qB,QAAQ,CAAC1pD,KAAK,CAAC8O,GAAG,EAAEgwB,MAAM,EAAE9+B,KAAK,CAAC6U,SAAS,CAAC;MAC9C;IACF;EACF,CAAC;EACDy1C,iBAAiB,WAAAA,kBAACtqD,KAAK,EAAE+0B,IAAI,EAAE7sB,OAAO,EAAE;IACtC,IAAM42B,MAAM,GAAG/J,IAAI,CAAC/pB,IAAI,CAACk/C,OAAO;IAChC,IAAI,CAACprB,MAAM,IAAIA,MAAM,CAACpW,IAAI,KAAK,KAAK,IAAIxgB,OAAO,CAACkiD,QAAQ,KAAK,mBAAmB,EAAE;MAChF;IACF;IACAV,QAAQ,CAAC1pD,KAAK,CAAC8O,GAAG,EAAEgwB,MAAM,EAAE9+B,KAAK,CAAC6U,SAAS,CAAC;EAC9C,CAAC;EACD9gB,QAAQ,EAAE;IACRyzD,SAAS,EAAE,IAAI;IACf4C,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,SAAS,EAAExjB,QAAQ,EAAK;EAC1C,IAAAyjB,oBAAA,GAAkDD,SAAS,CAAtDE,SAAS;IAATA,SAAS,GAAAD,oBAAA,cAAGzjB,QAAQ,GAAAyjB,oBAAA;IAAAE,mBAAA,GAAyBH,SAAS,CAAhCI,QAAQ;IAARA,QAAQ,GAAAD,mBAAA,cAAG3jB,QAAQ,GAAA2jB,mBAAA;EAC9C,IAAIH,SAAS,CAACK,aAAa,EAAE;IAC3BH,SAAS,GAAG9pD,IAAI,CAACC,GAAG,CAAC6pD,SAAS,EAAE1jB,QAAQ,CAAC;IACzC4jB,QAAQ,GAAGhqD,IAAI,CAACC,GAAG,CAAC+pD,QAAQ,EAAE5jB,QAAQ,CAAC;EACzC;EACA,OAAO;IACL4jB,QAAQ,EAARA,QAAQ;IACRF,SAAS,EAATA,SAAS;IACTI,UAAU,EAAElqD,IAAI,CAACuC,GAAG,CAAC6jC,QAAQ,EAAE0jB,SAAS;EAC1C,CAAC;AACH,CAAC;AACD,IAAMK,UAAU,GAAG,SAAbA,UAAUA,CAAI33D,CAAC,EAAEQ,CAAC;EAAA,OAAKR,CAAC,KAAK,IAAI,IAAIQ,CAAC,KAAK,IAAI,IAAIR,CAAC,CAACqX,YAAY,KAAK7W,CAAC,CAAC6W,YAAY,IAAIrX,CAAC,CAAC+W,KAAK,KAAKvW,CAAC,CAACuW,KAAK;AAAA;AAAC,IAC5G6gD,MAAM,0BAAAC,SAAA;EAAAzwC,SAAA,CAAAwwC,MAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAxwC,YAAA,CAAAswC,MAAA;EACV,SAAAA,OAAY1jD,MAAM,EAAE;IAAA,IAAA6jD,OAAA;IAAA9rD,eAAA,OAAA2rD,MAAA;IAClBG,OAAA,GAAAD,QAAA,CAAAjqD,IAAA;IACAkqD,OAAA,CAAKC,MAAM,GAAG,KAAK;IACnBD,OAAA,CAAKE,cAAc,GAAG,EAAE;IACxBF,OAAA,CAAKG,YAAY,GAAG,IAAI;IACxBH,OAAA,CAAKI,YAAY,GAAG,KAAK;IACzBJ,OAAA,CAAKnrD,KAAK,GAAGsH,MAAM,CAACtH,KAAK;IACzBmrD,OAAA,CAAKjjD,OAAO,GAAGZ,MAAM,CAACY,OAAO;IAC7BijD,OAAA,CAAKr8C,GAAG,GAAGxH,MAAM,CAACwH,GAAG;IACrBq8C,OAAA,CAAKK,WAAW,GAAG7rD,SAAS;IAC5BwrD,OAAA,CAAKM,WAAW,GAAG9rD,SAAS;IAC5BwrD,OAAA,CAAKO,UAAU,GAAG/rD,SAAS;IAC3BwrD,OAAA,CAAKrpC,SAAS,GAAGniB,SAAS;IAC1BwrD,OAAA,CAAKtpC,QAAQ,GAAGliB,SAAS;IACzBwrD,OAAA,CAAK3hD,GAAG,GAAG7J,SAAS;IACpBwrD,OAAA,CAAKzhD,MAAM,GAAG/J,SAAS;IACvBwrD,OAAA,CAAKxhD,IAAI,GAAGhK,SAAS;IACrBwrD,OAAA,CAAK1hD,KAAK,GAAG9J,SAAS;IACtBwrD,OAAA,CAAKlvC,MAAM,GAAGtc,SAAS;IACvBwrD,OAAA,CAAKjvC,KAAK,GAAGvc,SAAS;IACtBwrD,OAAA,CAAKhvB,QAAQ,GAAGx8B,SAAS;IACzBwrD,OAAA,CAAKrgC,QAAQ,GAAGnrB,SAAS;IACzBwrD,OAAA,CAAK/nC,MAAM,GAAGzjB,SAAS;IACvBwrD,OAAA,CAAKz9B,QAAQ,GAAG/tB,SAAS;IAAC,OAAAwrD,OAAA;EAC5B;EAACvrD,YAAA,CAAAorD,MAAA;IAAAnrD,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOmc,QAAQ,EAAEC,SAAS,EAAEgc,OAAO,EAAE;MACnC,IAAM98B,EAAE,GAAG,IAAI;MACfA,EAAE,CAAC6gB,QAAQ,GAAGA,QAAQ;MACtB7gB,EAAE,CAAC8gB,SAAS,GAAGA,SAAS;MACxB9gB,EAAE,CAACm7B,QAAQ,GAAG2B,OAAO;MACrB98B,EAAE,CAACi9B,aAAa,EAAE;MAClBj9B,EAAE,CAAC2qD,WAAW,EAAE;MAChB3qD,EAAE,CAACg+B,GAAG,EAAE;IACV;EAAC;IAAAn/B,GAAA;IAAAC,KAAA,EACD,SAAAm+B,cAAA,EAAgB;MACd,IAAMj9B,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACua,YAAY,EAAE,EAAE;QACrBva,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAAC6gB,QAAQ;QACtB7gB,EAAE,CAAC2I,IAAI,GAAG3I,EAAE,CAACm7B,QAAQ,CAACxyB,IAAI;QAC1B3I,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAACkb,KAAK;MACrB,CAAC,MAAM;QACLlb,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAAC8gB,SAAS;QACxB9gB,EAAE,CAACwI,GAAG,GAAGxI,EAAE,CAACm7B,QAAQ,CAAC3yB,GAAG;QACxBxI,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACib,MAAM;MACvB;IACF;EAAC;IAAApc,GAAA;IAAAC,KAAA,EACD,SAAA6rD,YAAA,EAAc;MACZ,IAAM3qD,EAAE,GAAG,IAAI;MACf,IAAMwpD,SAAS,GAAGxpD,EAAE,CAACkH,OAAO,CAAC2K,MAAM,IAAI,CAAC,CAAC;MACzC,IAAI24C,WAAW,GAAGrzD,QAAQ,CAACqyD,SAAS,CAACjnC,cAAc,EAAE,CAACviB,EAAE,CAAChB,KAAK,CAAC,EAAEgB,EAAE,CAAC,IAAI,EAAE;MAC1E,IAAIwpD,SAAS,CAAC98C,MAAM,EAAE;QACpB89C,WAAW,GAAGA,WAAW,CAAC99C,MAAM,CAAC,UAAC9L,IAAI;UAAA,OAAK4oD,SAAS,CAAC98C,MAAM,CAAC9L,IAAI,EAAEZ,EAAE,CAAChB,KAAK,CAAC4K,IAAI,CAAC;QAAA,EAAC;MACnF;MACA,IAAI4/C,SAAS,CAACnyC,IAAI,EAAE;QAClBmzC,WAAW,GAAGA,WAAW,CAACnzC,IAAI,CAAC,UAACjlB,CAAC,EAAEQ,CAAC;UAAA,OAAK42D,SAAS,CAACnyC,IAAI,CAACjlB,CAAC,EAAEQ,CAAC,EAAEoN,EAAE,CAAChB,KAAK,CAAC4K,IAAI,CAAC;QAAA,EAAC;MAC/E;MACA,IAAI5J,EAAE,CAACkH,OAAO,CAACiB,OAAO,EAAE;QACtBqiD,WAAW,CAACriD,OAAO,EAAE;MACvB;MACAnI,EAAE,CAACwqD,WAAW,GAAGA,WAAW;IAC9B;EAAC;IAAA3rD,GAAA;IAAAC,KAAA,EACD,SAAAk/B,IAAA,EAAM;MACJ,IAAMh+B,EAAE,GAAG,IAAI;MACf,IAAOkH,OAAO,GAASlH,EAAE,CAAlBkH,OAAO;QAAE4G,GAAG,GAAI9N,EAAE,CAAT8N,GAAG;MACnB,IAAI,CAAC5G,OAAO,CAAC4f,OAAO,EAAE;QACpB9mB,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAACib,MAAM,GAAG,CAAC;QACxB;MACF;MACA,IAAMuuC,SAAS,GAAGtiD,OAAO,CAAC2K,MAAM;MAChC,IAAM+4C,SAAS,GAAGvyD,MAAM,CAACmxD,SAAS,CAAClvB,IAAI,CAAC;MACxC,IAAM0L,QAAQ,GAAG4kB,SAAS,CAACjjD,IAAI;MAC/B,IAAM+3B,WAAW,GAAG1/B,EAAE,CAAC6qD,mBAAmB,EAAE;MAC5C,IAAAC,WAAA,GAA+BvB,UAAU,CAACC,SAAS,EAAExjB,QAAQ,CAAC;QAAvD4jB,QAAQ,GAAAkB,WAAA,CAARlB,QAAQ;QAAEE,UAAU,GAAAgB,WAAA,CAAVhB,UAAU;MAC3B,IAAI5uC,KAAK,EAAED,MAAM;MACjBnN,GAAG,CAACwsB,IAAI,GAAGswB,SAAS,CAACzpB,MAAM;MAC3B,IAAInhC,EAAE,CAACua,YAAY,EAAE,EAAE;QACrBW,KAAK,GAAGlb,EAAE,CAAC6gB,QAAQ;QACnB5F,MAAM,GAAGjb,EAAE,CAAC+qD,QAAQ,CAACrrB,WAAW,EAAEsG,QAAQ,EAAE4jB,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;MACxE,CAAC,MAAM;QACL7uC,MAAM,GAAGjb,EAAE,CAAC8gB,SAAS;QACrB5F,KAAK,GAAGlb,EAAE,CAACgrD,QAAQ,CAACtrB,WAAW,EAAEsG,QAAQ,EAAE4jB,QAAQ,EAAEE,UAAU,CAAC,GAAG,EAAE;MACvE;MACA9pD,EAAE,CAACkb,KAAK,GAAGtb,IAAI,CAACC,GAAG,CAACqb,KAAK,EAAEhU,OAAO,CAAC2Z,QAAQ,IAAI7gB,EAAE,CAAC6gB,QAAQ,CAAC;MAC3D7gB,EAAE,CAACib,MAAM,GAAGrb,IAAI,CAACC,GAAG,CAACob,MAAM,EAAE/T,OAAO,CAAC4Z,SAAS,IAAI9gB,EAAE,CAAC8gB,SAAS,CAAC;IACjE;EAAC;IAAAjiB,GAAA;IAAAC,KAAA,EACD,SAAAisD,SAASrrB,WAAW,EAAEsG,QAAQ,EAAE4jB,QAAQ,EAAEE,UAAU,EAAE;MACpD,IAAM9pD,EAAE,GAAG,IAAI;MACf,IAAO8N,GAAG,GAA4C9N,EAAE,CAAjD8N,GAAG;QAAE+S,QAAQ,GAAkC7gB,EAAE,CAA5C6gB,QAAQ;QAAqBoO,OAAO,GAAMjvB,EAAE,CAAlCkH,OAAO,CAAG2K,MAAM,CAAGod,OAAO;MAChD,IAAMg8B,QAAQ,GAAGjrD,EAAE,CAACqqD,cAAc,GAAG,EAAE;MACvC,IAAMK,UAAU,GAAG1qD,EAAE,CAAC0qD,UAAU,GAAG,CAAC,CAAC,CAAC;MACtC,IAAMlwB,UAAU,GAAGsvB,UAAU,GAAG76B,OAAO;MACvC,IAAIi8B,WAAW,GAAGxrB,WAAW;MAC7B5xB,GAAG,CAAC01B,SAAS,GAAG,MAAM;MACtB11B,GAAG,CAAC61B,YAAY,GAAG,QAAQ;MAC3B,IAAIwnB,GAAG,GAAG,CAAC,CAAC;MACZ,IAAI3iD,GAAG,GAAG,CAACgyB,UAAU;MACrBx6B,EAAE,CAACwqD,WAAW,CAAChrD,OAAO,CAAC,UAAC2jB,UAAU,EAAEzwB,CAAC,EAAK;QACxC,IAAM04D,SAAS,GAAGxB,QAAQ,GAAI5jB,QAAQ,GAAG,CAAE,GAAGl4B,GAAG,CAACu9C,WAAW,CAACloC,UAAU,CAACR,IAAI,CAAC,CAACzH,KAAK;QACpF,IAAIxoB,CAAC,KAAK,CAAC,IAAIg4D,UAAU,CAACA,UAAU,CAACrqD,MAAM,GAAG,CAAC,CAAC,GAAG+qD,SAAS,GAAG,CAAC,GAAGn8B,OAAO,GAAGpO,QAAQ,EAAE;UACrFqqC,WAAW,IAAI1wB,UAAU;UACzBkwB,UAAU,CAACA,UAAU,CAACrqD,MAAM,IAAI3N,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;UACnD8V,GAAG,IAAIgyB,UAAU;UACjB2wB,GAAG,EAAE;QACP;QACAF,QAAQ,CAACv4D,CAAC,CAAC,GAAG;UAACiW,IAAI,EAAE,CAAC;UAAEH,GAAG,EAAHA,GAAG;UAAE2iD,GAAG,EAAHA,GAAG;UAAEjwC,KAAK,EAAEkwC,SAAS;UAAEnwC,MAAM,EAAE6uC;QAAU,CAAC;QACvEY,UAAU,CAACA,UAAU,CAACrqD,MAAM,GAAG,CAAC,CAAC,IAAI+qD,SAAS,GAAGn8B,OAAO;MAC1D,CAAC,CAAC;MACF,OAAOi8B,WAAW;IACpB;EAAC;IAAArsD,GAAA;IAAAC,KAAA,EACD,SAAAksD,SAAStrB,WAAW,EAAEsG,QAAQ,EAAE4jB,QAAQ,EAAEE,UAAU,EAAE;MACpD,IAAM9pD,EAAE,GAAG,IAAI;MACf,IAAO8N,GAAG,GAA6C9N,EAAE,CAAlD8N,GAAG;QAAEgT,SAAS,GAAkC9gB,EAAE,CAA7C8gB,SAAS;QAAqBmO,OAAO,GAAMjvB,EAAE,CAAlCkH,OAAO,CAAG2K,MAAM,CAAGod,OAAO;MACjD,IAAMg8B,QAAQ,GAAGjrD,EAAE,CAACqqD,cAAc,GAAG,EAAE;MACvC,IAAMI,WAAW,GAAGzqD,EAAE,CAACyqD,WAAW,GAAG,EAAE;MACvC,IAAMa,WAAW,GAAGxqC,SAAS,GAAG4e,WAAW;MAC3C,IAAI6rB,UAAU,GAAGt8B,OAAO;MACxB,IAAIu8B,eAAe,GAAG,CAAC;MACvB,IAAIC,gBAAgB,GAAG,CAAC;MACxB,IAAI9iD,IAAI,GAAG,CAAC;MACZ,IAAI+iD,GAAG,GAAG,CAAC;MACX1rD,EAAE,CAACwqD,WAAW,CAAChrD,OAAO,CAAC,UAAC2jB,UAAU,EAAEzwB,CAAC,EAAK;QACxC,IAAM04D,SAAS,GAAGxB,QAAQ,GAAI5jB,QAAQ,GAAG,CAAE,GAAGl4B,GAAG,CAACu9C,WAAW,CAACloC,UAAU,CAACR,IAAI,CAAC,CAACzH,KAAK;QACpF,IAAIxoB,CAAC,GAAG,CAAC,IAAI+4D,gBAAgB,GAAG3B,UAAU,GAAG,CAAC,GAAG76B,OAAO,GAAGq8B,WAAW,EAAE;UACtEC,UAAU,IAAIC,eAAe,GAAGv8B,OAAO;UACvCw7B,WAAW,CAAC/oD,IAAI,CAAC;YAACwZ,KAAK,EAAEswC,eAAe;YAAEvwC,MAAM,EAAEwwC;UAAgB,CAAC,CAAC;UACpE9iD,IAAI,IAAI6iD,eAAe,GAAGv8B,OAAO;UACjCy8B,GAAG,EAAE;UACLF,eAAe,GAAGC,gBAAgB,GAAG,CAAC;QACxC;QACAR,QAAQ,CAACv4D,CAAC,CAAC,GAAG;UAACiW,IAAI,EAAJA,IAAI;UAAEH,GAAG,EAAEijD,gBAAgB;UAAEC,GAAG,EAAHA,GAAG;UAAExwC,KAAK,EAAEkwC,SAAS;UAAEnwC,MAAM,EAAE6uC;QAAU,CAAC;QACtF0B,eAAe,GAAG5rD,IAAI,CAACuC,GAAG,CAACqpD,eAAe,EAAEJ,SAAS,CAAC;QACtDK,gBAAgB,IAAI3B,UAAU,GAAG76B,OAAO;MAC1C,CAAC,CAAC;MACFs8B,UAAU,IAAIC,eAAe;MAC7Bf,WAAW,CAAC/oD,IAAI,CAAC;QAACwZ,KAAK,EAAEswC,eAAe;QAAEvwC,MAAM,EAAEwwC;MAAgB,CAAC,CAAC;MACpE,OAAOF,UAAU;IACnB;EAAC;IAAA1sD,GAAA;IAAAC,KAAA,EACD,SAAA6sD,eAAA,EAAiB;MACf,IAAM3rD,EAAE,GAAG,IAAI;MACf,IAAI,CAACA,EAAE,CAACkH,OAAO,CAAC4f,OAAO,EAAE;QACvB;MACF;MACA,IAAM4Y,WAAW,GAAG1/B,EAAE,CAAC6qD,mBAAmB,EAAE;MAC5C,IAAuBI,QAAQ,GAA8CjrD,EAAE,CAAxEqqD,cAAc;QAAAuB,YAAA,GAAwD5rD,EAAE,CAA9CkH,OAAO;QAAGiwB,KAAK,GAAAy0B,YAAA,CAALz0B,KAAK;QAAWlI,OAAO,GAAA28B,YAAA,CAAhB/5C,MAAM,CAAGod,OAAO;QAAG48B,GAAG,GAAAD,YAAA,CAAHC,GAAG;MACxE,IAAI,IAAI,CAACtxC,YAAY,EAAE,EAAE;QACvB,IAAI4wC,GAAG,GAAG,CAAC;QACX,IAAIxiD,IAAI,GAAGlQ,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAAC2I,IAAI,GAAGsmB,OAAO,EAAEjvB,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAAC0qD,UAAU,CAACS,GAAG,CAAC,CAAC;QAAC,IAAAW,WAAA,GAAAvgD,0BAAA,CAC9D0/C,QAAQ;UAAAc,OAAA;QAAA;UAA7B,KAAAD,WAAA,CAAAl4D,CAAA,MAAAm4D,OAAA,GAAAD,WAAA,CAAAp3D,CAAA,IAAAgX,IAAA,GAA+B;YAAA,IAApBsgD,MAAM,GAAAD,OAAA,CAAAjtD,KAAA;YACf,IAAIqsD,GAAG,KAAKa,MAAM,CAACb,GAAG,EAAE;cACtBA,GAAG,GAAGa,MAAM,CAACb,GAAG;cAChBxiD,IAAI,GAAGlQ,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAAC2I,IAAI,GAAGsmB,OAAO,EAAEjvB,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAAC0qD,UAAU,CAACS,GAAG,CAAC,CAAC;YAChF;YACAa,MAAM,CAACxjD,GAAG,IAAIxI,EAAE,CAACwI,GAAG,GAAGk3B,WAAW,GAAGzQ,OAAO;YAC5C+8B,MAAM,CAACrjD,IAAI,GAAGA,IAAI;YAClBA,IAAI,IAAIqjD,MAAM,CAAC9wC,KAAK,GAAG+T,OAAO;UAChC;QAAC,SAAAtjB,GAAA;UAAAmgD,WAAA,CAAAx5D,CAAA,CAAAqZ,GAAA;QAAA;UAAAmgD,WAAA,CAAAx4D,CAAA;QAAA;QACD,IAAIu4D,GAAG,EAAE;UACP,IAAMI,MAAM,GAAGhB,QAAQ,CAACjpD,MAAM,CAAC,UAACygB,GAAG,EAAEsJ,GAAG,EAAK;YAC3CtJ,GAAG,CAACsJ,GAAG,CAACo/B,GAAG,CAAC,GAAG1oC,GAAG,CAACsJ,GAAG,CAACo/B,GAAG,CAAC,IAAI,EAAE;YACjC1oC,GAAG,CAACsJ,GAAG,CAACo/B,GAAG,CAAC,CAACzpD,IAAI,CAACqqB,GAAG,CAAC;YACtB,OAAOtJ,GAAG;UACZ,CAAC,EAAE,CAAC,CAAC,CAAC;UACN,IAAMypC,QAAQ,GAAG,EAAE;UACnB3mD,MAAM,CAACC,IAAI,CAACymD,MAAM,CAAC,CAACzsD,OAAO,CAAC,UAAAX,GAAG,EAAI;YACjCotD,MAAM,CAACptD,GAAG,CAAC,CAACsJ,OAAO,EAAE;YACrB+jD,QAAQ,CAACxqD,IAAI,CAAAG,KAAA,CAAbqqD,QAAQ,EAAApqD,kBAAA,CAASmqD,MAAM,CAACptD,GAAG,CAAC,EAAC;UAC/B,CAAC,CAAC;UACFmB,EAAE,CAACqqD,cAAc,GAAG6B,QAAQ;QAC9B;MACF,CAAC,MAAM;QACL,IAAIR,GAAG,GAAG,CAAC;QACX,IAAIljD,GAAG,GAAG/P,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAACwI,GAAG,GAAGk3B,WAAW,GAAGzQ,OAAO,EAAEjvB,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACyqD,WAAW,CAACiB,GAAG,CAAC,CAACzwC,MAAM,CAAC;QAAC,IAAAkxC,WAAA,GAAA5gD,0BAAA,CACnF0/C,QAAQ;UAAAmB,OAAA;QAAA;UAA7B,KAAAD,WAAA,CAAAv4D,CAAA,MAAAw4D,OAAA,GAAAD,WAAA,CAAAz3D,CAAA,IAAAgX,IAAA,GAA+B;YAAA,IAApBsgD,OAAM,GAAAI,OAAA,CAAAttD,KAAA;YACf,IAAIktD,OAAM,CAACN,GAAG,KAAKA,GAAG,EAAE;cACtBA,GAAG,GAAGM,OAAM,CAACN,GAAG;cAChBljD,GAAG,GAAG/P,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAACwI,GAAG,GAAGk3B,WAAW,GAAGzQ,OAAO,EAAEjvB,EAAE,CAAC0I,MAAM,GAAG1I,EAAE,CAACyqD,WAAW,CAACiB,GAAG,CAAC,CAACzwC,MAAM,CAAC;YACrG;YACA+wC,OAAM,CAACxjD,GAAG,GAAGA,GAAG;YAChBwjD,OAAM,CAACrjD,IAAI,IAAI3I,EAAE,CAAC2I,IAAI,GAAGsmB,OAAO;YAChCzmB,GAAG,IAAIwjD,OAAM,CAAC/wC,MAAM,GAAGgU,OAAO;UAChC;QAAC,SAAAtjB,GAAA;UAAAwgD,WAAA,CAAA75D,CAAA,CAAAqZ,GAAA;QAAA;UAAAwgD,WAAA,CAAA74D,CAAA;QAAA;MACH;IACF;EAAC;IAAAuL,GAAA;IAAAC,KAAA,EACD,SAAAyb,aAAA,EAAe;MACb,OAAO,IAAI,CAACrT,OAAO,CAAC4iB,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC5iB,OAAO,CAAC4iB,QAAQ,KAAK,QAAQ;IAC9E;EAAC;IAAAjrB,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAIA,EAAE,CAACkH,OAAO,CAAC4f,OAAO,EAAE;QACtB,IAAMhZ,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;QAClB/V,QAAQ,CAAC+V,GAAG,EAAE9N,EAAE,CAAC;QACjBA,EAAE,CAACqsD,KAAK,EAAE;QACVl0D,UAAU,CAAC2V,GAAG,CAAC;MACjB;IACF;EAAC;IAAAjP,GAAA;IAAAC,KAAA,EACD,SAAAutD,MAAA,EAAQ;MACN,IAAMrsD,EAAE,GAAG,IAAI;MACf,IAAgBkI,IAAI,GAAkClI,EAAE,CAAjDkH,OAAO;QAAQujD,WAAW,GAAqBzqD,EAAE,CAAlCyqD,WAAW;QAAEC,UAAU,GAAS1qD,EAAE,CAArB0qD,UAAU;QAAE58C,GAAG,GAAI9N,EAAE,CAAT8N,GAAG;MAClD,IAAOqpB,KAAK,GAAuBjvB,IAAI,CAAhCivB,KAAK;QAAUqyB,SAAS,GAAIthD,IAAI,CAAzB2J,MAAM;MACpB,IAAMy6C,YAAY,GAAGv5D,QAAQ,CAACN,KAAK;MACnC,IAAM85D,SAAS,GAAG9vD,aAAa,CAACyL,IAAI,CAAC2jD,GAAG,EAAE7rD,EAAE,CAAC2I,IAAI,EAAE3I,EAAE,CAACkb,KAAK,CAAC;MAC5D,IAAM0vC,SAAS,GAAGvyD,MAAM,CAACmxD,SAAS,CAAClvB,IAAI,CAAC;MACxC,IAAckyB,SAAS,GAAahD,SAAS,CAAtC/2D,KAAK;QAAaw8B,OAAO,GAAIu6B,SAAS,CAApBv6B,OAAO;MAChC,IAAM+W,QAAQ,GAAG4kB,SAAS,CAACjjD,IAAI;MAC/B,IAAM8kD,YAAY,GAAGzmB,QAAQ,GAAG,CAAC;MACjC,IAAI0mB,MAAM;MACV1sD,EAAE,CAACylC,SAAS,EAAE;MACd33B,GAAG,CAAC01B,SAAS,GAAG+oB,SAAS,CAAC/oB,SAAS,CAAC,MAAM,CAAC;MAC3C11B,GAAG,CAAC61B,YAAY,GAAG,QAAQ;MAC3B71B,GAAG,CAACkV,SAAS,GAAG,GAAG;MACnBlV,GAAG,CAACwsB,IAAI,GAAGswB,SAAS,CAACzpB,MAAM;MAC3B,IAAAwrB,YAAA,GAA0CpD,UAAU,CAACC,SAAS,EAAExjB,QAAQ,CAAC;QAAlE4jB,QAAQ,GAAA+C,YAAA,CAAR/C,QAAQ;QAAEF,SAAS,GAAAiD,YAAA,CAATjD,SAAS;QAAEI,UAAU,GAAA6C,YAAA,CAAV7C,UAAU;MACtC,IAAM8C,aAAa,GAAG,SAAhBA,aAAaA,CAAYp3D,CAAC,EAAEE,CAAC,EAAEytB,UAAU,EAAE;QAC/C,IAAI5H,KAAK,CAACquC,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,IAAIruC,KAAK,CAACmuC,SAAS,CAAC,IAAIA,SAAS,GAAG,CAAC,EAAE;UACzE;QACF;QACA57C,GAAG,CAAC22B,IAAI,EAAE;QACV,IAAMzhB,SAAS,GAAG/vB,cAAc,CAACkwB,UAAU,CAACH,SAAS,EAAE,CAAC,CAAC;QACzDlV,GAAG,CAAC8U,SAAS,GAAG3vB,cAAc,CAACkwB,UAAU,CAACP,SAAS,EAAE0pC,YAAY,CAAC;QAClEx+C,GAAG,CAAC8sC,OAAO,GAAG3nD,cAAc,CAACkwB,UAAU,CAACy3B,OAAO,EAAE,MAAM,CAAC;QACxD9sC,GAAG,CAACo3B,cAAc,GAAGjyC,cAAc,CAACkwB,UAAU,CAAC+hB,cAAc,EAAE,CAAC,CAAC;QACjEp3B,GAAG,CAAC0rC,QAAQ,GAAGvmD,cAAc,CAACkwB,UAAU,CAACq2B,QAAQ,EAAE,OAAO,CAAC;QAC3D1rC,GAAG,CAACkV,SAAS,GAAGA,SAAS;QACzBlV,GAAG,CAACgV,WAAW,GAAG7vB,cAAc,CAACkwB,UAAU,CAACL,WAAW,EAAEwpC,YAAY,CAAC;QACtEx+C,GAAG,CAACm3B,WAAW,CAAChyC,cAAc,CAACkwB,UAAU,CAAC0pC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACxD,IAAIrD,SAAS,CAACK,aAAa,EAAE;UAC3B,IAAMiD,WAAW,GAAG;YAClB/uC,MAAM,EAAE6rC,QAAQ,GAAGhqD,IAAI,CAACmtD,KAAK,GAAG,CAAC;YACjCvqC,UAAU,EAAEW,UAAU,CAACX,UAAU;YACjCpE,QAAQ,EAAE+E,UAAU,CAAC/E,QAAQ;YAC7B4D,WAAW,EAAEgB;UACf,CAAC;UACD,IAAMvB,OAAO,GAAG8qC,SAAS,CAACS,KAAK,CAACx3D,CAAC,EAAEo0D,QAAQ,GAAG,CAAC,CAAC;UAChD,IAAMloC,OAAO,GAAGhsB,CAAC,GAAG+2D,YAAY;UAChC5wD,SAAS,CAACiS,GAAG,EAAEg/C,WAAW,EAAErrC,OAAO,EAAEC,OAAO,CAAC;QAC/C,CAAC,MAAM;UACL,IAAMurC,OAAO,GAAGv3D,CAAC,GAAGkK,IAAI,CAACuC,GAAG,CAAC,CAAC6jC,QAAQ,GAAG0jB,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;UAC3D,IAAMwD,QAAQ,GAAGX,SAAS,CAACY,UAAU,CAAC33D,CAAC,EAAEo0D,QAAQ,CAAC;UAClD,IAAMzS,YAAY,GAAGh7C,aAAa,CAACgnB,UAAU,CAACg0B,YAAY,CAAC;UAC3DrpC,GAAG,CAACq3B,SAAS,EAAE;UACf,IAAI5/B,MAAM,CAACyB,MAAM,CAACmwC,YAAY,CAAC,CAAChM,IAAI,CAAC,UAAAn4C,CAAC;YAAA,OAAIA,CAAC,KAAK,CAAC;UAAA,EAAC,EAAE;YAClD+I,kBAAkB,CAAC+R,GAAG,EAAE;cACtBtY,CAAC,EAAE03D,QAAQ;cACXx3D,CAAC,EAAEu3D,OAAO;cACV33D,CAAC,EAAEs0D,QAAQ;cACXl2D,CAAC,EAAEg2D,SAAS;cACZ3rC,MAAM,EAAEo5B;YACV,CAAC,CAAC;UACJ,CAAC,MAAM;YACLrpC,GAAG,CAACqzC,IAAI,CAAC+L,QAAQ,EAAED,OAAO,EAAErD,QAAQ,EAAEF,SAAS,CAAC;UAClD;UACA57C,GAAG,CAAC4Z,IAAI,EAAE;UACV,IAAI1E,SAAS,KAAK,CAAC,EAAE;YACnBlV,GAAG,CAACw3B,MAAM,EAAE;UACd;QACF;QACAx3B,GAAG,CAAC62B,OAAO,EAAE;MACf,CAAC;MACD,IAAMyoB,QAAQ,GAAG,SAAXA,QAAQA,CAAY53D,CAAC,EAAEE,CAAC,EAAEytB,UAAU,EAAE;QAC1ClrB,UAAU,CAAC6V,GAAG,EAAEqV,UAAU,CAACR,IAAI,EAAEntB,CAAC,EAAEE,CAAC,GAAIo0D,UAAU,GAAG,CAAE,EAAEc,SAAS,EAAE;UACnEyC,aAAa,EAAElqC,UAAU,CAACF,MAAM;UAChCugB,SAAS,EAAE+oB,SAAS,CAAC/oB,SAAS,CAACrgB,UAAU,CAACqgB,SAAS;QACrD,CAAC,CAAC;MACJ,CAAC;MACD,IAAMjpB,YAAY,GAAGva,EAAE,CAACua,YAAY,EAAE;MACtC,IAAMmlB,WAAW,GAAG,IAAI,CAACmrB,mBAAmB,EAAE;MAC9C,IAAItwC,YAAY,EAAE;QAChBmyC,MAAM,GAAG;UACPl3D,CAAC,EAAEiD,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAAC2I,IAAI,GAAGsmB,OAAO,EAAEjvB,EAAE,CAACyI,KAAK,GAAGiiD,UAAU,CAAC,CAAC,CAAC,CAAC;UACrEh1D,CAAC,EAAEsK,EAAE,CAACwI,GAAG,GAAGymB,OAAO,GAAGyQ,WAAW;UACjC9b,IAAI,EAAE;QACR,CAAC;MACH,CAAC,MAAM;QACL8oC,MAAM,GAAG;UACPl3D,CAAC,EAAEwK,EAAE,CAAC2I,IAAI,GAAGsmB,OAAO;UACpBv5B,CAAC,EAAE+C,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAACwI,GAAG,GAAGk3B,WAAW,GAAGzQ,OAAO,EAAEjvB,EAAE,CAAC0I,MAAM,GAAG+hD,WAAW,CAAC,CAAC,CAAC,CAACxvC,MAAM,CAAC;UAC3F2I,IAAI,EAAE;QACR,CAAC;MACH;MACAjnB,qBAAqB,CAACqD,EAAE,CAAC8N,GAAG,EAAE5F,IAAI,CAAColD,aAAa,CAAC;MACjD,IAAM9yB,UAAU,GAAGsvB,UAAU,GAAG76B,OAAO;MACvCjvB,EAAE,CAACwqD,WAAW,CAAChrD,OAAO,CAAC,UAAC2jB,UAAU,EAAEzwB,CAAC,EAAK;QACxCob,GAAG,CAACgV,WAAW,GAAGK,UAAU,CAACqpC,SAAS,IAAIA,SAAS;QACnD1+C,GAAG,CAAC8U,SAAS,GAAGO,UAAU,CAACqpC,SAAS,IAAIA,SAAS;QACjD,IAAMe,SAAS,GAAGz/C,GAAG,CAACu9C,WAAW,CAACloC,UAAU,CAACR,IAAI,CAAC,CAACzH,KAAK;QACxD,IAAMsoB,SAAS,GAAG+oB,SAAS,CAAC/oB,SAAS,CAACrgB,UAAU,CAACqgB,SAAS,KAAKrgB,UAAU,CAACqgB,SAAS,GAAGgmB,SAAS,CAAChmB,SAAS,CAAC,CAAC;QAC3G,IAAMtoB,KAAK,GAAG0uC,QAAQ,GAAG6C,YAAY,GAAGc,SAAS;QACjD,IAAI/3D,CAAC,GAAGk3D,MAAM,CAACl3D,CAAC;QAChB,IAAIE,CAAC,GAAGg3D,MAAM,CAACh3D,CAAC;QAChB62D,SAAS,CAACiB,QAAQ,CAACxtD,EAAE,CAACkb,KAAK,CAAC;QAC5B,IAAIX,YAAY,EAAE;UAChB,IAAI7nB,CAAC,GAAG,CAAC,IAAI8C,CAAC,GAAG0lB,KAAK,GAAG+T,OAAO,GAAGjvB,EAAE,CAACyI,KAAK,EAAE;YAC3C/S,CAAC,GAAGg3D,MAAM,CAACh3D,CAAC,IAAI8kC,UAAU;YAC1BkyB,MAAM,CAAC9oC,IAAI,EAAE;YACbpuB,CAAC,GAAGk3D,MAAM,CAACl3D,CAAC,GAAGiD,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAAC2I,IAAI,GAAGsmB,OAAO,EAAEjvB,EAAE,CAACyI,KAAK,GAAGiiD,UAAU,CAACgC,MAAM,CAAC9oC,IAAI,CAAC,CAAC;UAC7F;QACF,CAAC,MAAM,IAAIlxB,CAAC,GAAG,CAAC,IAAIgD,CAAC,GAAG8kC,UAAU,GAAGx6B,EAAE,CAAC0I,MAAM,EAAE;UAC9ClT,CAAC,GAAGk3D,MAAM,CAACl3D,CAAC,GAAGA,CAAC,GAAGi1D,WAAW,CAACiC,MAAM,CAAC9oC,IAAI,CAAC,CAAC1I,KAAK,GAAG+T,OAAO;UAC3Dy9B,MAAM,CAAC9oC,IAAI,EAAE;UACbluB,CAAC,GAAGg3D,MAAM,CAACh3D,CAAC,GAAG+C,cAAc,CAAC0+B,KAAK,EAAEn3B,EAAE,CAACwI,GAAG,GAAGk3B,WAAW,GAAGzQ,OAAO,EAAEjvB,EAAE,CAAC0I,MAAM,GAAG+hD,WAAW,CAACiC,MAAM,CAAC9oC,IAAI,CAAC,CAAC3I,MAAM,CAAC;QACnH;QACA,IAAMwyC,KAAK,GAAGlB,SAAS,CAAC/2D,CAAC,CAACA,CAAC,CAAC;QAC5Bo3D,aAAa,CAACa,KAAK,EAAE/3D,CAAC,EAAEytB,UAAU,CAAC;QACnC3tB,CAAC,GAAGqH,MAAM,CAAC2mC,SAAS,EAAEhuC,CAAC,GAAGo0D,QAAQ,GAAG6C,YAAY,EAAElyC,YAAY,GAAG/kB,CAAC,GAAG0lB,KAAK,GAAGlb,EAAE,CAACyI,KAAK,EAAEP,IAAI,CAAC2jD,GAAG,CAAC;QACjGuB,QAAQ,CAACb,SAAS,CAAC/2D,CAAC,CAACA,CAAC,CAAC,EAAEE,CAAC,EAAEytB,UAAU,CAAC;QACvC,IAAI5I,YAAY,EAAE;UAChBmyC,MAAM,CAACl3D,CAAC,IAAI0lB,KAAK,GAAG+T,OAAO;QAC7B,CAAC,MAAM;UACLy9B,MAAM,CAACh3D,CAAC,IAAI8kC,UAAU;QACxB;MACF,CAAC,CAAC;MACFz9B,oBAAoB,CAACiD,EAAE,CAAC8N,GAAG,EAAE5F,IAAI,CAAColD,aAAa,CAAC;IAClD;EAAC;IAAAzuD,GAAA;IAAAC,KAAA,EACD,SAAA2mC,UAAA,EAAY;MACV,IAAMzlC,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMs4B,SAAS,GAAGt3B,IAAI,CAACgW,KAAK;MAC5B,IAAMwvC,SAAS,GAAGr1D,MAAM,CAACmnC,SAAS,CAAClF,IAAI,CAAC;MACxC,IAAMqzB,YAAY,GAAG53D,SAAS,CAACypC,SAAS,CAACvQ,OAAO,CAAC;MACjD,IAAI,CAACuQ,SAAS,CAAC1Y,OAAO,EAAE;QACtB;MACF;MACA,IAAMylC,SAAS,GAAG9vD,aAAa,CAACyL,IAAI,CAAC2jD,GAAG,EAAE7rD,EAAE,CAAC2I,IAAI,EAAE3I,EAAE,CAACkb,KAAK,CAAC;MAC5D,IAAMpN,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAMgc,QAAQ,GAAG0V,SAAS,CAAC1V,QAAQ;MACnC,IAAM2iC,YAAY,GAAGiB,SAAS,CAAC/lD,IAAI,GAAG,CAAC;MACvC,IAAMimD,0BAA0B,GAAGD,YAAY,CAACnlD,GAAG,GAAGikD,YAAY;MAClE,IAAI/2D,CAAC;MACL,IAAIiT,IAAI,GAAG3I,EAAE,CAAC2I,IAAI;MAClB,IAAIkY,QAAQ,GAAG7gB,EAAE,CAACkb,KAAK;MACvB,IAAI,IAAI,CAACX,YAAY,EAAE,EAAE;QACvBsG,QAAQ,GAAGjhB,IAAI,CAACuC,GAAG,CAAAN,KAAA,CAARjC,IAAI,EAAAkC,kBAAA,CAAQ9B,EAAE,CAAC0qD,UAAU,EAAC;QACrCh1D,CAAC,GAAGsK,EAAE,CAACwI,GAAG,GAAGolD,0BAA0B;QACvCjlD,IAAI,GAAGlQ,cAAc,CAACyP,IAAI,CAACivB,KAAK,EAAExuB,IAAI,EAAE3I,EAAE,CAACyI,KAAK,GAAGoY,QAAQ,CAAC;MAC9D,CAAC,MAAM;QACL,IAAMC,SAAS,GAAG9gB,EAAE,CAACyqD,WAAW,CAACzoD,MAAM,CAAC,UAACC,GAAG,EAAE0F,IAAI;UAAA,OAAK/H,IAAI,CAACuC,GAAG,CAACF,GAAG,EAAE0F,IAAI,CAACsT,MAAM,CAAC;QAAA,GAAE,CAAC,CAAC;QACrFvlB,CAAC,GAAGk4D,0BAA0B,GAAGn1D,cAAc,CAACyP,IAAI,CAACivB,KAAK,EAAEn3B,EAAE,CAACwI,GAAG,EAAExI,EAAE,CAAC0I,MAAM,GAAGoY,SAAS,GAAG5Y,IAAI,CAAC2J,MAAM,CAACod,OAAO,GAAGjvB,EAAE,CAAC6qD,mBAAmB,EAAE,CAAC;MAC7I;MACA,IAAMr1D,CAAC,GAAGiD,cAAc,CAACqxB,QAAQ,EAAEnhB,IAAI,EAAEA,IAAI,GAAGkY,QAAQ,CAAC;MACzD/S,GAAG,CAAC01B,SAAS,GAAG+oB,SAAS,CAAC/oB,SAAS,CAACjrC,kBAAkB,CAACuxB,QAAQ,CAAC,CAAC;MACjEhc,GAAG,CAAC61B,YAAY,GAAG,QAAQ;MAC3B71B,GAAG,CAACgV,WAAW,GAAG0c,SAAS,CAAC/sC,KAAK;MACjCqb,GAAG,CAAC8U,SAAS,GAAG4c,SAAS,CAAC/sC,KAAK;MAC/Bqb,GAAG,CAACwsB,IAAI,GAAGozB,SAAS,CAACvsB,MAAM;MAC3BlpC,UAAU,CAAC6V,GAAG,EAAE0xB,SAAS,CAAC7c,IAAI,EAAEntB,CAAC,EAAEE,CAAC,EAAEg4D,SAAS,CAAC;IAClD;EAAC;IAAA7uD,GAAA;IAAAC,KAAA,EACD,SAAA+rD,oBAAA,EAAsB;MACpB,IAAMrrB,SAAS,GAAG,IAAI,CAACt4B,OAAO,CAACgX,KAAK;MACpC,IAAMwvC,SAAS,GAAGr1D,MAAM,CAACmnC,SAAS,CAAClF,IAAI,CAAC;MACxC,IAAMqzB,YAAY,GAAG53D,SAAS,CAACypC,SAAS,CAACvQ,OAAO,CAAC;MACjD,OAAOuQ,SAAS,CAAC1Y,OAAO,GAAG4mC,SAAS,CAAClzB,UAAU,GAAGmzB,YAAY,CAAC1yC,MAAM,GAAG,CAAC;IAC3E;EAAC;IAAApc,GAAA;IAAAC,KAAA,EACD,SAAA+uD,iBAAiBr4D,CAAC,EAAEE,CAAC,EAAE;MACrB,IAAMsK,EAAE,GAAG,IAAI;MACf,IAAItN,CAAC,EAAEo7D,MAAM,EAAEC,EAAE;MACjB,IAAIv4D,CAAC,IAAIwK,EAAE,CAAC2I,IAAI,IAAInT,CAAC,IAAIwK,EAAE,CAACyI,KAAK,IAAI/S,CAAC,IAAIsK,EAAE,CAACwI,GAAG,IAAI9S,CAAC,IAAIsK,EAAE,CAAC0I,MAAM,EAAE;QAClEqlD,EAAE,GAAG/tD,EAAE,CAACqqD,cAAc;QACtB,KAAK33D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGq7D,EAAE,CAAC1tD,MAAM,EAAE,EAAE3N,CAAC,EAAE;UAC9Bo7D,MAAM,GAAGC,EAAE,CAACr7D,CAAC,CAAC;UACd,IAAI8C,CAAC,IAAIs4D,MAAM,CAACnlD,IAAI,IAAInT,CAAC,IAAIs4D,MAAM,CAACnlD,IAAI,GAAGmlD,MAAM,CAAC5yC,KAAK,IAAIxlB,CAAC,IAAIo4D,MAAM,CAACtlD,GAAG,IAAI9S,CAAC,IAAIo4D,MAAM,CAACtlD,GAAG,GAAGslD,MAAM,CAAC7yC,MAAM,EAAE;YAC7G,OAAOjb,EAAE,CAACwqD,WAAW,CAAC93D,CAAC,CAAC;UAC1B;QACF;MACF;MACA,OAAO,IAAI;IACb;EAAC;IAAAmM,GAAA;IAAAC,KAAA,EACD,SAAAkvD,YAAY17D,CAAC,EAAE;MACb,IAAM0N,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAI,CAAC+mD,UAAU,CAAC37D,CAAC,CAAC6M,IAAI,EAAE+I,IAAI,CAAC,EAAE;QAC7B;MACF;MACA,IAAMgmD,WAAW,GAAGluD,EAAE,CAAC6tD,gBAAgB,CAACv7D,CAAC,CAACkD,CAAC,EAAElD,CAAC,CAACoD,CAAC,CAAC;MACjD,IAAIpD,CAAC,CAAC6M,IAAI,KAAK,WAAW,EAAE;QAC1B,IAAM47C,QAAQ,GAAG/6C,EAAE,CAACsqD,YAAY;QAChC,IAAM6D,QAAQ,GAAGpE,UAAU,CAAChP,QAAQ,EAAEmT,WAAW,CAAC;QAClD,IAAInT,QAAQ,IAAI,CAACoT,QAAQ,EAAE;UACzBh3D,QAAQ,CAAC+Q,IAAI,CAACkmD,OAAO,EAAE,CAAC97D,CAAC,EAAEyoD,QAAQ,EAAE/6C,EAAE,CAAC,EAAEA,EAAE,CAAC;QAC/C;QACAA,EAAE,CAACsqD,YAAY,GAAG4D,WAAW;QAC7B,IAAIA,WAAW,IAAI,CAACC,QAAQ,EAAE;UAC5Bh3D,QAAQ,CAAC+Q,IAAI,CAACsuC,OAAO,EAAE,CAAClkD,CAAC,EAAE47D,WAAW,EAAEluD,EAAE,CAAC,EAAEA,EAAE,CAAC;QAClD;MACF,CAAC,MAAM,IAAIkuD,WAAW,EAAE;QACtB/2D,QAAQ,CAAC+Q,IAAI,CAACgb,OAAO,EAAE,CAAC5wB,CAAC,EAAE47D,WAAW,EAAEluD,EAAE,CAAC,EAAEA,EAAE,CAAC;MAClD;IACF;EAAC;EAAA,OAAAgqD,MAAA;AAAA,EAnYkBt1B,OAAO;AAqY5B,SAASu5B,UAAUA,CAAC9uD,IAAI,EAAE+I,IAAI,EAAE;EAC9B,IAAI/I,IAAI,KAAK,WAAW,KAAK+I,IAAI,CAACsuC,OAAO,IAAItuC,IAAI,CAACkmD,OAAO,CAAC,EAAE;IAC1D,OAAO,IAAI;EACb;EACA,IAAIlmD,IAAI,CAACgb,OAAO,KAAK/jB,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,SAAS,CAAC,EAAE;IAC5D,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;AACA,IAAIkvD,aAAa,GAAG;EAClB/jD,EAAE,EAAE,QAAQ;EACZgkD,QAAQ,EAAEtE,MAAM;EAChBlqD,KAAK,WAAAA,MAACd,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAC3B,IAAMob,MAAM,GAAGtjB,KAAK,CAACsjB,MAAM,GAAG,IAAI0nC,MAAM,CAAC;MAACl8C,GAAG,EAAE9O,KAAK,CAAC8O,GAAG;MAAE5G,OAAO,EAAPA,OAAO;MAAElI,KAAK,EAALA;IAAK,CAAC,CAAC;IAC1EutB,OAAO,CAAC9lB,SAAS,CAACzH,KAAK,EAAEsjB,MAAM,EAAEpb,OAAO,CAAC;IACzCqlB,OAAO,CAAC2C,MAAM,CAAClwB,KAAK,EAAEsjB,MAAM,CAAC;EAC/B,CAAC;EACDjgB,IAAI,WAAAA,KAACrD,KAAK,EAAE;IACVutB,OAAO,CAAC6C,SAAS,CAACpwB,KAAK,EAAEA,KAAK,CAACsjB,MAAM,CAAC;IACtC,OAAOtjB,KAAK,CAACsjB,MAAM;EACrB,CAAC;EACDua,YAAY,WAAAA,aAAC79B,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAClC,IAAMob,MAAM,GAAGtjB,KAAK,CAACsjB,MAAM;IAC3BiK,OAAO,CAAC9lB,SAAS,CAACzH,KAAK,EAAEsjB,MAAM,EAAEpb,OAAO,CAAC;IACzCob,MAAM,CAACpb,OAAO,GAAGA,OAAO;EAC1B,CAAC;EACDg3B,WAAW,WAAAA,YAACl/B,KAAK,EAAE;IACjB,IAAMsjB,MAAM,GAAGtjB,KAAK,CAACsjB,MAAM;IAC3BA,MAAM,CAACqoC,WAAW,EAAE;IACpBroC,MAAM,CAACqpC,cAAc,EAAE;EACzB,CAAC;EACD4C,UAAU,WAAAA,WAACvvD,KAAK,EAAE+0B,IAAI,EAAE;IACtB,IAAI,CAACA,IAAI,CAAC+hB,MAAM,EAAE;MAChB92C,KAAK,CAACsjB,MAAM,CAAC0rC,WAAW,CAACj6B,IAAI,CAACvyB,KAAK,CAAC;IACtC;EACF,CAAC;EACDzO,QAAQ,EAAE;IACR+zB,OAAO,EAAE,IAAI;IACbgD,QAAQ,EAAE,KAAK;IACfqN,KAAK,EAAE,QAAQ;IACfzK,QAAQ,EAAE,IAAI;IACdvkB,OAAO,EAAE,KAAK;IACdia,MAAM,EAAE,IAAI;IACZc,OAAO,WAAAA,QAAC5wB,CAAC,EAAE6wB,UAAU,EAAEb,MAAM,EAAE;MAC7B,IAAMnZ,KAAK,GAAGga,UAAU,CAAC1Z,YAAY;MACrC,IAAM+kD,EAAE,GAAGlsC,MAAM,CAACtjB,KAAK;MACvB,IAAIwvD,EAAE,CAACruC,gBAAgB,CAAChX,KAAK,CAAC,EAAE;QAC9BqlD,EAAE,CAACpoD,IAAI,CAAC+C,KAAK,CAAC;QACdga,UAAU,CAACF,MAAM,GAAG,IAAI;MAC1B,CAAC,MAAM;QACLurC,EAAE,CAACvoD,IAAI,CAACkD,KAAK,CAAC;QACdga,UAAU,CAACF,MAAM,GAAG,KAAK;MAC3B;IACF,CAAC;IACDuzB,OAAO,EAAE,IAAI;IACb4X,OAAO,EAAE,IAAI;IACbv8C,MAAM,EAAE;MACNpf,KAAK,EAAE,SAAAA,MAACqb,GAAG;QAAA,OAAKA,GAAG,CAAC9O,KAAK,CAACkI,OAAO,CAACzU,KAAK;MAAA;MACvCm3D,QAAQ,EAAE,EAAE;MACZ36B,OAAO,EAAE,EAAE;MACX1M,cAAc,WAAAA,eAACvjB,KAAK,EAAE;QACpB,IAAM+Q,QAAQ,GAAG/Q,KAAK,CAAC4K,IAAI,CAACmG,QAAQ;QACpC,IAAA0+C,qBAAA,GAAgEzvD,KAAK,CAACsjB,MAAM,CAACpb,OAAO,CAA7E2K,MAAM;UAAGg4C,aAAa,GAAA4E,qBAAA,CAAb5E,aAAa;UAAErnC,UAAU,GAAAisC,qBAAA,CAAVjsC,UAAU;UAAEghB,SAAS,GAAAirB,qBAAA,CAATjrB,SAAS;UAAE/wC,KAAK,GAAAg8D,qBAAA,CAALh8D,KAAK;QAC3D,OAAOuM,KAAK,CAACiK,sBAAsB,EAAE,CAACwZ,GAAG,CAAC,UAACzY,IAAI,EAAK;UAClD,IAAM0Y,KAAK,GAAG1Y,IAAI,CAAC6B,UAAU,CAACiI,QAAQ,CAAC+1C,aAAa,GAAG,CAAC,GAAGlrD,SAAS,CAAC;UACrE,IAAMqjB,WAAW,GAAGjsB,SAAS,CAAC2sB,KAAK,CAACV,WAAW,CAAC;UAChD,OAAO;YACLW,IAAI,EAAE5S,QAAQ,CAAC/F,IAAI,CAACb,KAAK,CAAC,CAACoK,KAAK;YAChCqP,SAAS,EAAEF,KAAK,CAACG,eAAe;YAChC2pC,SAAS,EAAE/5D,KAAK;YAChBwwB,MAAM,EAAE,CAACjZ,IAAI,CAAC7D,OAAO;YACrBy0C,OAAO,EAAEl4B,KAAK,CAACm4B,cAAc;YAC7BgS,QAAQ,EAAEnqC,KAAK,CAAC6T,UAAU;YAC1B2O,cAAc,EAAExiB,KAAK,CAAC8T,gBAAgB;YACtCgjB,QAAQ,EAAE92B,KAAK,CAACo4B,eAAe;YAC/B93B,SAAS,EAAE,CAAChB,WAAW,CAAC9G,KAAK,GAAG8G,WAAW,CAAC/G,MAAM,IAAI,CAAC;YACvD6H,WAAW,EAAEJ,KAAK,CAACK,WAAW;YAC9BP,UAAU,EAAEA,UAAU,IAAIE,KAAK,CAACF,UAAU;YAC1CpE,QAAQ,EAAEsE,KAAK,CAACtE,QAAQ;YACxBolB,SAAS,EAAEA,SAAS,IAAI9gB,KAAK,CAAC8gB,SAAS;YACvC2T,YAAY,EAAE,CAAC;YACf1tC,YAAY,EAAEO,IAAI,CAACb;UACrB,CAAC;QACH,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IACD+U,KAAK,EAAE;MACLzrB,KAAK,EAAE,SAAAA,MAACqb,GAAG;QAAA,OAAKA,GAAG,CAAC9O,KAAK,CAACkI,OAAO,CAACzU,KAAK;MAAA;MACvCq0B,OAAO,EAAE,KAAK;MACdgD,QAAQ,EAAE,QAAQ;MAClBnH,IAAI,EAAE;IACR;EACF,CAAC;EACD1pB,WAAW,EAAE;IACX4M,WAAW,EAAE,SAAAA,YAACC,IAAI;MAAA,OAAK,CAACA,IAAI,CAAC2xB,UAAU,CAAC,IAAI,CAAC;IAAA;IAC7C5lB,MAAM,EAAE;MACNhM,WAAW,EAAE,SAAAA,YAACC,IAAI;QAAA,OAAK,CAAC,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,CAAC,CAACgpC,QAAQ,CAAChpC,IAAI,CAAC;MAAA;IAC7E;EACF;AACF,CAAC;AAAC,IAEI4oD,KAAK,0BAAAC,SAAA;EAAAn1C,SAAA,CAAAk1C,KAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAAl1C,YAAA,CAAAg1C,KAAA;EACT,SAAAA,MAAYpoD,MAAM,EAAE;IAAA,IAAAuoD,OAAA;IAAAxwD,eAAA,OAAAqwD,KAAA;IAClBG,OAAA,GAAAD,QAAA,CAAA3uD,IAAA;IACA4uD,OAAA,CAAK7vD,KAAK,GAAGsH,MAAM,CAACtH,KAAK;IACzB6vD,OAAA,CAAK3nD,OAAO,GAAGZ,MAAM,CAACY,OAAO;IAC7B2nD,OAAA,CAAK/gD,GAAG,GAAGxH,MAAM,CAACwH,GAAG;IACrB+gD,OAAA,CAAKC,QAAQ,GAAGnwD,SAAS;IACzBkwD,OAAA,CAAKrmD,GAAG,GAAG7J,SAAS;IACpBkwD,OAAA,CAAKnmD,MAAM,GAAG/J,SAAS;IACvBkwD,OAAA,CAAKlmD,IAAI,GAAGhK,SAAS;IACrBkwD,OAAA,CAAKpmD,KAAK,GAAG9J,SAAS;IACtBkwD,OAAA,CAAK3zC,KAAK,GAAGvc,SAAS;IACtBkwD,OAAA,CAAK5zC,MAAM,GAAGtc,SAAS;IACvBkwD,OAAA,CAAK/kC,QAAQ,GAAGnrB,SAAS;IACzBkwD,OAAA,CAAKzsC,MAAM,GAAGzjB,SAAS;IACvBkwD,OAAA,CAAKniC,QAAQ,GAAG/tB,SAAS;IAAC,OAAAkwD,OAAA;EAC5B;EAACjwD,YAAA,CAAA8vD,KAAA;IAAA7vD,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOmc,QAAQ,EAAEC,SAAS,EAAE;MAC1B,IAAM9gB,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvBlH,EAAE,CAAC2I,IAAI,GAAG,CAAC;MACX3I,EAAE,CAACwI,GAAG,GAAG,CAAC;MACV,IAAI,CAACN,IAAI,CAAC4e,OAAO,EAAE;QACjB9mB,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAACyI,KAAK,GAAGzI,EAAE,CAAC0I,MAAM,GAAG,CAAC;QAC/C;MACF;MACA1I,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAACyI,KAAK,GAAGoY,QAAQ;MAC9B7gB,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAAC0I,MAAM,GAAGoY,SAAS;MACjC,IAAM2iB,SAAS,GAAG5wC,OAAO,CAACqV,IAAI,CAACya,IAAI,CAAC,GAAGza,IAAI,CAACya,IAAI,CAACtiB,MAAM,GAAG,CAAC;MAC3DL,EAAE,CAAC8uD,QAAQ,GAAG/4D,SAAS,CAACmS,IAAI,CAAC+mB,OAAO,CAAC;MACrC,IAAM8/B,QAAQ,GAAGtrB,SAAS,GAAGprC,MAAM,CAAC6P,IAAI,CAACoyB,IAAI,CAAC,CAACE,UAAU,GAAGx6B,EAAE,CAAC8uD,QAAQ,CAAC7zC,MAAM;MAC9E,IAAIjb,EAAE,CAACua,YAAY,EAAE,EAAE;QACrBva,EAAE,CAACib,MAAM,GAAG8zC,QAAQ;MACtB,CAAC,MAAM;QACL/uD,EAAE,CAACkb,KAAK,GAAG6zC,QAAQ;MACrB;IACF;EAAC;IAAAlwD,GAAA;IAAAC,KAAA,EACD,SAAAyb,aAAA,EAAe;MACb,IAAMsR,GAAG,GAAG,IAAI,CAAC3kB,OAAO,CAAC4iB,QAAQ;MACjC,OAAO+B,GAAG,KAAK,KAAK,IAAIA,GAAG,KAAK,QAAQ;IAC1C;EAAC;IAAAhtB,GAAA;IAAAC,KAAA,EACD,SAAAkwD,UAAUnyC,MAAM,EAAE;MAChB,IAAOrU,GAAG,GAAkC,IAAI,CAAzCA,GAAG;QAAEG,IAAI,GAA4B,IAAI,CAApCA,IAAI;QAAED,MAAM,GAAoB,IAAI,CAA9BA,MAAM;QAAED,KAAK,GAAa,IAAI,CAAtBA,KAAK;QAAEvB,OAAO,GAAI,IAAI,CAAfA,OAAO;MACxC,IAAMiwB,KAAK,GAAGjwB,OAAO,CAACiwB,KAAK;MAC3B,IAAI/Y,QAAQ,GAAG,CAAC;MAChB,IAAIyC,QAAQ,EAAEga,MAAM,EAAEC,MAAM;MAC5B,IAAI,IAAI,CAACvgB,YAAY,EAAE,EAAE;QACvBsgB,MAAM,GAAGpiC,cAAc,CAAC0+B,KAAK,EAAExuB,IAAI,EAAEF,KAAK,CAAC;QAC3CqyB,MAAM,GAAGtyB,GAAG,GAAGqU,MAAM;QACrBgE,QAAQ,GAAGpY,KAAK,GAAGE,IAAI;MACzB,CAAC,MAAM;QACL,IAAIzB,OAAO,CAAC4iB,QAAQ,KAAK,MAAM,EAAE;UAC/B+Q,MAAM,GAAGlyB,IAAI,GAAGkU,MAAM;UACtBie,MAAM,GAAGriC,cAAc,CAAC0+B,KAAK,EAAEzuB,MAAM,EAAEF,GAAG,CAAC;UAC3C4V,QAAQ,GAAGnpB,EAAE,GAAG,CAAC,GAAG;QACtB,CAAC,MAAM;UACL4lC,MAAM,GAAGpyB,KAAK,GAAGoU,MAAM;UACvBie,MAAM,GAAGriC,cAAc,CAAC0+B,KAAK,EAAE3uB,GAAG,EAAEE,MAAM,CAAC;UAC3C0V,QAAQ,GAAGnpB,EAAE,GAAG,GAAG;QACrB;QACA4rB,QAAQ,GAAGnY,MAAM,GAAGF,GAAG;MACzB;MACA,OAAO;QAACqyB,MAAM,EAANA,MAAM;QAAEC,MAAM,EAANA,MAAM;QAAEja,QAAQ,EAARA,QAAQ;QAAEzC,QAAQ,EAARA;MAAQ,CAAC;IAC7C;EAAC;IAAAvf,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAA,EAAO;MACL,IAAMX,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM5F,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAI,CAACgB,IAAI,CAAC4e,OAAO,EAAE;QACjB;MACF;MACA,IAAMmoC,QAAQ,GAAG52D,MAAM,CAAC6P,IAAI,CAACoyB,IAAI,CAAC;MAClC,IAAME,UAAU,GAAGy0B,QAAQ,CAACz0B,UAAU;MACtC,IAAM3d,MAAM,GAAG2d,UAAU,GAAG,CAAC,GAAGx6B,EAAE,CAAC8uD,QAAQ,CAACtmD,GAAG;MAC/C,IAAA0mD,aAAA,GAA6ClvD,EAAE,CAACgvD,SAAS,CAACnyC,MAAM,CAAC;QAA1Dge,MAAM,GAAAq0B,aAAA,CAANr0B,MAAM;QAAEC,MAAM,GAAAo0B,aAAA,CAANp0B,MAAM;QAAEja,QAAQ,GAAAquC,aAAA,CAARruC,QAAQ;QAAEzC,QAAQ,GAAA8wC,aAAA,CAAR9wC,QAAQ;MACzCnmB,UAAU,CAAC6V,GAAG,EAAE5F,IAAI,CAACya,IAAI,EAAE,CAAC,EAAE,CAAC,EAAEssC,QAAQ,EAAE;QACzCx8D,KAAK,EAAEyV,IAAI,CAACzV,KAAK;QACjBouB,QAAQ,EAARA,QAAQ;QACRzC,QAAQ,EAARA,QAAQ;QACRolB,SAAS,EAAEjrC,kBAAkB,CAAC2P,IAAI,CAACivB,KAAK,CAAC;QACzCwM,YAAY,EAAE,QAAQ;QACtBQ,WAAW,EAAE,CAACtJ,MAAM,EAAEC,MAAM;MAC9B,CAAC,CAAC;IACJ;EAAC;EAAA,OAAA4zB,KAAA;AAAA,EAnFiBh6B,OAAO;AAqF3B,SAASy6B,WAAWA,CAACnwD,KAAK,EAAEwgC,SAAS,EAAE;EACrC,IAAMthB,KAAK,GAAG,IAAIwwC,KAAK,CAAC;IACtB5gD,GAAG,EAAE9O,KAAK,CAAC8O,GAAG;IACd5G,OAAO,EAAEs4B,SAAS;IAClBxgC,KAAK,EAALA;EACF,CAAC,CAAC;EACFutB,OAAO,CAAC9lB,SAAS,CAACzH,KAAK,EAAEkf,KAAK,EAAEshB,SAAS,CAAC;EAC1CjT,OAAO,CAAC2C,MAAM,CAAClwB,KAAK,EAAEkf,KAAK,CAAC;EAC5Blf,KAAK,CAACowD,UAAU,GAAGlxC,KAAK;AAC1B;AACA,IAAImxC,YAAY,GAAG;EACjB/kD,EAAE,EAAE,OAAO;EACXgkD,QAAQ,EAAEI,KAAK;EACf5uD,KAAK,WAAAA,MAACd,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAC3BioD,WAAW,CAACnwD,KAAK,EAAEkI,OAAO,CAAC;EAC7B,CAAC;EACD7E,IAAI,WAAAA,KAACrD,KAAK,EAAE;IACV,IAAMowD,UAAU,GAAGpwD,KAAK,CAACowD,UAAU;IACnC7iC,OAAO,CAAC6C,SAAS,CAACpwB,KAAK,EAAEowD,UAAU,CAAC;IACpC,OAAOpwD,KAAK,CAACowD,UAAU;EACzB,CAAC;EACDvyB,YAAY,WAAAA,aAAC79B,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAClC,IAAMgX,KAAK,GAAGlf,KAAK,CAACowD,UAAU;IAC9B7iC,OAAO,CAAC9lB,SAAS,CAACzH,KAAK,EAAEkf,KAAK,EAAEhX,OAAO,CAAC;IACxCgX,KAAK,CAAChX,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDnU,QAAQ,EAAE;IACRokC,KAAK,EAAE,QAAQ;IACfrQ,OAAO,EAAE,KAAK;IACdwT,IAAI,EAAE;MACJlY,MAAM,EAAE;IACV,CAAC;IACDsK,QAAQ,EAAE,IAAI;IACduC,OAAO,EAAE,EAAE;IACXnF,QAAQ,EAAE,KAAK;IACfnH,IAAI,EAAE,EAAE;IACRP,MAAM,EAAE;EACV,CAAC;EACD6S,aAAa,EAAE;IACbxiC,KAAK,EAAE;EACT,CAAC;EACDwG,WAAW,EAAE;IACX4M,WAAW,EAAE,IAAI;IACjBD,UAAU,EAAE;EACd;AACF,CAAC;AAED,IAAM6c,GAAG,GAAG,IAAI6sC,OAAO,EAAE;AACzB,IAAIC,eAAe,GAAG;EACpBjlD,EAAE,EAAE,UAAU;EACdxK,KAAK,WAAAA,MAACd,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAC3B,IAAMgX,KAAK,GAAG,IAAIwwC,KAAK,CAAC;MACtB5gD,GAAG,EAAE9O,KAAK,CAAC8O,GAAG;MACd5G,OAAO,EAAPA,OAAO;MACPlI,KAAK,EAALA;IACF,CAAC,CAAC;IACFutB,OAAO,CAAC9lB,SAAS,CAACzH,KAAK,EAAEkf,KAAK,EAAEhX,OAAO,CAAC;IACxCqlB,OAAO,CAAC2C,MAAM,CAAClwB,KAAK,EAAEkf,KAAK,CAAC;IAC5BuE,GAAG,CAACnhB,GAAG,CAACtC,KAAK,EAAEkf,KAAK,CAAC;EACvB,CAAC;EACD7b,IAAI,WAAAA,KAACrD,KAAK,EAAE;IACVutB,OAAO,CAAC6C,SAAS,CAACpwB,KAAK,EAAEyjB,GAAG,CAACthB,GAAG,CAACnC,KAAK,CAAC,CAAC;IACxCyjB,GAAG,CAACjgB,MAAM,CAACxD,KAAK,CAAC;EACnB,CAAC;EACD69B,YAAY,WAAAA,aAAC79B,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAClC,IAAMgX,KAAK,GAAGuE,GAAG,CAACthB,GAAG,CAACnC,KAAK,CAAC;IAC5ButB,OAAO,CAAC9lB,SAAS,CAACzH,KAAK,EAAEkf,KAAK,EAAEhX,OAAO,CAAC;IACxCgX,KAAK,CAAChX,OAAO,GAAGA,OAAO;EACzB,CAAC;EACDnU,QAAQ,EAAE;IACRokC,KAAK,EAAE,QAAQ;IACfrQ,OAAO,EAAE,KAAK;IACdwT,IAAI,EAAE;MACJlY,MAAM,EAAE;IACV,CAAC;IACDsK,QAAQ,EAAE,IAAI;IACduC,OAAO,EAAE,CAAC;IACVnF,QAAQ,EAAE,KAAK;IACfnH,IAAI,EAAE,EAAE;IACRP,MAAM,EAAE;EACV,CAAC;EACD6S,aAAa,EAAE;IACbxiC,KAAK,EAAE;EACT,CAAC;EACDwG,WAAW,EAAE;IACX4M,WAAW,EAAE,IAAI;IACjBD,UAAU,EAAE;EACd;AACF,CAAC;AAED,IAAM4pD,WAAW,GAAG;EAClBC,OAAO,WAAAA,QAAC/uD,KAAK,EAAE;IACb,IAAI,CAACA,KAAK,CAACL,MAAM,EAAE;MACjB,OAAO,KAAK;IACd;IACA,IAAI3N,CAAC,EAAEymC,GAAG;IACV,IAAI3jC,CAAC,GAAG,CAAC;IACT,IAAIE,CAAC,GAAG,CAAC;IACT,IAAI2b,KAAK,GAAG,CAAC;IACb,KAAK3e,CAAC,GAAG,CAAC,EAAEymC,GAAG,GAAGz4B,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGymC,GAAG,EAAE,EAAEzmC,CAAC,EAAE;MAC5C,IAAMi3B,EAAE,GAAGjpB,KAAK,CAAChO,CAAC,CAAC,CAACua,OAAO;MAC3B,IAAI0c,EAAE,IAAIA,EAAE,CAACmL,QAAQ,EAAE,EAAE;QACvB,IAAMjJ,GAAG,GAAGlC,EAAE,CAACgL,eAAe,EAAE;QAChCn/B,CAAC,IAAIq2B,GAAG,CAACr2B,CAAC;QACVE,CAAC,IAAIm2B,GAAG,CAACn2B,CAAC;QACV,EAAE2b,KAAK;MACT;IACF;IACA,OAAO;MACL7b,CAAC,EAAEA,CAAC,GAAG6b,KAAK;MACZ3b,CAAC,EAAEA,CAAC,GAAG2b;IACT,CAAC;EACH,CAAC;EACDoa,OAAO,WAAAA,QAAC/qB,KAAK,EAAEgvD,aAAa,EAAE;IAC5B,IAAI,CAAChvD,KAAK,CAACL,MAAM,EAAE;MACjB,OAAO,KAAK;IACd;IACA,IAAI7K,CAAC,GAAGk6D,aAAa,CAACl6D,CAAC;IACvB,IAAIE,CAAC,GAAGg6D,aAAa,CAACh6D,CAAC;IACvB,IAAIu1B,WAAW,GAAGtgB,MAAM,CAACE,iBAAiB;IAC1C,IAAInY,CAAC,EAAEymC,GAAG,EAAEw2B,cAAc;IAC1B,KAAKj9D,CAAC,GAAG,CAAC,EAAEymC,GAAG,GAAGz4B,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGymC,GAAG,EAAE,EAAEzmC,CAAC,EAAE;MAC5C,IAAMi3B,EAAE,GAAGjpB,KAAK,CAAChO,CAAC,CAAC,CAACua,OAAO;MAC3B,IAAI0c,EAAE,IAAIA,EAAE,CAACmL,QAAQ,EAAE,EAAE;QACvB,IAAM9Z,MAAM,GAAG2O,EAAE,CAACuB,cAAc,EAAE;QAClC,IAAMp4B,CAAC,GAAGqK,qBAAqB,CAACuyD,aAAa,EAAE10C,MAAM,CAAC;QACtD,IAAIloB,CAAC,GAAGm4B,WAAW,EAAE;UACnBA,WAAW,GAAGn4B,CAAC;UACf68D,cAAc,GAAGhmC,EAAE;QACrB;MACF;IACF;IACA,IAAIgmC,cAAc,EAAE;MAClB,IAAMC,EAAE,GAAGD,cAAc,CAACh7B,eAAe,EAAE;MAC3Cn/B,CAAC,GAAGo6D,EAAE,CAACp6D,CAAC;MACRE,CAAC,GAAGk6D,EAAE,CAACl6D,CAAC;IACV;IACA,OAAO;MACLF,CAAC,EAADA,CAAC;MACDE,CAAC,EAADA;IACF,CAAC;EACH;AACF,CAAC;AACD,SAASm6D,YAAYA,CAACz1C,IAAI,EAAE01C,MAAM,EAAE;EAClC,IAAIA,MAAM,EAAE;IACV,IAAIj9D,OAAO,CAACi9D,MAAM,CAAC,EAAE;MACnBhmD,KAAK,CAACkN,SAAS,CAACtV,IAAI,CAACG,KAAK,CAACuY,IAAI,EAAE01C,MAAM,CAAC;IAC1C,CAAC,MAAM;MACL11C,IAAI,CAAC1Y,IAAI,CAACouD,MAAM,CAAC;IACnB;EACF;EACA,OAAO11C,IAAI;AACb;AACA,SAAS21C,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYC,MAAM,KAAKD,GAAG,CAACx0C,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IAChF,OAAOw0C,GAAG,CAAC/oB,KAAK,CAAC,IAAI,CAAC;EACxB;EACA,OAAO+oB,GAAG;AACZ;AACA,SAASE,iBAAiBA,CAAClxD,KAAK,EAAE4B,IAAI,EAAE;EACtC,IAAOqM,OAAO,GAAyBrM,IAAI,CAApCqM,OAAO;IAAExD,YAAY,GAAW7I,IAAI,CAA3B6I,YAAY;IAAEN,KAAK,GAAIvI,IAAI,CAAbuI,KAAK;EACnC,IAAM0C,UAAU,GAAG7M,KAAK,CAACgR,cAAc,CAACvG,YAAY,CAAC,CAACoC,UAAU;EAChE,IAAAskD,qBAAA,GAAuBtkD,UAAU,CAACyH,gBAAgB,CAACnK,KAAK,CAAC;IAAlDoK,KAAK,GAAA48C,qBAAA,CAAL58C,KAAK;IAAEzU,KAAK,GAAAqxD,qBAAA,CAALrxD,KAAK;EACnB,OAAO;IACLE,KAAK,EAALA,KAAK;IACLuU,KAAK,EAALA,KAAK;IACLzH,MAAM,EAAED,UAAU,CAAC0G,SAAS,CAACpJ,KAAK,CAAC;IACnCgE,GAAG,EAAEnO,KAAK,CAAC4K,IAAI,CAACmG,QAAQ,CAACtG,YAAY,CAAC,CAACG,IAAI,CAACT,KAAK,CAAC;IAClDoa,cAAc,EAAEzkB,KAAK;IACrBiO,OAAO,EAAElB,UAAU,CAACmD,UAAU,EAAE;IAChC9B,SAAS,EAAE/D,KAAK;IAChBM,YAAY,EAAZA,YAAY;IACZwD,OAAO,EAAPA;EACF,CAAC;AACH;AACA,SAASmjD,cAAcA,CAACnyC,OAAO,EAAE/W,OAAO,EAAE;EACxC,IAAM4G,GAAG,GAAGmQ,OAAO,CAAC1X,MAAM,CAACuH,GAAG;EAC9B,IAAOuiD,IAAI,GAAmBpyC,OAAO,CAA9BoyC,IAAI;IAAEC,MAAM,GAAWryC,OAAO,CAAxBqyC,MAAM;IAAEpyC,KAAK,GAAID,OAAO,CAAhBC,KAAK;EAC1B,IAAO0rC,QAAQ,GAAe1iD,OAAO,CAA9B0iD,QAAQ;IAAEF,SAAS,GAAIxiD,OAAO,CAApBwiD,SAAS;EAC1B,IAAM6G,QAAQ,GAAGl4D,MAAM,CAAC6O,OAAO,CAACqpD,QAAQ,CAAC;EACzC,IAAM7C,SAAS,GAAGr1D,MAAM,CAAC6O,OAAO,CAACwmD,SAAS,CAAC;EAC3C,IAAM8C,UAAU,GAAGn4D,MAAM,CAAC6O,OAAO,CAACspD,UAAU,CAAC;EAC7C,IAAMC,cAAc,GAAGvyC,KAAK,CAAC7d,MAAM;EACnC,IAAMqwD,eAAe,GAAGJ,MAAM,CAACjwD,MAAM;EACrC,IAAMswD,iBAAiB,GAAGN,IAAI,CAAChwD,MAAM;EACrC,IAAM4uB,OAAO,GAAGl5B,SAAS,CAACmR,OAAO,CAAC+nB,OAAO,CAAC;EAC1C,IAAIhU,MAAM,GAAGgU,OAAO,CAAChU,MAAM;EAC3B,IAAIC,KAAK,GAAG,CAAC;EACb,IAAI01C,kBAAkB,GAAGP,IAAI,CAACruD,MAAM,CAAC,UAACqP,KAAK,EAAEw/C,QAAQ;IAAA,OAAKx/C,KAAK,GAAGw/C,QAAQ,CAACC,MAAM,CAACzwD,MAAM,GAAGwwD,QAAQ,CAACt2B,KAAK,CAACl6B,MAAM,GAAGwwD,QAAQ,CAACE,KAAK,CAAC1wD,MAAM;EAAA,GAAE,CAAC,CAAC;EAC5IuwD,kBAAkB,IAAI3yC,OAAO,CAAC+yC,UAAU,CAAC3wD,MAAM,GAAG4d,OAAO,CAACgzC,SAAS,CAAC5wD,MAAM;EAC1E,IAAIowD,cAAc,EAAE;IAClBx1C,MAAM,IAAIw1C,cAAc,GAAG/C,SAAS,CAAClzB,UAAU,GAC9C,CAACi2B,cAAc,GAAG,CAAC,IAAIvpD,OAAO,CAACgqD,YAAY,GAC3ChqD,OAAO,CAACiqD,iBAAiB;EAC5B;EACA,IAAIP,kBAAkB,EAAE;IACtB,IAAMQ,cAAc,GAAGlqD,OAAO,CAACmqD,aAAa,GAAGzxD,IAAI,CAACuC,GAAG,CAACunD,SAAS,EAAE6G,QAAQ,CAAC/1B,UAAU,CAAC,GAAG+1B,QAAQ,CAAC/1B,UAAU;IAC7Gvf,MAAM,IAAI01C,iBAAiB,GAAGS,cAAc,GAC3C,CAACR,kBAAkB,GAAGD,iBAAiB,IAAIJ,QAAQ,CAAC/1B,UAAU,GAC9D,CAACo2B,kBAAkB,GAAG,CAAC,IAAI1pD,OAAO,CAACoqD,WAAW;EACjD;EACA,IAAIZ,eAAe,EAAE;IACnBz1C,MAAM,IAAI/T,OAAO,CAACqqD,eAAe,GAChCb,eAAe,GAAGF,UAAU,CAACh2B,UAAU,GACvC,CAACk2B,eAAe,GAAG,CAAC,IAAIxpD,OAAO,CAACsqD,aAAa;EAChD;EACA,IAAIC,YAAY,GAAG,CAAC;EACpB,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAY9tC,IAAI,EAAE;IAClC1I,KAAK,GAAGtb,IAAI,CAACuC,GAAG,CAAC+Y,KAAK,EAAEpN,GAAG,CAACu9C,WAAW,CAACznC,IAAI,CAAC,CAAC1I,KAAK,GAAGu2C,YAAY,CAAC;EACrE,CAAC;EACD3jD,GAAG,CAAC22B,IAAI,EAAE;EACV32B,GAAG,CAACwsB,IAAI,GAAGozB,SAAS,CAACvsB,MAAM;EAC3BlrC,IAAI,CAACgoB,OAAO,CAACC,KAAK,EAAEwzC,YAAY,CAAC;EACjC5jD,GAAG,CAACwsB,IAAI,GAAGi2B,QAAQ,CAACpvB,MAAM;EAC1BlrC,IAAI,CAACgoB,OAAO,CAAC+yC,UAAU,CAAC3mD,MAAM,CAAC4T,OAAO,CAACgzC,SAAS,CAAC,EAAES,YAAY,CAAC;EAChED,YAAY,GAAGvqD,OAAO,CAACmqD,aAAa,GAAIzH,QAAQ,GAAG,CAAC,GAAI,CAAC;EACzD3zD,IAAI,CAACo6D,IAAI,EAAE,UAACQ,QAAQ,EAAK;IACvB56D,IAAI,CAAC46D,QAAQ,CAACC,MAAM,EAAEY,YAAY,CAAC;IACnCz7D,IAAI,CAAC46D,QAAQ,CAACt2B,KAAK,EAAEm3B,YAAY,CAAC;IAClCz7D,IAAI,CAAC46D,QAAQ,CAACE,KAAK,EAAEW,YAAY,CAAC;EACpC,CAAC,CAAC;EACFD,YAAY,GAAG,CAAC;EAChB3jD,GAAG,CAACwsB,IAAI,GAAGk2B,UAAU,CAACrvB,MAAM;EAC5BlrC,IAAI,CAACgoB,OAAO,CAACqyC,MAAM,EAAEoB,YAAY,CAAC;EAClC5jD,GAAG,CAAC62B,OAAO,EAAE;EACbzpB,KAAK,IAAI+T,OAAO,CAAC/T,KAAK;EACtB,OAAO;IAACA,KAAK,EAALA,KAAK;IAAED,MAAM,EAANA;EAAM,CAAC;AACxB;AACA,SAAS02C,eAAeA,CAAC3yD,KAAK,EAAE2I,IAAI,EAAE;EACpC,IAAOjS,CAAC,GAAYiS,IAAI,CAAjBjS,CAAC;IAAEulB,MAAM,GAAItT,IAAI,CAAdsT,MAAM;EAChB,IAAIvlB,CAAC,GAAGulB,MAAM,GAAG,CAAC,EAAE;IAClB,OAAO,KAAK;EACd,CAAC,MAAM,IAAIvlB,CAAC,GAAIsJ,KAAK,CAACic,MAAM,GAAGA,MAAM,GAAG,CAAE,EAAE;IAC1C,OAAO,QAAQ;EACjB;EACA,OAAO,QAAQ;AACjB;AACA,SAAS22C,mBAAmBA,CAACC,MAAM,EAAE7yD,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAE;EACzD,IAAOnS,CAAC,GAAWmS,IAAI,CAAhBnS,CAAC;IAAE0lB,KAAK,GAAIvT,IAAI,CAAbuT,KAAK;EACf,IAAM42C,KAAK,GAAG5qD,OAAO,CAAC6qD,SAAS,GAAG7qD,OAAO,CAAC8qD,YAAY;EACtD,IAAIH,MAAM,KAAK,MAAM,IAAIr8D,CAAC,GAAG0lB,KAAK,GAAG42C,KAAK,GAAG9yD,KAAK,CAACkc,KAAK,EAAE;IACxD,OAAO,IAAI;EACb;EACA,IAAI22C,MAAM,KAAK,OAAO,IAAIr8D,CAAC,GAAG0lB,KAAK,GAAG42C,KAAK,GAAG,CAAC,EAAE;IAC/C,OAAO,IAAI;EACb;AACF;AACA,SAASG,eAAeA,CAACjzD,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAEuqD,MAAM,EAAE;EACrD,IAAO18D,CAAC,GAAWmS,IAAI,CAAhBnS,CAAC;IAAE0lB,KAAK,GAAIvT,IAAI,CAAbuT,KAAK;EACf,IAAci3C,UAAU,GAA8BnzD,KAAK,CAApDkc,KAAK;IAAAk3C,gBAAA,GAA0CpzD,KAAK,CAAjC6U,SAAS;IAAGlL,IAAI,GAAAypD,gBAAA,CAAJzpD,IAAI;IAAEF,KAAK,GAAA2pD,gBAAA,CAAL3pD,KAAK;EACjD,IAAIopD,MAAM,GAAG,QAAQ;EACrB,IAAIK,MAAM,KAAK,QAAQ,EAAE;IACvBL,MAAM,GAAGr8D,CAAC,IAAI,CAACmT,IAAI,GAAGF,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,OAAO;EACrD,CAAC,MAAM,IAAIjT,CAAC,IAAI0lB,KAAK,GAAG,CAAC,EAAE;IACzB22C,MAAM,GAAG,MAAM;EACjB,CAAC,MAAM,IAAIr8D,CAAC,IAAI28D,UAAU,GAAGj3C,KAAK,GAAG,CAAC,EAAE;IACtC22C,MAAM,GAAG,OAAO;EAClB;EACA,IAAID,mBAAmB,CAACC,MAAM,EAAE7yD,KAAK,EAAEkI,OAAO,EAAES,IAAI,CAAC,EAAE;IACrDkqD,MAAM,GAAG,QAAQ;EACnB;EACA,OAAOA,MAAM;AACf;AACA,SAASQ,kBAAkBA,CAACrzD,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAE;EAChD,IAAMuqD,MAAM,GAAGhrD,OAAO,CAACgrD,MAAM,IAAIP,eAAe,CAAC3yD,KAAK,EAAE2I,IAAI,CAAC;EAC7D,OAAO;IACLkqD,MAAM,EAAE3qD,OAAO,CAAC2qD,MAAM,IAAII,eAAe,CAACjzD,KAAK,EAAEkI,OAAO,EAAES,IAAI,EAAEuqD,MAAM,CAAC;IACvEA,MAAM,EAANA;EACF,CAAC;AACH;AACA,SAASI,MAAMA,CAAC3qD,IAAI,EAAEkqD,MAAM,EAAE;EAC5B,IAAKr8D,CAAC,GAAWmS,IAAI,CAAhBnS,CAAC;IAAE0lB,KAAK,GAAIvT,IAAI,CAAbuT,KAAK;EACb,IAAI22C,MAAM,KAAK,OAAO,EAAE;IACtBr8D,CAAC,IAAI0lB,KAAK;EACZ,CAAC,MAAM,IAAI22C,MAAM,KAAK,QAAQ,EAAE;IAC9Br8D,CAAC,IAAK0lB,KAAK,GAAG,CAAE;EAClB;EACA,OAAO1lB,CAAC;AACV;AACA,SAAS+8D,MAAMA,CAAC5qD,IAAI,EAAEuqD,MAAM,EAAEM,cAAc,EAAE;EAC5C,IAAK98D,CAAC,GAAYiS,IAAI,CAAjBjS,CAAC;IAAEulB,MAAM,GAAItT,IAAI,CAAdsT,MAAM;EACd,IAAIi3C,MAAM,KAAK,KAAK,EAAE;IACpBx8D,CAAC,IAAI88D,cAAc;EACrB,CAAC,MAAM,IAAIN,MAAM,KAAK,QAAQ,EAAE;IAC9Bx8D,CAAC,IAAIulB,MAAM,GAAGu3C,cAAc;EAC9B,CAAC,MAAM;IACL98D,CAAC,IAAKulB,MAAM,GAAG,CAAE;EACnB;EACA,OAAOvlB,CAAC;AACV;AACA,SAAS+8D,kBAAkBA,CAACvrD,OAAO,EAAES,IAAI,EAAE+qD,SAAS,EAAE1zD,KAAK,EAAE;EAC3D,IAAO+yD,SAAS,GAAgC7qD,OAAO,CAAhD6qD,SAAS;IAAEC,YAAY,GAAkB9qD,OAAO,CAArC8qD,YAAY;IAAEW,YAAY,GAAIzrD,OAAO,CAAvByrD,YAAY;EAC5C,IAAOd,MAAM,GAAYa,SAAS,CAA3Bb,MAAM;IAAEK,MAAM,GAAIQ,SAAS,CAAnBR,MAAM;EACrB,IAAMM,cAAc,GAAGT,SAAS,GAAGC,YAAY;EAC/C,IAAMY,gBAAgB,GAAGD,YAAY,GAAGX,YAAY;EACpD,IAAIx8D,CAAC,GAAG88D,MAAM,CAAC3qD,IAAI,EAAEkqD,MAAM,CAAC;EAC5B,IAAMn8D,CAAC,GAAG68D,MAAM,CAAC5qD,IAAI,EAAEuqD,MAAM,EAAEM,cAAc,CAAC;EAC9C,IAAIN,MAAM,KAAK,QAAQ,EAAE;IACvB,IAAIL,MAAM,KAAK,MAAM,EAAE;MACrBr8D,CAAC,IAAIg9D,cAAc;IACrB,CAAC,MAAM,IAAIX,MAAM,KAAK,OAAO,EAAE;MAC7Br8D,CAAC,IAAIg9D,cAAc;IACrB;EACF,CAAC,MAAM,IAAIX,MAAM,KAAK,MAAM,EAAE;IAC5Br8D,CAAC,IAAIo9D,gBAAgB;EACvB,CAAC,MAAM,IAAIf,MAAM,KAAK,OAAO,EAAE;IAC7Br8D,CAAC,IAAIo9D,gBAAgB;EACvB;EACA,OAAO;IACLp9D,CAAC,EAAEH,WAAW,CAACG,CAAC,EAAE,CAAC,EAAEwJ,KAAK,CAACkc,KAAK,GAAGvT,IAAI,CAACuT,KAAK,CAAC;IAC9CxlB,CAAC,EAAEL,WAAW,CAACK,CAAC,EAAE,CAAC,EAAEsJ,KAAK,CAACic,MAAM,GAAGtT,IAAI,CAACsT,MAAM;EACjD,CAAC;AACH;AACA,SAAS43C,WAAWA,CAAC50C,OAAO,EAAEkZ,KAAK,EAAEjwB,OAAO,EAAE;EAC5C,IAAM+nB,OAAO,GAAGl5B,SAAS,CAACmR,OAAO,CAAC+nB,OAAO,CAAC;EAC1C,OAAOkI,KAAK,KAAK,QAAQ,GACrBlZ,OAAO,CAACzoB,CAAC,GAAGyoB,OAAO,CAAC/C,KAAK,GAAG,CAAC,GAC7Bic,KAAK,KAAK,OAAO,GACflZ,OAAO,CAACzoB,CAAC,GAAGyoB,OAAO,CAAC/C,KAAK,GAAG+T,OAAO,CAACxmB,KAAK,GACzCwV,OAAO,CAACzoB,CAAC,GAAGy5B,OAAO,CAACtmB,IAAI;AAChC;AACA,SAASmqD,uBAAuBA,CAAC37D,QAAQ,EAAE;EACzC,OAAO04D,YAAY,CAAC,EAAE,EAAEE,aAAa,CAAC54D,QAAQ,CAAC,CAAC;AAClD;AACA,SAAS47D,oBAAoBA,CAAClmD,MAAM,EAAEoR,OAAO,EAAE+0C,YAAY,EAAE;EAC3D,OAAOztD,MAAM,CAACqC,MAAM,CAACrC,MAAM,CAACuH,MAAM,CAACD,MAAM,CAAC,EAAE;IAC1CoR,OAAO,EAAPA,OAAO;IACP+0C,YAAY,EAAZA,YAAY;IACZ7zD,IAAI,EAAE;EACR,CAAC,CAAC;AACJ;AACA,SAAS8zD,iBAAiBA,CAAC7zD,SAAS,EAAE6U,OAAO,EAAE;EAC7C,IAAM2U,QAAQ,GAAG3U,OAAO,IAAIA,OAAO,CAAClH,OAAO,IAAIkH,OAAO,CAAClH,OAAO,CAACkR,OAAO,IAAIhK,OAAO,CAAClH,OAAO,CAACkR,OAAO,CAAC7e,SAAS;EAC3G,OAAOwpB,QAAQ,GAAGxpB,SAAS,CAACwpB,QAAQ,CAACA,QAAQ,CAAC,GAAGxpB,SAAS;AAC5D;AAAC,IACK8zD,OAAO,0BAAAC,SAAA;EAAA35C,SAAA,CAAA05C,OAAA,EAAAC,SAAA;EAAA,IAAAC,QAAA,GAAA15C,YAAA,CAAAw5C,OAAA;EACX,SAAAA,QAAY5sD,MAAM,EAAE;IAAA,IAAA+sD,OAAA;IAAAh1D,eAAA,OAAA60D,OAAA;IAClBG,OAAA,GAAAD,QAAA,CAAAnzD,IAAA;IACAozD,OAAA,CAAKC,OAAO,GAAG,CAAC;IAChBD,OAAA,CAAKxyD,OAAO,GAAG,EAAE;IACjBwyD,OAAA,CAAK9sD,MAAM,GAAGD,MAAM,CAACC,MAAM;IAC3B8sD,OAAA,CAAKE,cAAc,GAAG50D,SAAS;IAC/B00D,OAAA,CAAKG,KAAK,GAAG70D,SAAS;IACtB00D,OAAA,CAAKI,iBAAiB,GAAG90D,SAAS;IAClC00D,OAAA,CAAKK,aAAa,GAAG,EAAE;IACvBL,OAAA,CAAK9rD,WAAW,GAAG5I,SAAS;IAC5B00D,OAAA,CAAK5kD,QAAQ,GAAG9P,SAAS;IACzB00D,OAAA,CAAKnsD,OAAO,GAAGZ,MAAM,CAACY,OAAO;IAC7BmsD,OAAA,CAAKM,UAAU,GAAGh1D,SAAS;IAC3B00D,OAAA,CAAKn1C,KAAK,GAAGvf,SAAS;IACtB00D,OAAA,CAAKrC,UAAU,GAAGryD,SAAS;IAC3B00D,OAAA,CAAKhD,IAAI,GAAG1xD,SAAS;IACrB00D,OAAA,CAAKpC,SAAS,GAAGtyD,SAAS;IAC1B00D,OAAA,CAAK/C,MAAM,GAAG3xD,SAAS;IACvB00D,OAAA,CAAKxB,MAAM,GAAGlzD,SAAS;IACvB00D,OAAA,CAAKnB,MAAM,GAAGvzD,SAAS;IACvB00D,OAAA,CAAK79D,CAAC,GAAGmJ,SAAS;IAClB00D,OAAA,CAAK39D,CAAC,GAAGiJ,SAAS;IAClB00D,OAAA,CAAKp4C,MAAM,GAAGtc,SAAS;IACvB00D,OAAA,CAAKn4C,KAAK,GAAGvc,SAAS;IACtB00D,OAAA,CAAKO,MAAM,GAAGj1D,SAAS;IACvB00D,OAAA,CAAKQ,MAAM,GAAGl1D,SAAS;IACvB00D,OAAA,CAAKS,WAAW,GAAGn1D,SAAS;IAC5B00D,OAAA,CAAKU,gBAAgB,GAAGp1D,SAAS;IACjC00D,OAAA,CAAKW,eAAe,GAAGr1D,SAAS;IAAC,OAAA00D,OAAA;EACnC;EAACz0D,YAAA,CAAAs0D,OAAA;IAAAr0D,GAAA;IAAAC,KAAA,EACD,SAAA6P,WAAWzH,OAAO,EAAE;MAClB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACusD,iBAAiB,GAAG90D,SAAS;MAClC,IAAI,CAAC8P,QAAQ,GAAG9P,SAAS;IAC3B;EAAC;IAAAE,GAAA;IAAAC,KAAA,EACD,SAAA+V,mBAAA,EAAqB;MACnB,IAAM7U,EAAE,GAAG,IAAI;MACf,IAAM0N,MAAM,GAAG1N,EAAE,CAACyzD,iBAAiB;MACnC,IAAI/lD,MAAM,EAAE;QACV,OAAOA,MAAM;MACf;MACA,IAAM1O,KAAK,GAAGgB,EAAE,CAACuG,MAAM;MACvB,IAAMW,OAAO,GAAGlH,EAAE,CAACkH,OAAO,CAACo1B,UAAU,CAACt8B,EAAE,CAACkR,UAAU,EAAE,CAAC;MACtD,IAAMhJ,IAAI,GAAGhB,OAAO,CAAC6wB,OAAO,IAAI/4B,KAAK,CAACkI,OAAO,CAACzB,SAAS,IAAIyB,OAAO,CAAChB,UAAU;MAC7E,IAAMA,UAAU,GAAG,IAAIG,UAAU,CAACrG,EAAE,CAACuG,MAAM,EAAE2B,IAAI,CAAC;MAClD,IAAIA,IAAI,CAAC8M,UAAU,EAAE;QACnBhV,EAAE,CAACyzD,iBAAiB,GAAGluD,MAAM,CAACqP,MAAM,CAAC1O,UAAU,CAAC;MAClD;MACA,OAAOA,UAAU;IACnB;EAAC;IAAArH,GAAA;IAAAC,KAAA,EACD,SAAAoS,WAAA,EAAa;MACX,IAAMlR,EAAE,GAAG,IAAI;MACf,OAAOA,EAAE,CAACyO,QAAQ,KAClBzO,EAAE,CAACyO,QAAQ,GAAGskD,oBAAoB,CAAC/yD,EAAE,CAACuG,MAAM,CAAC2K,UAAU,EAAE,EAAElR,EAAE,EAAEA,EAAE,CAAC0zD,aAAa,CAAC,CAAC;IACnF;EAAC;IAAA70D,GAAA;IAAAC,KAAA,EACD,SAAAm1D,SAAShgD,OAAO,EAAE/M,OAAO,EAAE;MACzB,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAOZ,SAAS,GAAI8H,OAAO,CAApB9H,SAAS;MAChB,IAAM80D,WAAW,GAAG90D,SAAS,CAAC80D,WAAW,CAACryD,KAAK,CAAC7B,EAAE,EAAE,CAACiU,OAAO,CAAC,CAAC;MAC9D,IAAMiK,KAAK,GAAG9e,SAAS,CAAC8e,KAAK,CAACrc,KAAK,CAAC7B,EAAE,EAAE,CAACiU,OAAO,CAAC,CAAC;MAClD,IAAMkgD,UAAU,GAAG/0D,SAAS,CAAC+0D,UAAU,CAACtyD,KAAK,CAAC7B,EAAE,EAAE,CAACiU,OAAO,CAAC,CAAC;MAC5D,IAAIsmB,KAAK,GAAG,EAAE;MACdA,KAAK,GAAGs1B,YAAY,CAACt1B,KAAK,EAAEw1B,aAAa,CAACmE,WAAW,CAAC,CAAC;MACvD35B,KAAK,GAAGs1B,YAAY,CAACt1B,KAAK,EAAEw1B,aAAa,CAAC7xC,KAAK,CAAC,CAAC;MACjDqc,KAAK,GAAGs1B,YAAY,CAACt1B,KAAK,EAAEw1B,aAAa,CAACoE,UAAU,CAAC,CAAC;MACtD,OAAO55B,KAAK;IACd;EAAC;IAAA17B,GAAA;IAAAC,KAAA,EACD,SAAAs1D,cAAcpB,YAAY,EAAE9rD,OAAO,EAAE;MACnC,OAAO4rD,uBAAuB,CAAC5rD,OAAO,CAAC9H,SAAS,CAAC4xD,UAAU,CAACnvD,KAAK,CAAC,IAAI,EAAE,CAACmxD,YAAY,CAAC,CAAC,CAAC;IAC1F;EAAC;IAAAn0D,GAAA;IAAAC,KAAA,EACD,SAAAu1D,QAAQrB,YAAY,EAAE9rD,OAAO,EAAE;MAC7B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAOZ,SAAS,GAAI8H,OAAO,CAApB9H,SAAS;MAChB,IAAMk1D,SAAS,GAAG,EAAE;MACpBr+D,IAAI,CAAC+8D,YAAY,EAAE,UAAC/+C,OAAO,EAAK;QAC9B,IAAM48C,QAAQ,GAAG;UACfC,MAAM,EAAE,EAAE;UACVv2B,KAAK,EAAE,EAAE;UACTw2B,KAAK,EAAE;QACT,CAAC;QACD,IAAMwD,MAAM,GAAGtB,iBAAiB,CAAC7zD,SAAS,EAAE6U,OAAO,CAAC;QACpD47C,YAAY,CAACgB,QAAQ,CAACC,MAAM,EAAEf,aAAa,CAACwE,MAAM,CAACC,WAAW,CAACv0D,IAAI,CAACD,EAAE,EAAEiU,OAAO,CAAC,CAAC,CAAC;QAClF47C,YAAY,CAACgB,QAAQ,CAACt2B,KAAK,EAAEg6B,MAAM,CAAChhD,KAAK,CAACtT,IAAI,CAACD,EAAE,EAAEiU,OAAO,CAAC,CAAC;QAC5D47C,YAAY,CAACgB,QAAQ,CAACE,KAAK,EAAEhB,aAAa,CAACwE,MAAM,CAACE,UAAU,CAACx0D,IAAI,CAACD,EAAE,EAAEiU,OAAO,CAAC,CAAC,CAAC;QAChFqgD,SAAS,CAAC5yD,IAAI,CAACmvD,QAAQ,CAAC;MAC1B,CAAC,CAAC;MACF,OAAOyD,SAAS;IAClB;EAAC;IAAAz1D,GAAA;IAAAC,KAAA,EACD,SAAA41D,aAAa1B,YAAY,EAAE9rD,OAAO,EAAE;MAClC,OAAO4rD,uBAAuB,CAAC5rD,OAAO,CAAC9H,SAAS,CAAC6xD,SAAS,CAACpvD,KAAK,CAAC,IAAI,EAAE,CAACmxD,YAAY,CAAC,CAAC,CAAC;IACzF;EAAC;IAAAn0D,GAAA;IAAAC,KAAA,EACD,SAAA61D,UAAU3B,YAAY,EAAE9rD,OAAO,EAAE;MAC/B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAOZ,SAAS,GAAI8H,OAAO,CAApB9H,SAAS;MAChB,IAAMw1D,YAAY,GAAGx1D,SAAS,CAACw1D,YAAY,CAAC/yD,KAAK,CAAC7B,EAAE,EAAE,CAACgzD,YAAY,CAAC,CAAC;MACrE,IAAM1C,MAAM,GAAGlxD,SAAS,CAACkxD,MAAM,CAACzuD,KAAK,CAAC7B,EAAE,EAAE,CAACgzD,YAAY,CAAC,CAAC;MACzD,IAAM6B,WAAW,GAAGz1D,SAAS,CAACy1D,WAAW,CAAChzD,KAAK,CAAC7B,EAAE,EAAE,CAACgzD,YAAY,CAAC,CAAC;MACnE,IAAIz4B,KAAK,GAAG,EAAE;MACdA,KAAK,GAAGs1B,YAAY,CAACt1B,KAAK,EAAEw1B,aAAa,CAAC6E,YAAY,CAAC,CAAC;MACxDr6B,KAAK,GAAGs1B,YAAY,CAACt1B,KAAK,EAAEw1B,aAAa,CAACO,MAAM,CAAC,CAAC;MAClD/1B,KAAK,GAAGs1B,YAAY,CAACt1B,KAAK,EAAEw1B,aAAa,CAAC8E,WAAW,CAAC,CAAC;MACvD,OAAOt6B,KAAK;IACd;EAAC;IAAA17B,GAAA;IAAAC,KAAA,EACD,SAAAg2D,aAAa5tD,OAAO,EAAE;MACpB,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMyE,MAAM,GAAGzE,EAAE,CAACa,OAAO;MACzB,IAAM+I,IAAI,GAAG5J,EAAE,CAACuG,MAAM,CAACqD,IAAI;MAC3B,IAAMkqD,WAAW,GAAG,EAAE;MACtB,IAAMC,gBAAgB,GAAG,EAAE;MAC3B,IAAMC,eAAe,GAAG,EAAE;MAC1B,IAAIhB,YAAY,GAAG,EAAE;MACrB,IAAItgE,CAAC,EAAEymC,GAAG;MACV,KAAKzmC,CAAC,GAAG,CAAC,EAAEymC,GAAG,GAAG10B,MAAM,CAACpE,MAAM,EAAE3N,CAAC,GAAGymC,GAAG,EAAE,EAAEzmC,CAAC,EAAE;QAC7CsgE,YAAY,CAACtxD,IAAI,CAACwuD,iBAAiB,CAAClwD,EAAE,CAACuG,MAAM,EAAE9B,MAAM,CAAC/R,CAAC,CAAC,CAAC,CAAC;MAC5D;MACA,IAAIwU,OAAO,CAACwF,MAAM,EAAE;QAClBsmD,YAAY,GAAGA,YAAY,CAACtmD,MAAM,CAAC,UAACO,OAAO,EAAE9D,KAAK,EAAEyiB,KAAK;UAAA,OAAK1kB,OAAO,CAACwF,MAAM,CAACO,OAAO,EAAE9D,KAAK,EAAEyiB,KAAK,EAAEhiB,IAAI,CAAC;QAAA,EAAC;MAC5G;MACA,IAAI1C,OAAO,CAAC6tD,QAAQ,EAAE;QACpB/B,YAAY,GAAGA,YAAY,CAAC37C,IAAI,CAAC,UAACjlB,CAAC,EAAEQ,CAAC;UAAA,OAAKsU,OAAO,CAAC6tD,QAAQ,CAAC3iE,CAAC,EAAEQ,CAAC,EAAEgX,IAAI,CAAC;QAAA,EAAC;MAC1E;MACA3T,IAAI,CAAC+8D,YAAY,EAAE,UAAC/+C,OAAO,EAAK;QAC9B,IAAMsgD,MAAM,GAAGtB,iBAAiB,CAAC/rD,OAAO,CAAC9H,SAAS,EAAE6U,OAAO,CAAC;QAC5D6/C,WAAW,CAACpyD,IAAI,CAAC6yD,MAAM,CAACS,UAAU,CAAC/0D,IAAI,CAACD,EAAE,EAAEiU,OAAO,CAAC,CAAC;QACrD8/C,gBAAgB,CAACryD,IAAI,CAAC6yD,MAAM,CAACU,eAAe,CAACh1D,IAAI,CAACD,EAAE,EAAEiU,OAAO,CAAC,CAAC;QAC/D+/C,eAAe,CAACtyD,IAAI,CAAC6yD,MAAM,CAACW,cAAc,CAACj1D,IAAI,CAACD,EAAE,EAAEiU,OAAO,CAAC,CAAC;MAC/D,CAAC,CAAC;MACFjU,EAAE,CAAC8zD,WAAW,GAAGA,WAAW;MAC5B9zD,EAAE,CAAC+zD,gBAAgB,GAAGA,gBAAgB;MACtC/zD,EAAE,CAACg0D,eAAe,GAAGA,eAAe;MACpCh0D,EAAE,CAAC2zD,UAAU,GAAGX,YAAY;MAC5B,OAAOA,YAAY;IACrB;EAAC;IAAAn0D,GAAA;IAAAC,KAAA,EACD,SAAA4F,OAAOihB,OAAO,EAAEmwB,MAAM,EAAE;MACtB,IAAM91C,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO,CAACo1B,UAAU,CAACt8B,EAAE,CAACkR,UAAU,EAAE,CAAC;MACtD,IAAMzM,MAAM,GAAGzE,EAAE,CAACa,OAAO;MACzB,IAAIkF,UAAU;MACd,IAAIitD,YAAY,GAAG,EAAE;MACrB,IAAI,CAACvuD,MAAM,CAACpE,MAAM,EAAE;QAClB,IAAIL,EAAE,CAACszD,OAAO,KAAK,CAAC,EAAE;UACpBvtD,UAAU,GAAG;YACXutD,OAAO,EAAE;UACX,CAAC;QACH;MACF,CAAC,MAAM;QACL,IAAMxpC,QAAQ,GAAG0lC,WAAW,CAACtoD,OAAO,CAAC4iB,QAAQ,CAAC,CAAC7pB,IAAI,CAACD,EAAE,EAAEyE,MAAM,EAAEzE,EAAE,CAACuzD,cAAc,CAAC;QAClFP,YAAY,GAAGhzD,EAAE,CAAC80D,YAAY,CAAC5tD,OAAO,CAAC;QACvClH,EAAE,CAACke,KAAK,GAAGle,EAAE,CAACi0D,QAAQ,CAACjB,YAAY,EAAE9rD,OAAO,CAAC;QAC7ClH,EAAE,CAACgxD,UAAU,GAAGhxD,EAAE,CAACo0D,aAAa,CAACpB,YAAY,EAAE9rD,OAAO,CAAC;QACvDlH,EAAE,CAACqwD,IAAI,GAAGrwD,EAAE,CAACq0D,OAAO,CAACrB,YAAY,EAAE9rD,OAAO,CAAC;QAC3ClH,EAAE,CAACixD,SAAS,GAAGjxD,EAAE,CAAC00D,YAAY,CAAC1B,YAAY,EAAE9rD,OAAO,CAAC;QACrDlH,EAAE,CAACswD,MAAM,GAAGtwD,EAAE,CAAC20D,SAAS,CAAC3B,YAAY,EAAE9rD,OAAO,CAAC;QAC/C,IAAMS,IAAI,GAAG3H,EAAE,CAACwzD,KAAK,GAAGpD,cAAc,CAACpwD,EAAE,EAAEkH,OAAO,CAAC;QACnD,IAAMiuD,eAAe,GAAG5vD,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEkiB,QAAQ,EAAEniB,IAAI,CAAC;QACzD,IAAM+qD,SAAS,GAAGL,kBAAkB,CAACryD,EAAE,CAACuG,MAAM,EAAEW,OAAO,EAAEiuD,eAAe,CAAC;QACzE,IAAMC,eAAe,GAAG3C,kBAAkB,CAACvrD,OAAO,EAAEiuD,eAAe,EAAEzC,SAAS,EAAE1yD,EAAE,CAACuG,MAAM,CAAC;QAC1FvG,EAAE,CAAC6xD,MAAM,GAAGa,SAAS,CAACb,MAAM;QAC5B7xD,EAAE,CAACkyD,MAAM,GAAGQ,SAAS,CAACR,MAAM;QAC5BnsD,UAAU,GAAG;UACXutD,OAAO,EAAE,CAAC;UACV99D,CAAC,EAAE4/D,eAAe,CAAC5/D,CAAC;UACpBE,CAAC,EAAE0/D,eAAe,CAAC1/D,CAAC;UACpBwlB,KAAK,EAAEvT,IAAI,CAACuT,KAAK;UACjBD,MAAM,EAAEtT,IAAI,CAACsT,MAAM;UACnB24C,MAAM,EAAE9pC,QAAQ,CAACt0B,CAAC;UAClBq+D,MAAM,EAAE/pC,QAAQ,CAACp0B;QACnB,CAAC;MACH;MACAsK,EAAE,CAAC0zD,aAAa,GAAGV,YAAY;MAC/BhzD,EAAE,CAACyO,QAAQ,GAAG9P,SAAS;MACvB,IAAIoH,UAAU,EAAE;QACd/F,EAAE,CAAC6U,kBAAkB,EAAE,CAACnQ,MAAM,CAAC1E,EAAE,EAAE+F,UAAU,CAAC;MAChD;MACA,IAAI4f,OAAO,IAAIze,OAAO,CAACmuD,QAAQ,EAAE;QAC/BnuD,OAAO,CAACmuD,QAAQ,CAACp1D,IAAI,CAACD,EAAE,EAAE;UAAChB,KAAK,EAAEgB,EAAE,CAACuG,MAAM;UAAE0X,OAAO,EAAEje,EAAE;UAAE81C,MAAM,EAANA;QAAM,CAAC,CAAC;MACpE;IACF;EAAC;IAAAj3C,GAAA;IAAAC,KAAA,EACD,SAAAw2D,UAAUC,YAAY,EAAEznD,GAAG,EAAEnG,IAAI,EAAET,OAAO,EAAE;MAC1C,IAAMsuD,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACF,YAAY,EAAE5tD,IAAI,EAAET,OAAO,CAAC;MACxE4G,GAAG,CAACu3B,MAAM,CAACmwB,aAAa,CAAC9yB,EAAE,EAAE8yB,aAAa,CAAC7yB,EAAE,CAAC;MAC9C70B,GAAG,CAACu3B,MAAM,CAACmwB,aAAa,CAAC5yB,EAAE,EAAE4yB,aAAa,CAAC3yB,EAAE,CAAC;MAC9C/0B,GAAG,CAACu3B,MAAM,CAACmwB,aAAa,CAACE,EAAE,EAAEF,aAAa,CAACG,EAAE,CAAC;IAChD;EAAC;IAAA92D,GAAA;IAAAC,KAAA,EACD,SAAA22D,iBAAiBF,YAAY,EAAE5tD,IAAI,EAAET,OAAO,EAAE;MAC5C,IAAO2qD,MAAM,GAAY,IAAI,CAAtBA,MAAM;QAAEK,MAAM,GAAI,IAAI,CAAdA,MAAM;MACrB,IAAOS,YAAY,GAAezrD,OAAO,CAAlCyrD,YAAY;QAAEZ,SAAS,GAAI7qD,OAAO,CAApB6qD,SAAS;MAC9B,IAAU6D,GAAG,GAAYL,YAAY,CAA9B//D,CAAC;QAAUqgE,GAAG,GAAIN,YAAY,CAAtB7/D,CAAC;MAChB,IAAOwlB,KAAK,GAAYvT,IAAI,CAArBuT,KAAK;QAAED,MAAM,GAAItT,IAAI,CAAdsT,MAAM;MACpB,IAAIynB,EAAE,EAAEE,EAAE,EAAE8yB,EAAE,EAAE/yB,EAAE,EAAEE,EAAE,EAAE8yB,EAAE;MAC1B,IAAIzD,MAAM,KAAK,QAAQ,EAAE;QACvBrvB,EAAE,GAAGgzB,GAAG,GAAI56C,MAAM,GAAG,CAAE;QACvB,IAAI42C,MAAM,KAAK,MAAM,EAAE;UACrBnvB,EAAE,GAAGkzB,GAAG;UACRhzB,EAAE,GAAGF,EAAE,GAAGqvB,SAAS;UACnBpvB,EAAE,GAAGE,EAAE,GAAGkvB,SAAS;UACnB4D,EAAE,GAAG9yB,EAAE,GAAGkvB,SAAS;QACrB,CAAC,MAAM;UACLrvB,EAAE,GAAGkzB,GAAG,GAAG16C,KAAK;UAChB0nB,EAAE,GAAGF,EAAE,GAAGqvB,SAAS;UACnBpvB,EAAE,GAAGE,EAAE,GAAGkvB,SAAS;UACnB4D,EAAE,GAAG9yB,EAAE,GAAGkvB,SAAS;QACrB;QACA2D,EAAE,GAAGhzB,EAAE;MACT,CAAC,MAAM;QACL,IAAImvB,MAAM,KAAK,MAAM,EAAE;UACrBjvB,EAAE,GAAGgzB,GAAG,GAAGjD,YAAY,GAAIZ,SAAU;QACvC,CAAC,MAAM,IAAIF,MAAM,KAAK,OAAO,EAAE;UAC7BjvB,EAAE,GAAGgzB,GAAG,GAAG16C,KAAK,GAAGy3C,YAAY,GAAGZ,SAAS;QAC7C,CAAC,MAAM;UACLnvB,EAAE,GAAG,IAAI,CAACgxB,MAAM;QAClB;QACA,IAAI1B,MAAM,KAAK,KAAK,EAAE;UACpBvvB,EAAE,GAAGkzB,GAAG;UACRhzB,EAAE,GAAGF,EAAE,GAAGovB,SAAS;UACnBrvB,EAAE,GAAGE,EAAE,GAAGmvB,SAAS;UACnB2D,EAAE,GAAG9yB,EAAE,GAAGmvB,SAAS;QACrB,CAAC,MAAM;UACLpvB,EAAE,GAAGkzB,GAAG,GAAG56C,MAAM;UACjB4nB,EAAE,GAAGF,EAAE,GAAGovB,SAAS;UACnBrvB,EAAE,GAAGE,EAAE,GAAGmvB,SAAS;UACnB2D,EAAE,GAAG9yB,EAAE,GAAGmvB,SAAS;QACrB;QACA4D,EAAE,GAAGhzB,EAAE;MACT;MACA,OAAO;QAACD,EAAE,EAAFA,EAAE;QAAEE,EAAE,EAAFA,EAAE;QAAE8yB,EAAE,EAAFA,EAAE;QAAE/yB,EAAE,EAAFA,EAAE;QAAEE,EAAE,EAAFA,EAAE;QAAE8yB,EAAE,EAAFA;MAAE,CAAC;IACjC;EAAC;IAAA92D,GAAA;IAAAC,KAAA,EACD,SAAA2mC,UAAUqwB,EAAE,EAAEhoD,GAAG,EAAE5G,OAAO,EAAE;MAC1B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMke,KAAK,GAAGle,EAAE,CAACke,KAAK;MACtB,IAAM7d,MAAM,GAAG6d,KAAK,CAAC7d,MAAM;MAC3B,IAAIqtD,SAAS,EAAEwD,YAAY,EAAEx+D,CAAC;MAC9B,IAAI2N,MAAM,EAAE;QACV,IAAMksD,SAAS,GAAG9vD,aAAa,CAACyK,OAAO,CAAC2kD,GAAG,EAAE7rD,EAAE,CAACxK,CAAC,EAAEwK,EAAE,CAACkb,KAAK,CAAC;QAC5D46C,EAAE,CAACtgE,CAAC,GAAGq9D,WAAW,CAAC7yD,EAAE,EAAEkH,OAAO,CAACyzB,UAAU,EAAEzzB,OAAO,CAAC;QACnD4G,GAAG,CAAC01B,SAAS,GAAG+oB,SAAS,CAAC/oB,SAAS,CAACt8B,OAAO,CAACyzB,UAAU,CAAC;QACvD7sB,GAAG,CAAC61B,YAAY,GAAG,QAAQ;QAC3B+pB,SAAS,GAAGr1D,MAAM,CAAC6O,OAAO,CAACwmD,SAAS,CAAC;QACrCwD,YAAY,GAAGhqD,OAAO,CAACgqD,YAAY;QACnCpjD,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAAC6uD,UAAU;QAClCjoD,GAAG,CAACwsB,IAAI,GAAGozB,SAAS,CAACvsB,MAAM;QAC3B,KAAKzuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;UAC3Bob,GAAG,CAACs/C,QAAQ,CAAClvC,KAAK,CAACxrB,CAAC,CAAC,EAAE65D,SAAS,CAAC/2D,CAAC,CAACsgE,EAAE,CAACtgE,CAAC,CAAC,EAAEsgE,EAAE,CAACpgE,CAAC,GAAGg4D,SAAS,CAAClzB,UAAU,GAAG,CAAC,CAAC;UAC1Es7B,EAAE,CAACpgE,CAAC,IAAIg4D,SAAS,CAAClzB,UAAU,GAAG02B,YAAY;UAC3C,IAAIx+D,CAAC,GAAG,CAAC,KAAK2N,MAAM,EAAE;YACpBy1D,EAAE,CAACpgE,CAAC,IAAIwR,OAAO,CAACiqD,iBAAiB,GAAGD,YAAY;UAClD;QACF;MACF;IACF;EAAC;IAAAryD,GAAA;IAAAC,KAAA,EACD,SAAAk3D,cAAcloD,GAAG,EAAEgoD,EAAE,EAAEpjE,CAAC,EAAE65D,SAAS,EAAErlD,OAAO,EAAE;MAC5C,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAM8zD,WAAW,GAAG9zD,EAAE,CAAC8zD,WAAW,CAACphE,CAAC,CAAC;MACrC,IAAMuiE,eAAe,GAAGj1D,EAAE,CAAC+zD,gBAAgB,CAACrhE,CAAC,CAAC;MAC9C,IAAOg3D,SAAS,GAAcxiD,OAAO,CAA9BwiD,SAAS;QAAEE,QAAQ,GAAI1iD,OAAO,CAAnB0iD,QAAQ;MAC1B,IAAM2G,QAAQ,GAAGl4D,MAAM,CAAC6O,OAAO,CAACqpD,QAAQ,CAAC;MACzC,IAAM0F,MAAM,GAAGpD,WAAW,CAAC7yD,EAAE,EAAE,MAAM,EAAEkH,OAAO,CAAC;MAC/C,IAAMgvD,SAAS,GAAG3J,SAAS,CAAC/2D,CAAC,CAACygE,MAAM,CAAC;MACrC,IAAME,OAAO,GAAGzM,SAAS,GAAG6G,QAAQ,CAAC/1B,UAAU,GAAG,CAAC+1B,QAAQ,CAAC/1B,UAAU,GAAGkvB,SAAS,IAAI,CAAC,GAAG,CAAC;MAC3F,IAAM0M,MAAM,GAAGN,EAAE,CAACpgE,CAAC,GAAGygE,OAAO;MAC7B,IAAIjvD,OAAO,CAAC2iD,aAAa,EAAE;QACzB,IAAMiD,WAAW,GAAG;UAClB/uC,MAAM,EAAEne,IAAI,CAACC,GAAG,CAAC+pD,QAAQ,EAAEF,SAAS,CAAC,GAAG,CAAC;UACzClnC,UAAU,EAAEyyC,eAAe,CAACzyC,UAAU;UACtCpE,QAAQ,EAAE62C,eAAe,CAAC72C,QAAQ;UAClC4D,WAAW,EAAE;QACf,CAAC;QACD,IAAMP,OAAO,GAAG8qC,SAAS,CAACY,UAAU,CAAC+I,SAAS,EAAEtM,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAAC;QACxE,IAAMloC,OAAO,GAAG00C,MAAM,GAAG1M,SAAS,GAAG,CAAC;QACtC57C,GAAG,CAACgV,WAAW,GAAG5b,OAAO,CAACmvD,kBAAkB;QAC5CvoD,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAACmvD,kBAAkB;QAC1Cx6D,SAAS,CAACiS,GAAG,EAAEg/C,WAAW,EAAErrC,OAAO,EAAEC,OAAO,CAAC;QAC7C5T,GAAG,CAACgV,WAAW,GAAGgxC,WAAW,CAAC/wC,WAAW;QACzCjV,GAAG,CAAC8U,SAAS,GAAGkxC,WAAW,CAACjxC,eAAe;QAC3ChnB,SAAS,CAACiS,GAAG,EAAEg/C,WAAW,EAAErrC,OAAO,EAAEC,OAAO,CAAC;MAC/C,CAAC,MAAM;QACL5T,GAAG,CAACkV,SAAS,GAAG8wC,WAAW,CAAC9xC,WAAW,IAAI,CAAC;QAC5ClU,GAAG,CAACgV,WAAW,GAAGgxC,WAAW,CAAC/wC,WAAW;QACzCjV,GAAG,CAACm3B,WAAW,CAAC6uB,WAAW,CAACv9B,UAAU,IAAI,EAAE,CAAC;QAC7CzoB,GAAG,CAACo3B,cAAc,GAAG4uB,WAAW,CAACt9B,gBAAgB,IAAI,CAAC;QACtD,IAAM8/B,MAAM,GAAG/J,SAAS,CAACY,UAAU,CAAC+I,SAAS,EAAEtM,QAAQ,CAAC;QACxD,IAAM2M,MAAM,GAAGhK,SAAS,CAACY,UAAU,CAACZ,SAAS,CAACS,KAAK,CAACkJ,SAAS,EAAE,CAAC,CAAC,EAAEtM,QAAQ,GAAG,CAAC,CAAC;QAChF,IAAMzS,YAAY,GAAGh7C,aAAa,CAAC23D,WAAW,CAAC3c,YAAY,CAAC;QAC5D,IAAI5xC,MAAM,CAACyB,MAAM,CAACmwC,YAAY,CAAC,CAAChM,IAAI,CAAC,UAAAn4C,CAAC;UAAA,OAAIA,CAAC,KAAK,CAAC;QAAA,EAAC,EAAE;UAClD8a,GAAG,CAACq3B,SAAS,EAAE;UACfr3B,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAACmvD,kBAAkB;UAC1Ct6D,kBAAkB,CAAC+R,GAAG,EAAE;YACtBtY,CAAC,EAAE8gE,MAAM;YACT5gE,CAAC,EAAE0gE,MAAM;YACT9gE,CAAC,EAAEs0D,QAAQ;YACXl2D,CAAC,EAAEg2D,SAAS;YACZ3rC,MAAM,EAAEo5B;UACV,CAAC,CAAC;UACFrpC,GAAG,CAAC4Z,IAAI,EAAE;UACV5Z,GAAG,CAACw3B,MAAM,EAAE;UACZx3B,GAAG,CAAC8U,SAAS,GAAGkxC,WAAW,CAACjxC,eAAe;UAC3C/U,GAAG,CAACq3B,SAAS,EAAE;UACfppC,kBAAkB,CAAC+R,GAAG,EAAE;YACtBtY,CAAC,EAAE+gE,MAAM;YACT7gE,CAAC,EAAE0gE,MAAM,GAAG,CAAC;YACb9gE,CAAC,EAAEs0D,QAAQ,GAAG,CAAC;YACfl2D,CAAC,EAAEg2D,SAAS,GAAG,CAAC;YAChB3rC,MAAM,EAAEo5B;UACV,CAAC,CAAC;UACFrpC,GAAG,CAAC4Z,IAAI,EAAE;QACZ,CAAC,MAAM;UACL5Z,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAACmvD,kBAAkB;UAC1CvoD,GAAG,CAAC42B,QAAQ,CAAC4xB,MAAM,EAAEF,MAAM,EAAExM,QAAQ,EAAEF,SAAS,CAAC;UACjD57C,GAAG,CAAC0oD,UAAU,CAACF,MAAM,EAAEF,MAAM,EAAExM,QAAQ,EAAEF,SAAS,CAAC;UACnD57C,GAAG,CAAC8U,SAAS,GAAGkxC,WAAW,CAACjxC,eAAe;UAC3C/U,GAAG,CAAC42B,QAAQ,CAAC6xB,MAAM,EAAEH,MAAM,GAAG,CAAC,EAAExM,QAAQ,GAAG,CAAC,EAAEF,SAAS,GAAG,CAAC,CAAC;QAC/D;MACF;MACA57C,GAAG,CAAC8U,SAAS,GAAG5iB,EAAE,CAACg0D,eAAe,CAACthE,CAAC,CAAC;IACvC;EAAC;IAAAmM,GAAA;IAAAC,KAAA,EACD,SAAA23D,SAASX,EAAE,EAAEhoD,GAAG,EAAE5G,OAAO,EAAE;MACzB,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAOqwD,IAAI,GAAIrwD,EAAE,CAAVqwD,IAAI;MACX,IAAOiB,WAAW,GAAmDpqD,OAAO,CAArEoqD,WAAW;QAAEoF,SAAS,GAAwCxvD,OAAO,CAAxDwvD,SAAS;QAAErF,aAAa,GAAyBnqD,OAAO,CAA7CmqD,aAAa;QAAE3H,SAAS,GAAcxiD,OAAO,CAA9BwiD,SAAS;QAAEE,QAAQ,GAAI1iD,OAAO,CAAnB0iD,QAAQ;MACjE,IAAM2G,QAAQ,GAAGl4D,MAAM,CAAC6O,OAAO,CAACqpD,QAAQ,CAAC;MACzC,IAAIa,cAAc,GAAGb,QAAQ,CAAC/1B,UAAU;MACxC,IAAIm8B,YAAY,GAAG,CAAC;MACpB,IAAMpK,SAAS,GAAG9vD,aAAa,CAACyK,OAAO,CAAC2kD,GAAG,EAAE7rD,EAAE,CAACxK,CAAC,EAAEwK,EAAE,CAACkb,KAAK,CAAC;MAC5D,IAAM07C,cAAc,GAAG,SAAjBA,cAAcA,CAAYhzC,IAAI,EAAE;QACpC9V,GAAG,CAACs/C,QAAQ,CAACxpC,IAAI,EAAE2oC,SAAS,CAAC/2D,CAAC,CAACsgE,EAAE,CAACtgE,CAAC,GAAGmhE,YAAY,CAAC,EAAEb,EAAE,CAACpgE,CAAC,GAAG07D,cAAc,GAAG,CAAC,CAAC;QAC/E0E,EAAE,CAACpgE,CAAC,IAAI07D,cAAc,GAAGE,WAAW;MACtC,CAAC;MACD,IAAMuF,uBAAuB,GAAGtK,SAAS,CAAC/oB,SAAS,CAACkzB,SAAS,CAAC;MAC9D,IAAI7F,QAAQ,EAAEiG,SAAS,EAAEv8B,KAAK,EAAE7nC,CAAC,EAAEoB,CAAC,EAAEoV,IAAI,EAAEmgB,IAAI;MAChDvb,GAAG,CAAC01B,SAAS,GAAGkzB,SAAS;MACzB5oD,GAAG,CAAC61B,YAAY,GAAG,QAAQ;MAC3B71B,GAAG,CAACwsB,IAAI,GAAGi2B,QAAQ,CAACpvB,MAAM;MAC1B20B,EAAE,CAACtgE,CAAC,GAAGq9D,WAAW,CAAC7yD,EAAE,EAAE62D,uBAAuB,EAAE3vD,OAAO,CAAC;MACxD4G,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAAC6vD,SAAS;MACjC9gE,IAAI,CAAC+J,EAAE,CAACgxD,UAAU,EAAE4F,cAAc,CAAC;MACnCD,YAAY,GAAGtF,aAAa,IAAIwF,uBAAuB,KAAK,OAAO,GAC/DH,SAAS,KAAK,QAAQ,GAAI9M,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAKA,QAAQ,GAAG,CAAE,GAC5D,CAAC;MACL,KAAKl3D,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGmnD,IAAI,CAAChwD,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC7Cm+D,QAAQ,GAAGR,IAAI,CAAC39D,CAAC,CAAC;QAClBokE,SAAS,GAAG92D,EAAE,CAACg0D,eAAe,CAACthE,CAAC,CAAC;QACjCob,GAAG,CAAC8U,SAAS,GAAGk0C,SAAS;QACzB7gE,IAAI,CAAC46D,QAAQ,CAACC,MAAM,EAAE8F,cAAc,CAAC;QACrCr8B,KAAK,GAAGs2B,QAAQ,CAACt2B,KAAK;QACtB,IAAI82B,aAAa,IAAI92B,KAAK,CAACl6B,MAAM,EAAE;UACjCL,EAAE,CAACg2D,aAAa,CAACloD,GAAG,EAAEgoD,EAAE,EAAEpjE,CAAC,EAAE65D,SAAS,EAAErlD,OAAO,CAAC;UAChDkqD,cAAc,GAAGxxD,IAAI,CAACuC,GAAG,CAACouD,QAAQ,CAAC/1B,UAAU,EAAEkvB,SAAS,CAAC;QAC3D;QACA,KAAK51D,CAAC,GAAG,CAAC,EAAEu1B,IAAI,GAAGkR,KAAK,CAACl6B,MAAM,EAAEvM,CAAC,GAAGu1B,IAAI,EAAE,EAAEv1B,CAAC,EAAE;UAC9C8iE,cAAc,CAACr8B,KAAK,CAACzmC,CAAC,CAAC,CAAC;UACxBs9D,cAAc,GAAGb,QAAQ,CAAC/1B,UAAU;QACtC;QACAvkC,IAAI,CAAC46D,QAAQ,CAACE,KAAK,EAAE6F,cAAc,CAAC;MACtC;MACAD,YAAY,GAAG,CAAC;MAChBvF,cAAc,GAAGb,QAAQ,CAAC/1B,UAAU;MACpCvkC,IAAI,CAAC+J,EAAE,CAACixD,SAAS,EAAE2F,cAAc,CAAC;MAClCd,EAAE,CAACpgE,CAAC,IAAI47D,WAAW;IACrB;EAAC;IAAAzyD,GAAA;IAAAC,KAAA,EACD,SAAAk4D,WAAWlB,EAAE,EAAEhoD,GAAG,EAAE5G,OAAO,EAAE;MAC3B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMswD,MAAM,GAAGtwD,EAAE,CAACswD,MAAM;MACxB,IAAMjwD,MAAM,GAAGiwD,MAAM,CAACjwD,MAAM;MAC5B,IAAImwD,UAAU,EAAE99D,CAAC;MACjB,IAAI2N,MAAM,EAAE;QACV,IAAMksD,SAAS,GAAG9vD,aAAa,CAACyK,OAAO,CAAC2kD,GAAG,EAAE7rD,EAAE,CAACxK,CAAC,EAAEwK,EAAE,CAACkb,KAAK,CAAC;QAC5D46C,EAAE,CAACtgE,CAAC,GAAGq9D,WAAW,CAAC7yD,EAAE,EAAEkH,OAAO,CAAC+vD,WAAW,EAAE/vD,OAAO,CAAC;QACpD4uD,EAAE,CAACpgE,CAAC,IAAIwR,OAAO,CAACqqD,eAAe;QAC/BzjD,GAAG,CAAC01B,SAAS,GAAG+oB,SAAS,CAAC/oB,SAAS,CAACt8B,OAAO,CAAC+vD,WAAW,CAAC;QACxDnpD,GAAG,CAAC61B,YAAY,GAAG,QAAQ;QAC3B6sB,UAAU,GAAGn4D,MAAM,CAAC6O,OAAO,CAACspD,UAAU,CAAC;QACvC1iD,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAACgwD,WAAW;QACnCppD,GAAG,CAACwsB,IAAI,GAAGk2B,UAAU,CAACrvB,MAAM;QAC5B,KAAKzuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2N,MAAM,EAAE,EAAE3N,CAAC,EAAE;UAC3Bob,GAAG,CAACs/C,QAAQ,CAACkD,MAAM,CAAC59D,CAAC,CAAC,EAAE65D,SAAS,CAAC/2D,CAAC,CAACsgE,EAAE,CAACtgE,CAAC,CAAC,EAAEsgE,EAAE,CAACpgE,CAAC,GAAG86D,UAAU,CAACh2B,UAAU,GAAG,CAAC,CAAC;UAC5Es7B,EAAE,CAACpgE,CAAC,IAAI86D,UAAU,CAACh2B,UAAU,GAAGtzB,OAAO,CAACsqD,aAAa;QACvD;MACF;IACF;EAAC;IAAA3yD,GAAA;IAAAC,KAAA,EACD,SAAA0lC,eAAesxB,EAAE,EAAEhoD,GAAG,EAAEqpD,WAAW,EAAEjwD,OAAO,EAAE;MAC5C,IAAO2qD,MAAM,GAAY,IAAI,CAAtBA,MAAM;QAAEK,MAAM,GAAI,IAAI,CAAdA,MAAM;MACrB,IAAO18D,CAAC,GAAOsgE,EAAE,CAAVtgE,CAAC;QAAEE,CAAC,GAAIogE,EAAE,CAAPpgE,CAAC;MACX,IAAOwlB,KAAK,GAAYi8C,WAAW,CAA5Bj8C,KAAK;QAAED,MAAM,GAAIk8C,WAAW,CAArBl8C,MAAM;MACpB,IAAM8C,MAAM,GAAG7W,OAAO,CAACyrD,YAAY;MACnC7kD,GAAG,CAAC8U,SAAS,GAAG1b,OAAO,CAAC2b,eAAe;MACvC/U,GAAG,CAACgV,WAAW,GAAG5b,OAAO,CAAC6b,WAAW;MACrCjV,GAAG,CAACkV,SAAS,GAAG9b,OAAO,CAAC8a,WAAW;MACnClU,GAAG,CAACq3B,SAAS,EAAE;MACfr3B,GAAG,CAACs3B,MAAM,CAAC5vC,CAAC,GAAGuoB,MAAM,EAAEroB,CAAC,CAAC;MACzB,IAAIw8D,MAAM,KAAK,KAAK,EAAE;QACpB,IAAI,CAACoD,SAAS,CAACQ,EAAE,EAAEhoD,GAAG,EAAEqpD,WAAW,EAAEjwD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACu3B,MAAM,CAAC7vC,CAAC,GAAG0lB,KAAK,GAAG6C,MAAM,EAAEroB,CAAC,CAAC;MACjCoY,GAAG,CAACspD,gBAAgB,CAAC5hE,CAAC,GAAG0lB,KAAK,EAAExlB,CAAC,EAAEF,CAAC,GAAG0lB,KAAK,EAAExlB,CAAC,GAAGqoB,MAAM,CAAC;MACzD,IAAIm0C,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,OAAO,EAAE;QAC7C,IAAI,CAACyD,SAAS,CAACQ,EAAE,EAAEhoD,GAAG,EAAEqpD,WAAW,EAAEjwD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACu3B,MAAM,CAAC7vC,CAAC,GAAG0lB,KAAK,EAAExlB,CAAC,GAAGulB,MAAM,GAAG8C,MAAM,CAAC;MAC1CjQ,GAAG,CAACspD,gBAAgB,CAAC5hE,CAAC,GAAG0lB,KAAK,EAAExlB,CAAC,GAAGulB,MAAM,EAAEzlB,CAAC,GAAG0lB,KAAK,GAAG6C,MAAM,EAAEroB,CAAC,GAAGulB,MAAM,CAAC;MAC3E,IAAIi3C,MAAM,KAAK,QAAQ,EAAE;QACvB,IAAI,CAACoD,SAAS,CAACQ,EAAE,EAAEhoD,GAAG,EAAEqpD,WAAW,EAAEjwD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACu3B,MAAM,CAAC7vC,CAAC,GAAGuoB,MAAM,EAAEroB,CAAC,GAAGulB,MAAM,CAAC;MAClCnN,GAAG,CAACspD,gBAAgB,CAAC5hE,CAAC,EAAEE,CAAC,GAAGulB,MAAM,EAAEzlB,CAAC,EAAEE,CAAC,GAAGulB,MAAM,GAAG8C,MAAM,CAAC;MAC3D,IAAIm0C,MAAM,KAAK,QAAQ,IAAIL,MAAM,KAAK,MAAM,EAAE;QAC5C,IAAI,CAACyD,SAAS,CAACQ,EAAE,EAAEhoD,GAAG,EAAEqpD,WAAW,EAAEjwD,OAAO,CAAC;MAC/C;MACA4G,GAAG,CAACu3B,MAAM,CAAC7vC,CAAC,EAAEE,CAAC,GAAGqoB,MAAM,CAAC;MACzBjQ,GAAG,CAACspD,gBAAgB,CAAC5hE,CAAC,EAAEE,CAAC,EAAEF,CAAC,GAAGuoB,MAAM,EAAEroB,CAAC,CAAC;MACzCoY,GAAG,CAACipC,SAAS,EAAE;MACfjpC,GAAG,CAAC4Z,IAAI,EAAE;MACV,IAAIxgB,OAAO,CAAC8a,WAAW,GAAG,CAAC,EAAE;QAC3BlU,GAAG,CAACw3B,MAAM,EAAE;MACd;IACF;EAAC;IAAAzmC,GAAA;IAAAC,KAAA,EACD,SAAAu4D,uBAAuBnwD,OAAO,EAAE;MAC9B,IAAMlH,EAAE,GAAG,IAAI;MACf,IAAMhB,KAAK,GAAGgB,EAAE,CAACuG,MAAM;MACvB,IAAMtH,KAAK,GAAGe,EAAE,CAACuH,WAAW;MAC5B,IAAM+vD,KAAK,GAAGr4D,KAAK,IAAIA,KAAK,CAACzJ,CAAC;MAC9B,IAAM+hE,KAAK,GAAGt4D,KAAK,IAAIA,KAAK,CAACvJ,CAAC;MAC9B,IAAI4hE,KAAK,IAAIC,KAAK,EAAE;QAClB,IAAMztC,QAAQ,GAAG0lC,WAAW,CAACtoD,OAAO,CAAC4iB,QAAQ,CAAC,CAAC7pB,IAAI,CAACD,EAAE,EAAEA,EAAE,CAACa,OAAO,EAAEb,EAAE,CAACuzD,cAAc,CAAC;QACtF,IAAI,CAACzpC,QAAQ,EAAE;UACb;QACF;QACA,IAAMniB,IAAI,GAAG3H,EAAE,CAACwzD,KAAK,GAAGpD,cAAc,CAACpwD,EAAE,EAAEkH,OAAO,CAAC;QACnD,IAAMiuD,eAAe,GAAG5vD,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAEkiB,QAAQ,EAAE9pB,EAAE,CAACwzD,KAAK,CAAC;QAC7D,IAAMd,SAAS,GAAGL,kBAAkB,CAACrzD,KAAK,EAAEkI,OAAO,EAAEiuD,eAAe,CAAC;QACrE,IAAMz3C,KAAK,GAAG+0C,kBAAkB,CAACvrD,OAAO,EAAEiuD,eAAe,EAAEzC,SAAS,EAAE1zD,KAAK,CAAC;QAC5E,IAAIs4D,KAAK,CAAC/yD,GAAG,KAAKmZ,KAAK,CAACloB,CAAC,IAAI+hE,KAAK,CAAChzD,GAAG,KAAKmZ,KAAK,CAAChoB,CAAC,EAAE;UAClDsK,EAAE,CAAC6xD,MAAM,GAAGa,SAAS,CAACb,MAAM;UAC5B7xD,EAAE,CAACkyD,MAAM,GAAGQ,SAAS,CAACR,MAAM;UAC5BlyD,EAAE,CAACkb,KAAK,GAAGvT,IAAI,CAACuT,KAAK;UACrBlb,EAAE,CAACib,MAAM,GAAGtT,IAAI,CAACsT,MAAM;UACvBjb,EAAE,CAAC4zD,MAAM,GAAG9pC,QAAQ,CAACt0B,CAAC;UACtBwK,EAAE,CAAC6zD,MAAM,GAAG/pC,QAAQ,CAACp0B,CAAC;UACtBsK,EAAE,CAAC6U,kBAAkB,EAAE,CAACnQ,MAAM,CAAC1E,EAAE,EAAE0d,KAAK,CAAC;QAC3C;MACF;IACF;EAAC;IAAA7e,GAAA;IAAAC,KAAA,EACD,SAAA6B,KAAKmN,GAAG,EAAE;MACR,IAAM9N,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO,CAACo1B,UAAU,CAACt8B,EAAE,CAACkR,UAAU,EAAE,CAAC;MACtD,IAAIoiD,OAAO,GAAGtzD,EAAE,CAACszD,OAAO;MACxB,IAAI,CAACA,OAAO,EAAE;QACZ;MACF;MACAtzD,EAAE,CAACq3D,sBAAsB,CAACnwD,OAAO,CAAC;MAClC,IAAMiwD,WAAW,GAAG;QAClBj8C,KAAK,EAAElb,EAAE,CAACkb,KAAK;QACfD,MAAM,EAAEjb,EAAE,CAACib;MACb,CAAC;MACD,IAAM66C,EAAE,GAAG;QACTtgE,CAAC,EAAEwK,EAAE,CAACxK,CAAC;QACPE,CAAC,EAAEsK,EAAE,CAACtK;MACR,CAAC;MACD49D,OAAO,GAAG1zD,IAAI,CAAC8X,GAAG,CAAC47C,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,GAAGA,OAAO;MAChD,IAAMrkC,OAAO,GAAGl5B,SAAS,CAACmR,OAAO,CAAC+nB,OAAO,CAAC;MAC1C,IAAMuoC,iBAAiB,GAAGx3D,EAAE,CAACke,KAAK,CAAC7d,MAAM,IAAIL,EAAE,CAACgxD,UAAU,CAAC3wD,MAAM,IAAIL,EAAE,CAACqwD,IAAI,CAAChwD,MAAM,IAAIL,EAAE,CAACixD,SAAS,CAAC5wD,MAAM,IAAIL,EAAE,CAACswD,MAAM,CAACjwD,MAAM;MAC9H,IAAI6G,OAAO,CAAC6wB,OAAO,IAAIy/B,iBAAiB,EAAE;QACxC1pD,GAAG,CAAC22B,IAAI,EAAE;QACV32B,GAAG,CAAC2pD,WAAW,GAAGnE,OAAO;QACzBtzD,EAAE,CAACwkC,cAAc,CAACsxB,EAAE,EAAEhoD,GAAG,EAAEqpD,WAAW,EAAEjwD,OAAO,CAAC;QAChDvK,qBAAqB,CAACmR,GAAG,EAAE5G,OAAO,CAAComD,aAAa,CAAC;QACjDwI,EAAE,CAACpgE,CAAC,IAAIu5B,OAAO,CAACzmB,GAAG;QACnBxI,EAAE,CAACylC,SAAS,CAACqwB,EAAE,EAAEhoD,GAAG,EAAE5G,OAAO,CAAC;QAC9BlH,EAAE,CAACy2D,QAAQ,CAACX,EAAE,EAAEhoD,GAAG,EAAE5G,OAAO,CAAC;QAC7BlH,EAAE,CAACg3D,UAAU,CAAClB,EAAE,EAAEhoD,GAAG,EAAE5G,OAAO,CAAC;QAC/BnK,oBAAoB,CAAC+Q,GAAG,EAAE5G,OAAO,CAAComD,aAAa,CAAC;QAChDx/C,GAAG,CAAC62B,OAAO,EAAE;MACf;IACF;EAAC;IAAA9lC,GAAA;IAAAC,KAAA,EACD,SAAA02C,kBAAA,EAAoB;MAClB,OAAO,IAAI,CAAC30C,OAAO,IAAI,EAAE;IAC3B;EAAC;IAAAhC,GAAA;IAAAC,KAAA,EACD,SAAA22C,kBAAkBC,cAAc,EAAEga,aAAa,EAAE;MAC/C,IAAM1vD,EAAE,GAAG,IAAI;MACf,IAAM21C,UAAU,GAAG31C,EAAE,CAACa,OAAO;MAC7B,IAAM4D,MAAM,GAAGixC,cAAc,CAACjzB,GAAG,CAAC,UAAAi1C,KAAA,EAA2B;QAAA,IAAzBjuD,YAAY,GAAAiuD,KAAA,CAAZjuD,YAAY;UAAEN,KAAK,GAAAuuD,KAAA,CAALvuD,KAAK;QACrD,IAAMa,IAAI,GAAGhK,EAAE,CAACuG,MAAM,CAACyJ,cAAc,CAACvG,YAAY,CAAC;QACnD,IAAI,CAACO,IAAI,EAAE;UACT,MAAM,IAAIie,KAAK,CAAC,iCAAiC,GAAGxe,YAAY,CAAC;QACnE;QACA,OAAO;UACLA,YAAY,EAAZA,YAAY;UACZwD,OAAO,EAAEjD,IAAI,CAACJ,IAAI,CAACT,KAAK,CAAC;UACzBA,KAAK,EAALA;QACF,CAAC;MACH,CAAC,CAAC;MACF,IAAMwc,OAAO,GAAG,CAACprB,cAAc,CAACo7C,UAAU,EAAElxC,MAAM,CAAC;MACnD,IAAMkzD,eAAe,GAAG33D,EAAE,CAAC43D,gBAAgB,CAACnzD,MAAM,EAAEirD,aAAa,CAAC;MAClE,IAAI/pC,OAAO,IAAIgyC,eAAe,EAAE;QAC9B33D,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnBzE,EAAE,CAACuzD,cAAc,GAAG7D,aAAa;QACjC1vD,EAAE,CAAC0E,MAAM,CAAC,IAAI,CAAC;MACjB;IACF;EAAC;IAAA7F,GAAA;IAAAC,KAAA,EACD,SAAAkvD,YAAY17D,CAAC,EAAEwjD,MAAM,EAAE;MACrB,IAAM91C,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMyuC,UAAU,GAAG31C,EAAE,CAACa,OAAO,IAAI,EAAE;MACnC,IAAI8kB,OAAO,GAAG,KAAK;MACnB,IAAIlhB,MAAM,GAAG,EAAE;MACf,IAAInS,CAAC,CAAC6M,IAAI,KAAK,UAAU,EAAE;QACzBsF,MAAM,GAAGzE,EAAE,CAACuG,MAAM,CAACmuC,yBAAyB,CAACpiD,CAAC,EAAE4U,OAAO,CAACsC,IAAI,EAAEtC,OAAO,EAAE4uC,MAAM,CAAC;QAC9E,IAAI5uC,OAAO,CAACiB,OAAO,EAAE;UACnB1D,MAAM,CAAC0D,OAAO,EAAE;QAClB;MACF;MACA,IAAMwvD,eAAe,GAAG33D,EAAE,CAAC43D,gBAAgB,CAACnzD,MAAM,EAAEnS,CAAC,CAAC;MACtDqzB,OAAO,GAAGmwB,MAAM,IAAI,CAACv7C,cAAc,CAACkK,MAAM,EAAEkxC,UAAU,CAAC,IAAIgiB,eAAe;MAC1E,IAAIhyC,OAAO,EAAE;QACX3lB,EAAE,CAACa,OAAO,GAAG4D,MAAM;QACnB,IAAIyC,OAAO,CAAC6wB,OAAO,IAAI7wB,OAAO,CAACmuD,QAAQ,EAAE;UACvCr1D,EAAE,CAACuzD,cAAc,GAAG;YAClB/9D,CAAC,EAAElD,CAAC,CAACkD,CAAC;YACNE,CAAC,EAAEpD,CAAC,CAACoD;UACP,CAAC;UACDsK,EAAE,CAAC0E,MAAM,CAAC,IAAI,EAAEoxC,MAAM,CAAC;QACzB;MACF;MACA,OAAOnwB,OAAO;IAChB;EAAC;IAAA9mB,GAAA;IAAAC,KAAA,EACD,SAAA84D,iBAAiBnzD,MAAM,EAAEnS,CAAC,EAAE;MAC1B,IAAOshE,MAAM,GAAqB,IAAI,CAA/BA,MAAM;QAAEC,MAAM,GAAa,IAAI,CAAvBA,MAAM;QAAE3sD,OAAO,GAAI,IAAI,CAAfA,OAAO;MAC9B,IAAM4iB,QAAQ,GAAG0lC,WAAW,CAACtoD,OAAO,CAAC4iB,QAAQ,CAAC,CAAC7pB,IAAI,CAAC,IAAI,EAAEwE,MAAM,EAAEnS,CAAC,CAAC;MACpE,OAAOw3B,QAAQ,KAAK,KAAK,KAAK8pC,MAAM,KAAK9pC,QAAQ,CAACt0B,CAAC,IAAIq+D,MAAM,KAAK/pC,QAAQ,CAACp0B,CAAC,CAAC;IAC/E;EAAC;EAAA,OAAAw9D,OAAA;AAAA,EAjhBmBx+B,OAAO;AAmhB7Bw+B,OAAO,CAAC1D,WAAW,GAAGA,WAAW;AACjC,IAAIqI,cAAc,GAAG;EACnBvtD,EAAE,EAAE,SAAS;EACbgkD,QAAQ,EAAE4E,OAAO;EACjB1D,WAAW,EAAXA,WAAW;EACXsI,SAAS,WAAAA,UAAC94D,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAC/B,IAAIA,OAAO,EAAE;MACXlI,KAAK,CAACif,OAAO,GAAG,IAAIi1C,OAAO,CAAC;QAAC3sD,MAAM,EAAEvH,KAAK;QAAEkI,OAAO,EAAPA;MAAO,CAAC,CAAC;IACvD;EACF,CAAC;EACD21B,YAAY,WAAAA,aAAC79B,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAClC,IAAIlI,KAAK,CAACif,OAAO,EAAE;MACjBjf,KAAK,CAACif,OAAO,CAACtP,UAAU,CAACzH,OAAO,CAAC;IACnC;EACF,CAAC;EACDiJ,KAAK,WAAAA,MAACnR,KAAK,EAAEiqD,KAAK,EAAE/hD,OAAO,EAAE;IAC3B,IAAIlI,KAAK,CAACif,OAAO,EAAE;MACjBjf,KAAK,CAACif,OAAO,CAACtP,UAAU,CAACzH,OAAO,CAAC;IACnC;EACF,CAAC;EACD6wD,SAAS,WAAAA,UAAC/4D,KAAK,EAAE;IACf,IAAMif,OAAO,GAAGjf,KAAK,CAACif,OAAO;IAC7B,IAAM8V,IAAI,GAAG;MACX9V,OAAO,EAAPA;IACF,CAAC;IACD,IAAIjf,KAAK,CAACy/B,aAAa,CAAC,mBAAmB,EAAE1K,IAAI,CAAC,KAAK,KAAK,EAAE;MAC5D;IACF;IACA,IAAI9V,OAAO,EAAE;MACXA,OAAO,CAACtd,IAAI,CAAC3B,KAAK,CAAC8O,GAAG,CAAC;IACzB;IACA9O,KAAK,CAACy/B,aAAa,CAAC,kBAAkB,EAAE1K,IAAI,CAAC;EAC/C,CAAC;EACDw6B,UAAU,WAAAA,WAACvvD,KAAK,EAAE+0B,IAAI,EAAE;IACtB,IAAI/0B,KAAK,CAACif,OAAO,EAAE;MACjB,IAAM0M,gBAAgB,GAAGoJ,IAAI,CAAC+hB,MAAM;MACpC,IAAI92C,KAAK,CAACif,OAAO,CAAC+vC,WAAW,CAACj6B,IAAI,CAACvyB,KAAK,EAAEmpB,gBAAgB,CAAC,EAAE;QAC3DoJ,IAAI,CAACpO,OAAO,GAAG,IAAI;MACrB;IACF;EACF,CAAC;EACD5yB,QAAQ,EAAE;IACRglC,OAAO,EAAE,IAAI;IACbs9B,QAAQ,EAAE,IAAI;IACdvrC,QAAQ,EAAE,SAAS;IACnBjH,eAAe,EAAE,iBAAiB;IAClCkzC,UAAU,EAAE,MAAM;IAClBrI,SAAS,EAAE;MACTtrC,MAAM,EAAE;IACV,CAAC;IACD8uC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,CAAC;IACpBx2B,UAAU,EAAE,MAAM;IAClBo8B,SAAS,EAAE,MAAM;IACjBzF,WAAW,EAAE,CAAC;IACdf,QAAQ,EAAE,CACV,CAAC;IACDmG,SAAS,EAAE,MAAM;IACjBQ,WAAW,EAAE,MAAM;IACnB1F,aAAa,EAAE,CAAC;IAChBD,eAAe,EAAE,CAAC;IAClBf,UAAU,EAAE;MACVpuC,MAAM,EAAE;IACV,CAAC;IACD60C,WAAW,EAAE,MAAM;IACnBhoC,OAAO,EAAE,CAAC;IACV+iC,YAAY,EAAE,CAAC;IACfD,SAAS,EAAE,CAAC;IACZY,YAAY,EAAE,CAAC;IACfjJ,SAAS,EAAE,SAAAA,UAAC57C,GAAG,EAAE5F,IAAI;MAAA,OAAKA,IAAI,CAACqoD,QAAQ,CAAC5oD,IAAI;IAAA;IAC5CiiD,QAAQ,EAAE,SAAAA,SAAC97C,GAAG,EAAE5F,IAAI;MAAA,OAAKA,IAAI,CAACqoD,QAAQ,CAAC5oD,IAAI;IAAA;IAC3C0uD,kBAAkB,EAAE,MAAM;IAC1BhF,aAAa,EAAE,IAAI;IACnBtuC,WAAW,EAAE,eAAe;IAC5Bf,WAAW,EAAE,CAAC;IACdvc,SAAS,EAAE;MACTlG,QAAQ,EAAE,GAAG;MACbsE,MAAM,EAAE;IACV,CAAC;IACDqC,UAAU,EAAE;MACVd,OAAO,EAAE;QACPjG,IAAI,EAAE,QAAQ;QACd4G,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;MAC9D,CAAC;MACDutD,OAAO,EAAE;QACPzvD,MAAM,EAAE,QAAQ;QAChBtE,QAAQ,EAAE;MACZ;IACF,CAAC;IACDH,SAAS,EAAE;MACT80D,WAAW,EAAEj3D,IAAI;MACjBihB,KAAK,WAAAA,MAAC80C,YAAY,EAAE;QAClB,IAAIA,YAAY,CAAC3yD,MAAM,GAAG,CAAC,EAAE;UAC3B,IAAMO,IAAI,GAAGoyD,YAAY,CAAC,CAAC,CAAC;UAC5B,IAAMnhD,MAAM,GAAGjR,IAAI,CAAC5B,KAAK,CAAC4K,IAAI,CAACiI,MAAM;UACrC,IAAMmmD,UAAU,GAAGnmD,MAAM,GAAGA,MAAM,CAACxR,MAAM,GAAG,CAAC;UAC7C,IAAI,IAAI,IAAI,IAAI,CAAC6G,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;YAC3D,OAAO5I,IAAI,CAACmM,OAAO,CAACwG,KAAK,IAAI,EAAE;UACjC,CAAC,MAAM,IAAI3S,IAAI,CAAC2S,KAAK,EAAE;YACrB,OAAO3S,IAAI,CAAC2S,KAAK;UACnB,CAAC,MAAM,IAAIykD,UAAU,GAAG,CAAC,IAAIp3D,IAAI,CAACsM,SAAS,GAAG8qD,UAAU,EAAE;YACxD,OAAOnmD,MAAM,CAACjR,IAAI,CAACsM,SAAS,CAAC;UAC/B;QACF;QACA,OAAO,EAAE;MACX,CAAC;MACDinD,UAAU,EAAEl3D,IAAI;MAChB+zD,UAAU,EAAE/zD,IAAI;MAChBu3D,WAAW,EAAEv3D,IAAI;MACjBsW,KAAK,WAAAA,MAAC8P,WAAW,EAAE;QACjB,IAAI,IAAI,IAAI,IAAI,CAACnc,OAAO,IAAI,IAAI,CAACA,OAAO,CAACsC,IAAI,KAAK,SAAS,EAAE;UAC3D,OAAO6Z,WAAW,CAAC9P,KAAK,GAAG,IAAI,GAAG8P,WAAW,CAACE,cAAc,IAAIF,WAAW,CAACE,cAAc;QAC5F;QACA,IAAIhQ,KAAK,GAAG8P,WAAW,CAACtW,OAAO,CAACwG,KAAK,IAAI,EAAE;QAC3C,IAAIA,KAAK,EAAE;UACTA,KAAK,IAAI,IAAI;QACf;QACA,IAAMzU,KAAK,GAAGukB,WAAW,CAACE,cAAc;QACxC,IAAI,CAACxvB,aAAa,CAAC+K,KAAK,CAAC,EAAE;UACzByU,KAAK,IAAIzU,KAAK;QAChB;QACA,OAAOyU,KAAK;MACd,CAAC;MACDyhD,UAAU,WAAAA,WAAC3xC,WAAW,EAAE;QACtB,IAAMrZ,IAAI,GAAGqZ,WAAW,CAACrkB,KAAK,CAACgR,cAAc,CAACqT,WAAW,CAAC5Z,YAAY,CAAC;QACvE,IAAMvC,OAAO,GAAG8C,IAAI,CAAC6B,UAAU,CAACiI,QAAQ,CAACuP,WAAW,CAACnW,SAAS,CAAC;QAC/D,OAAO;UACL6V,WAAW,EAAE7b,OAAO,CAAC6b,WAAW;UAChCF,eAAe,EAAE3b,OAAO,CAAC2b,eAAe;UACxCb,WAAW,EAAE9a,OAAO,CAAC8a,WAAW;UAChCuU,UAAU,EAAErvB,OAAO,CAACqvB,UAAU;UAC9BC,gBAAgB,EAAEtvB,OAAO,CAACsvB,gBAAgB;UAC1C2gB,YAAY,EAAE;QAChB,CAAC;MACH,CAAC;MACD+d,cAAc,WAAAA,eAAA,EAAG;QACf,OAAO,IAAI,CAAChuD,OAAO,CAAC6vD,SAAS;MAC/B,CAAC;MACD9B,eAAe,WAAAA,gBAAC5xC,WAAW,EAAE;QAC3B,IAAMrZ,IAAI,GAAGqZ,WAAW,CAACrkB,KAAK,CAACgR,cAAc,CAACqT,WAAW,CAAC5Z,YAAY,CAAC;QACvE,IAAMvC,OAAO,GAAG8C,IAAI,CAAC6B,UAAU,CAACiI,QAAQ,CAACuP,WAAW,CAACnW,SAAS,CAAC;QAC/D,OAAO;UACLsV,UAAU,EAAEtb,OAAO,CAACsb,UAAU;UAC9BpE,QAAQ,EAAElX,OAAO,CAACkX;QACpB,CAAC;MACH,CAAC;MACDq2C,UAAU,EAAEx3D,IAAI;MAChBg0D,SAAS,EAAEh0D,IAAI;MACf23D,YAAY,EAAE33D,IAAI;MAClBqzD,MAAM,EAAErzD,IAAI;MACZ43D,WAAW,EAAE53D;IACf;EACF,CAAC;EACDg4B,aAAa,EAAE;IACbs7B,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClB9C,SAAS,EAAE;EACb,CAAC;EACDz0D,WAAW,EAAE;IACX4M,WAAW,EAAE,SAAAA,YAACC,IAAI;MAAA,OAAKA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,IAAIA,IAAI,KAAK,UAAU;IAAA;IACtFF,UAAU,EAAE,KAAK;IACjBxG,SAAS,EAAE;MACTyG,WAAW,EAAE,KAAK;MAClBD,UAAU,EAAE;IACd,CAAC;IACDH,SAAS,EAAE;MACTE,SAAS,EAAE;IACb,CAAC;IACDO,UAAU,EAAE;MACVP,SAAS,EAAE;IACb;EACF,CAAC;EACDkoC,sBAAsB,EAAE,CAAC,aAAa;AACxC,CAAC;AAED,IAAI7vB,OAAO,GAAG,aAAazY,MAAM,CAACqP,MAAM,CAAC;EACzCmT,SAAS,EAAE,IAAI;EACfkwC,UAAU,EAAEpU,iBAAiB;EAC7BqU,MAAM,EAAEnP,aAAa;EACrBiB,MAAM,EAAEqE,aAAa;EACrB8J,QAAQ,EAAE5I,eAAe;EACzBb,KAAK,EAAEW,YAAY;EACnB6D,OAAO,EAAE2E;AACT,CAAC,CAAC;AAEF,IAAMO,WAAW,GAAG,SAAdA,WAAWA,CAAIvmD,MAAM,EAAE1E,GAAG,EAAEhE,KAAK;EAAA,OAAK,OAAOgE,GAAG,KAAK,QAAQ,GAC/D0E,MAAM,CAACnQ,IAAI,CAACyL,GAAG,CAAC,GAAG,CAAC,GACpBoO,KAAK,CAACpO,GAAG,CAAC,GAAG,IAAI,GAAGhE,KAAK;AAAA;AAC7B,SAASkvD,cAAcA,CAACxmD,MAAM,EAAE1E,GAAG,EAAEhE,KAAK,EAAE;EAC1C,IAAM+uB,KAAK,GAAGrmB,MAAM,CAAC2J,OAAO,CAACrO,GAAG,CAAC;EACjC,IAAI+qB,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,OAAOkgC,WAAW,CAACvmD,MAAM,EAAE1E,GAAG,EAAEhE,KAAK,CAAC;EACxC;EACA,IAAMiS,IAAI,GAAGvJ,MAAM,CAACymD,WAAW,CAACnrD,GAAG,CAAC;EACpC,OAAO+qB,KAAK,KAAK9c,IAAI,GAAGjS,KAAK,GAAG+uB,KAAK;AACvC;AACA,IAAM0B,UAAU,GAAG,SAAbA,UAAUA,CAAIzwB,KAAK,EAAEhH,GAAG;EAAA,OAAKgH,KAAK,KAAK,IAAI,GAAG,IAAI,GAAG9T,WAAW,CAACuK,IAAI,CAAC24B,KAAK,CAACpvB,KAAK,CAAC,EAAE,CAAC,EAAEhH,GAAG,CAAC;AAAA;AAAC,IAC5Fo2D,aAAa,0BAAAC,MAAA;EAAAh/C,SAAA,CAAA++C,aAAA,EAAAC,MAAA;EAAA,IAAAC,QAAA,GAAA/+C,YAAA,CAAA6+C,aAAA;EACjB,SAAAA,cAAYh1D,GAAG,EAAE;IAAA,IAAAm1D,OAAA;IAAAr6D,eAAA,OAAAk6D,aAAA;IACfG,OAAA,GAAAD,QAAA,CAAAx4D,IAAA,OAAMsD,GAAG;IACTm1D,OAAA,CAAKC,WAAW,GAAGh6D,SAAS;IAC5B+5D,OAAA,CAAKE,WAAW,GAAG,CAAC;IAAC,OAAAF,OAAA;EACvB;EAAC95D,YAAA,CAAA25D,aAAA;IAAA15D,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAIpV,aAAa,CAACoZ,GAAG,CAAC,EAAE;QACtB,OAAO,IAAI;MACb;MACA,IAAM0E,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;MAC/B3I,KAAK,GAAG0vD,QAAQ,CAAC1vD,KAAK,CAAC,IAAI0I,MAAM,CAAC1I,KAAK,CAAC,KAAKgE,GAAG,GAAGhE,KAAK,GACpDkvD,cAAc,CAACxmD,MAAM,EAAE1E,GAAG,EAAEla,cAAc,CAACkW,KAAK,EAAEgE,GAAG,CAAC,CAAC;MAC3D,OAAOysB,UAAU,CAACzwB,KAAK,EAAE0I,MAAM,CAACxR,MAAM,GAAG,CAAC,CAAC;IAC7C;EAAC;IAAAxB,GAAA;IAAAC,KAAA,EACD,SAAAs+B,oBAAA,EAAsB;MACpB,IAAMp9B,EAAE,GAAG,IAAI;MACf,IAAA84D,kBAAA,GAAiC94D,EAAE,CAACuK,aAAa,EAAE;QAA5CE,UAAU,GAAAquD,kBAAA,CAAVruD,UAAU;QAAEC,UAAU,GAAAouD,kBAAA,CAAVpuD,UAAU;MAC7B,IAAAquD,aAAA,GAAiB/4D,EAAE,CAAC6S,SAAS,CAAC,IAAI,CAAC;QAA9BhT,GAAG,GAAAk5D,aAAA,CAAHl5D,GAAG;QAAEsC,GAAG,GAAA42D,aAAA,CAAH52D,GAAG;MACb,IAAInC,EAAE,CAACkH,OAAO,CAAC6uB,MAAM,KAAK,OAAO,EAAE;QACjC,IAAI,CAACtrB,UAAU,EAAE;UACf5K,GAAG,GAAG,CAAC;QACT;QACA,IAAI,CAAC6K,UAAU,EAAE;UACfvI,GAAG,GAAGnC,EAAE,CAAC8R,SAAS,EAAE,CAACzR,MAAM,GAAG,CAAC;QACjC;MACF;MACAL,EAAE,CAACH,GAAG,GAAGA,GAAG;MACZG,EAAE,CAACmC,GAAG,GAAGA,GAAG;IACd;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAy+B,WAAA,EAAa;MACX,IAAMv9B,EAAE,GAAG,IAAI;MACf,IAAMH,GAAG,GAAGG,EAAE,CAACH,GAAG;MAClB,IAAMsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAClB,IAAM0a,MAAM,GAAG7c,EAAE,CAACkH,OAAO,CAAC2V,MAAM;MAChC,IAAMjF,KAAK,GAAG,EAAE;MAChB,IAAI/F,MAAM,GAAG7R,EAAE,CAAC8R,SAAS,EAAE;MAC3BD,MAAM,GAAIhS,GAAG,KAAK,CAAC,IAAIsC,GAAG,KAAK0P,MAAM,CAACxR,MAAM,GAAG,CAAC,GAAIwR,MAAM,GAAGA,MAAM,CAAC2R,KAAK,CAAC3jB,GAAG,EAAEsC,GAAG,GAAG,CAAC,CAAC;MACvFnC,EAAE,CAAC44D,WAAW,GAAGh5D,IAAI,CAACuC,GAAG,CAAC0P,MAAM,CAACxR,MAAM,IAAIwc,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9D7c,EAAE,CAAC24D,WAAW,GAAG34D,EAAE,CAACH,GAAG,IAAIgd,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;MAC5C,KAAK,IAAI/d,KAAK,GAAGe,GAAG,EAAEf,KAAK,IAAIqD,GAAG,EAAErD,KAAK,EAAE,EAAE;QAC3C8Y,KAAK,CAAClW,IAAI,CAAC;UAAC5C,KAAK,EAALA;QAAK,CAAC,CAAC;MACrB;MACA,OAAO8Y,KAAK;IACd;EAAC;IAAA/Y,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAM6R,MAAM,GAAG7R,EAAE,CAAC8R,SAAS,EAAE;MAC7B,IAAIhT,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG+S,MAAM,CAACxR,MAAM,EAAE;QACvC,OAAOwR,MAAM,CAAC/S,KAAK,CAAC;MACtB;MACA,OAAOA,KAAK;IACd;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACfia,IAAA,CAAAC,eAAA,CAAAq+C,aAAA,CAAAvhD,SAAA,sBAAA/W,IAAA;MACA,IAAI,CAACD,EAAE,CAACua,YAAY,EAAE,EAAE;QACtBva,EAAE,CAAC0pB,cAAc,GAAG,CAAC1pB,EAAE,CAAC0pB,cAAc;MACxC;IACF;EAAC;IAAA7qB,GAAA;IAAAC,KAAA,EACD,SAAA6Y,iBAAiB7Y,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAI,OAAOlB,KAAK,KAAK,QAAQ,EAAE;QAC7BA,KAAK,GAAGkB,EAAE,CAACoR,KAAK,CAACtS,KAAK,CAAC;MACzB;MACA,OAAOA,KAAK,KAAK,IAAI,GAAG8T,GAAG,GAAG5S,EAAE,CAAC4d,kBAAkB,CAAC,CAAC9e,KAAK,GAAGkB,EAAE,CAAC24D,WAAW,IAAI34D,EAAE,CAAC44D,WAAW,CAAC;IAChG;EAAC;IAAA/5D,GAAA;IAAAC,KAAA,EACD,SAAA+Y,gBAAgB1O,KAAK,EAAE;MACrB,IAAMnJ,EAAE,GAAG,IAAI;MACf,IAAM4X,KAAK,GAAG5X,EAAE,CAAC4X,KAAK;MACtB,IAAIzO,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGyO,KAAK,CAACvX,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO,IAAI;MACb;MACA,OAAOL,EAAE,CAAC2X,gBAAgB,CAACC,KAAK,CAACzO,KAAK,CAAC,CAACrK,KAAK,CAAC;IAChD;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAwiC,iBAAiBC,KAAK,EAAE;MACtB,IAAMvhC,EAAE,GAAG,IAAI;MACf,OAAOJ,IAAI,CAAC24B,KAAK,CAACv4B,EAAE,CAAC24D,WAAW,GAAG34D,EAAE,CAACyhC,kBAAkB,CAACF,KAAK,CAAC,GAAGvhC,EAAE,CAAC44D,WAAW,CAAC;IACnF;EAAC;IAAA/5D,GAAA;IAAAC,KAAA,EACD,SAAAub,aAAA,EAAe;MACb,OAAO,IAAI,CAAC3R,MAAM;IACpB;EAAC;EAAA,OAAA6vD,aAAA;AAAA,EAjFyBx9B,KAAK;AAmFjCw9B,aAAa,CAACjuD,EAAE,GAAG,UAAU;AAC7BiuD,aAAa,CAACxlE,QAAQ,GAAG;EACvB6kB,KAAK,EAAE;IACLzgB,QAAQ,EAAEohE,aAAa,CAACvhD,SAAS,CAACxD;EACpC;AACF,CAAC;AAED,SAASwlD,eAAeA,CAACC,iBAAiB,EAAEC,SAAS,EAAE;EACrD,IAAMthD,KAAK,GAAG,EAAE;EAChB,IAAMuhD,WAAW,GAAG,KAAK;EACzB,IAAOpjC,MAAM,GAA0EkjC,iBAAiB,CAAjGljC,MAAM;IAAEiN,IAAI,GAAoEi2B,iBAAiB,CAAzFj2B,IAAI;IAAEnjC,GAAG,GAA+Do5D,iBAAiB,CAAnFp5D,GAAG;IAAEsC,GAAG,GAA0D82D,iBAAiB,CAA9E92D,GAAG;IAAEi3D,SAAS,GAA+CH,iBAAiB,CAAzEG,SAAS;IAAE/nD,KAAK,GAAwC4nD,iBAAiB,CAA9D5nD,KAAK;IAAEgoD,QAAQ,GAA8BJ,iBAAiB,CAAvDI,QAAQ;IAAEC,SAAS,GAAmBL,iBAAiB,CAA7CK,SAAS;IAAEC,aAAa,GAAIN,iBAAiB,CAAlCM,aAAa;EACnF,IAAMhxC,IAAI,GAAGya,IAAI,IAAI,CAAC;EACtB,IAAMw2B,SAAS,GAAGH,QAAQ,GAAG,CAAC;EAC9B,IAAYI,IAAI,GAAeP,SAAS,CAAjCr5D,GAAG;IAAa65D,IAAI,GAAIR,SAAS,CAAtB/2D,GAAG;EACrB,IAAMsI,UAAU,GAAG,CAAC1W,aAAa,CAAC8L,GAAG,CAAC;EACtC,IAAM6K,UAAU,GAAG,CAAC3W,aAAa,CAACoO,GAAG,CAAC;EACtC,IAAMw3D,YAAY,GAAG,CAAC5lE,aAAa,CAACsd,KAAK,CAAC;EAC1C,IAAMuoD,UAAU,GAAG,CAACF,IAAI,GAAGD,IAAI,KAAKH,SAAS,GAAG,CAAC,CAAC;EAClD,IAAIj5C,OAAO,GAAG9iB,OAAO,CAAC,CAACm8D,IAAI,GAAGD,IAAI,IAAID,SAAS,GAAGjxC,IAAI,CAAC,GAAGA,IAAI;EAC9D,IAAIxlB,MAAM,EAAE82D,OAAO,EAAEC,OAAO,EAAEC,SAAS;EACvC,IAAI15C,OAAO,GAAG84C,WAAW,IAAI,CAAC1uD,UAAU,IAAI,CAACC,UAAU,EAAE;IACvD,OAAO,CAAC;MAAC5L,KAAK,EAAE26D;IAAI,CAAC,EAAE;MAAC36D,KAAK,EAAE46D;IAAI,CAAC,CAAC;EACvC;EACAK,SAAS,GAAGn6D,IAAI,CAACo5B,IAAI,CAAC0gC,IAAI,GAAGr5C,OAAO,CAAC,GAAGzgB,IAAI,CAACoE,KAAK,CAACy1D,IAAI,GAAGp5C,OAAO,CAAC;EAClE,IAAI05C,SAAS,GAAGP,SAAS,EAAE;IACzBn5C,OAAO,GAAG9iB,OAAO,CAACw8D,SAAS,GAAG15C,OAAO,GAAGm5C,SAAS,GAAGjxC,IAAI,CAAC,GAAGA,IAAI;EAClE;EACA,IAAI,CAACx0B,aAAa,CAACqlE,SAAS,CAAC,EAAE;IAC7Br2D,MAAM,GAAGnD,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAE2uC,SAAS,CAAC;IAChC/4C,OAAO,GAAGzgB,IAAI,CAACo5B,IAAI,CAAC3Y,OAAO,GAAGtd,MAAM,CAAC,GAAGA,MAAM;EAChD;EACA,IAAIgzB,MAAM,KAAK,OAAO,EAAE;IACtB8jC,OAAO,GAAGj6D,IAAI,CAACoE,KAAK,CAACy1D,IAAI,GAAGp5C,OAAO,CAAC,GAAGA,OAAO;IAC9Cy5C,OAAO,GAAGl6D,IAAI,CAACo5B,IAAI,CAAC0gC,IAAI,GAAGr5C,OAAO,CAAC,GAAGA,OAAO;EAC/C,CAAC,MAAM;IACLw5C,OAAO,GAAGJ,IAAI;IACdK,OAAO,GAAGJ,IAAI;EAChB;EACA,IAAIjvD,UAAU,IAAIC,UAAU,IAAIs4B,IAAI,IAAIvlC,WAAW,CAAC,CAAC0E,GAAG,GAAGtC,GAAG,IAAImjC,IAAI,EAAE3iB,OAAO,GAAG,IAAI,CAAC,EAAE;IACvF05C,SAAS,GAAGn6D,IAAI,CAAC24B,KAAK,CAAC34B,IAAI,CAACC,GAAG,CAAC,CAACsC,GAAG,GAAGtC,GAAG,IAAIwgB,OAAO,EAAEg5C,QAAQ,CAAC,CAAC;IACjEh5C,OAAO,GAAG,CAACle,GAAG,GAAGtC,GAAG,IAAIk6D,SAAS;IACjCF,OAAO,GAAGh6D,GAAG;IACbi6D,OAAO,GAAG33D,GAAG;EACf,CAAC,MAAM,IAAIw3D,YAAY,EAAE;IACvBE,OAAO,GAAGpvD,UAAU,GAAG5K,GAAG,GAAGg6D,OAAO;IACpCC,OAAO,GAAGpvD,UAAU,GAAGvI,GAAG,GAAG23D,OAAO;IACpCC,SAAS,GAAG1oD,KAAK,GAAG,CAAC;IACrBgP,OAAO,GAAG,CAACy5C,OAAO,GAAGD,OAAO,IAAIE,SAAS;EAC3C,CAAC,MAAM;IACLA,SAAS,GAAG,CAACD,OAAO,GAAGD,OAAO,IAAIx5C,OAAO;IACzC,IAAI1iB,YAAY,CAACo8D,SAAS,EAAEn6D,IAAI,CAAC24B,KAAK,CAACwhC,SAAS,CAAC,EAAE15C,OAAO,GAAG,IAAI,CAAC,EAAE;MAClE05C,SAAS,GAAGn6D,IAAI,CAAC24B,KAAK,CAACwhC,SAAS,CAAC;IACnC,CAAC,MAAM;MACLA,SAAS,GAAGn6D,IAAI,CAACo5B,IAAI,CAAC+gC,SAAS,CAAC;IAClC;EACF;EACA,IAAMC,aAAa,GAAGp6D,IAAI,CAACuC,GAAG,CAC5BtE,cAAc,CAACwiB,OAAO,CAAC,EACvBxiB,cAAc,CAACg8D,OAAO,CAAC,CACxB;EACD92D,MAAM,GAAGnD,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAE12B,aAAa,CAACqlE,SAAS,CAAC,GAAGY,aAAa,GAAGZ,SAAS,CAAC;EAC3ES,OAAO,GAAGj6D,IAAI,CAAC24B,KAAK,CAACshC,OAAO,GAAG92D,MAAM,CAAC,GAAGA,MAAM;EAC/C+2D,OAAO,GAAGl6D,IAAI,CAAC24B,KAAK,CAACuhC,OAAO,GAAG/2D,MAAM,CAAC,GAAGA,MAAM;EAC/C,IAAIjP,CAAC,GAAG,CAAC;EACT,IAAI2W,UAAU,EAAE;IACd,IAAI8uD,aAAa,IAAIM,OAAO,KAAKh6D,GAAG,EAAE;MACpC+X,KAAK,CAAClW,IAAI,CAAC;QAAC5C,KAAK,EAAEe;MAAG,CAAC,CAAC;MACxB,IAAIg6D,OAAO,GAAGh6D,GAAG,EAAE;QACjB/L,CAAC,EAAE;MACL;MACA,IAAI6J,YAAY,CAACiC,IAAI,CAAC24B,KAAK,CAAC,CAACshC,OAAO,GAAG/lE,CAAC,GAAGusB,OAAO,IAAItd,MAAM,CAAC,GAAGA,MAAM,EAAElD,GAAG,EAAEo6D,iBAAiB,CAACp6D,GAAG,EAAE+5D,UAAU,EAAEX,iBAAiB,CAAC,CAAC,EAAE;QACnInlE,CAAC,EAAE;MACL;IACF,CAAC,MAAM,IAAI+lE,OAAO,GAAGh6D,GAAG,EAAE;MACxB/L,CAAC,EAAE;IACL;EACF;EACA,OAAOA,CAAC,GAAGimE,SAAS,EAAE,EAAEjmE,CAAC,EAAE;IACzB8jB,KAAK,CAAClW,IAAI,CAAC;MAAC5C,KAAK,EAAEc,IAAI,CAAC24B,KAAK,CAAC,CAACshC,OAAO,GAAG/lE,CAAC,GAAGusB,OAAO,IAAItd,MAAM,CAAC,GAAGA;IAAM,CAAC,CAAC;EAC5E;EACA,IAAI2H,UAAU,IAAI6uD,aAAa,IAAIO,OAAO,KAAK33D,GAAG,EAAE;IAClD,IAAIxE,YAAY,CAACia,KAAK,CAACA,KAAK,CAACvX,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK,EAAEqD,GAAG,EAAE83D,iBAAiB,CAAC93D,GAAG,EAAEy3D,UAAU,EAAEX,iBAAiB,CAAC,CAAC,EAAE;MAC3GrhD,KAAK,CAACA,KAAK,CAACvX,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK,GAAGqD,GAAG;IACrC,CAAC,MAAM;MACLyV,KAAK,CAAClW,IAAI,CAAC;QAAC5C,KAAK,EAAEqD;MAAG,CAAC,CAAC;IAC1B;EACF,CAAC,MAAM,IAAI,CAACuI,UAAU,IAAIovD,OAAO,KAAK33D,GAAG,EAAE;IACzCyV,KAAK,CAAClW,IAAI,CAAC;MAAC5C,KAAK,EAAEg7D;IAAO,CAAC,CAAC;EAC9B;EACA,OAAOliD,KAAK;AACd;AACA,SAASqiD,iBAAiBA,CAACn7D,KAAK,EAAE86D,UAAU,EAAAM,KAAA,EAA6B;EAAA,IAA1B5/C,UAAU,GAAA4/C,KAAA,CAAV5/C,UAAU;IAAEmc,WAAW,GAAAyjC,KAAA,CAAXzjC,WAAW;EACpE,IAAM0jC,GAAG,GAAGhmE,SAAS,CAACsiC,WAAW,CAAC;EAClC,IAAMte,KAAK,GAAG,CAACmC,UAAU,GAAG1a,IAAI,CAACof,GAAG,CAACm7C,GAAG,CAAC,GAAGv6D,IAAI,CAACkf,GAAG,CAACq7C,GAAG,CAAC,KAAK,KAAK;EACnE,IAAM95D,MAAM,GAAG,IAAI,GAAGu5D,UAAU,GAAG,CAAC,EAAE,GAAG96D,KAAK,EAAEuB,MAAM;EACtD,OAAOT,IAAI,CAACC,GAAG,CAAC+5D,UAAU,GAAGzhD,KAAK,EAAE9X,MAAM,CAAC;AAC7C;AAAC,IACK+5D,eAAe,0BAAAC,OAAA;EAAA7gD,SAAA,CAAA4gD,eAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA5gD,YAAA,CAAA0gD,eAAA;EACnB,SAAAA,gBAAY72D,GAAG,EAAE;IAAA,IAAAg3D,OAAA;IAAAl8D,eAAA,OAAA+7D,eAAA;IACfG,OAAA,GAAAD,QAAA,CAAAr6D,IAAA,OAAMsD,GAAG;IACTg3D,OAAA,CAAKz6D,KAAK,GAAGnB,SAAS;IACtB47D,OAAA,CAAKnyD,GAAG,GAAGzJ,SAAS;IACpB47D,OAAA,CAAK5B,WAAW,GAAGh6D,SAAS;IAC5B47D,OAAA,CAAKC,SAAS,GAAG77D,SAAS;IAC1B47D,OAAA,CAAK3B,WAAW,GAAG,CAAC;IAAC,OAAA2B,OAAA;EACvB;EAAC37D,YAAA,CAAAw7D,eAAA;IAAAv7D,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAIpV,aAAa,CAACoZ,GAAG,CAAC,EAAE;QACtB,OAAO,IAAI;MACb;MACA,IAAI,CAAC,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYxC,MAAM,KAAK,CAACkuD,QAAQ,CAAC,CAAC1rD,GAAG,CAAC,EAAE;QACzE,OAAO,IAAI;MACb;MACA,OAAO,CAACA,GAAG;IACb;EAAC;IAAAtO,GAAA;IAAAC,KAAA,EACD,SAAA27D,uBAAA,EAAyB;MACvB,IAAMz6D,EAAE,GAAG,IAAI;MACf,IAAOgd,WAAW,GAAIhd,EAAE,CAACkH,OAAO,CAAzB8V,WAAW;MAClB,IAAA09C,kBAAA,GAAiC16D,EAAE,CAACuK,aAAa,EAAE;QAA5CE,UAAU,GAAAiwD,kBAAA,CAAVjwD,UAAU;QAAEC,UAAU,GAAAgwD,kBAAA,CAAVhwD,UAAU;MAC7B,IAAK7K,GAAG,GAASG,EAAE,CAAdH,GAAG;QAAEsC,GAAG,GAAInC,EAAE,CAATmC,GAAG;MACb,IAAMw4D,MAAM,GAAG,SAATA,MAAMA,CAAG3nE,CAAC;QAAA,OAAK6M,GAAG,GAAG4K,UAAU,GAAG5K,GAAG,GAAG7M,CAAC;MAAA,CAAC;MAChD,IAAM4nE,MAAM,GAAG,SAATA,MAAMA,CAAG5nE,CAAC;QAAA,OAAKmP,GAAG,GAAGuI,UAAU,GAAGvI,GAAG,GAAGnP,CAAC;MAAA,CAAC;MAChD,IAAIgqB,WAAW,EAAE;QACf,IAAM69C,OAAO,GAAGhnE,IAAI,CAACgM,GAAG,CAAC;QACzB,IAAMi7D,OAAO,GAAGjnE,IAAI,CAACsO,GAAG,CAAC;QACzB,IAAI04D,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;UAC9BF,MAAM,CAAC,CAAC,CAAC;QACX,CAAC,MAAM,IAAIC,OAAO,GAAG,CAAC,IAAIC,OAAO,GAAG,CAAC,EAAE;UACrCH,MAAM,CAAC,CAAC,CAAC;QACX;MACF;MACA,IAAI96D,GAAG,KAAKsC,GAAG,EAAE;QACfy4D,MAAM,CAACz4D,GAAG,GAAG,CAAC,CAAC;QACf,IAAI,CAAC6a,WAAW,EAAE;UAChB29C,MAAM,CAAC96D,GAAG,GAAG,CAAC,CAAC;QACjB;MACF;MACAG,EAAE,CAACH,GAAG,GAAGA,GAAG;MACZG,EAAE,CAACmC,GAAG,GAAGA,GAAG;IACd;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAi8D,aAAA,EAAe;MACb,IAAM/6D,EAAE,GAAG,IAAI;MACf,IAAM03B,QAAQ,GAAG13B,EAAE,CAACkH,OAAO,CAAC0Q,KAAK;MACjC,IAAKggB,aAAa,GAAcF,QAAQ,CAAnCE,aAAa;QAAEojC,QAAQ,GAAItjC,QAAQ,CAApBsjC,QAAQ;MAC5B,IAAI3B,QAAQ;MACZ,IAAI2B,QAAQ,EAAE;QACZ3B,QAAQ,GAAGz5D,IAAI,CAACo5B,IAAI,CAACh5B,EAAE,CAACmC,GAAG,GAAG64D,QAAQ,CAAC,GAAGp7D,IAAI,CAACoE,KAAK,CAAChE,EAAE,CAACH,GAAG,GAAGm7D,QAAQ,CAAC,GAAG,CAAC;MAC7E,CAAC,MAAM;QACL3B,QAAQ,GAAGr5D,EAAE,CAACi7D,gBAAgB,EAAE;QAChCrjC,aAAa,GAAGA,aAAa,IAAI,EAAE;MACrC;MACA,IAAIA,aAAa,EAAE;QACjByhC,QAAQ,GAAGz5D,IAAI,CAACC,GAAG,CAAC+3B,aAAa,EAAEyhC,QAAQ,CAAC;MAC9C;MACA,OAAOA,QAAQ;IACjB;EAAC;IAAAx6D,GAAA;IAAAC,KAAA,EACD,SAAAm8D,iBAAA,EAAmB;MACjB,OAAOtwD,MAAM,CAACE,iBAAiB;IACjC;EAAC;IAAAhM,GAAA;IAAAC,KAAA,EACD,SAAAy+B,WAAA,EAAa;MACX,IAAMv9B,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMwwB,QAAQ,GAAGxvB,IAAI,CAAC0P,KAAK;MAC3B,IAAIyhD,QAAQ,GAAGr5D,EAAE,CAAC+6D,YAAY,EAAE;MAChC1B,QAAQ,GAAGz5D,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEk3D,QAAQ,CAAC;MAChC,IAAM6B,uBAAuB,GAAG;QAC9B7B,QAAQ,EAARA,QAAQ;QACRtjC,MAAM,EAAE7tB,IAAI,CAAC6tB,MAAM;QACnBl2B,GAAG,EAAEqI,IAAI,CAACrI,GAAG;QACbsC,GAAG,EAAE+F,IAAI,CAAC/F,GAAG;QACbi3D,SAAS,EAAE1hC,QAAQ,CAAC0hC,SAAS;QAC7Bp2B,IAAI,EAAEtL,QAAQ,CAACsjC,QAAQ;QACvB3pD,KAAK,EAAEqmB,QAAQ,CAACrmB,KAAK;QACrBioD,SAAS,EAAEt5D,EAAE,CAAC+lC,UAAU,EAAE;QAC1BzrB,UAAU,EAAEta,EAAE,CAACua,YAAY,EAAE;QAC7Bkc,WAAW,EAAEiB,QAAQ,CAACjB,WAAW,IAAI,CAAC;QACtC8iC,aAAa,EAAE7hC,QAAQ,CAAC6hC,aAAa,KAAK;MAC5C,CAAC;MACD,IAAML,SAAS,GAAGl5D,EAAE,CAACy7B,MAAM,IAAIz7B,EAAE;MACjC,IAAM4X,KAAK,GAAGohD,eAAe,CAACkC,uBAAuB,EAAEhC,SAAS,CAAC;MACjE,IAAIhxD,IAAI,CAAC6tB,MAAM,KAAK,OAAO,EAAE;QAC3B14B,kBAAkB,CAACua,KAAK,EAAE5X,EAAE,EAAE,OAAO,CAAC;MACxC;MACA,IAAIkI,IAAI,CAACC,OAAO,EAAE;QAChByP,KAAK,CAACzP,OAAO,EAAE;QACfnI,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACmC,GAAG;QACjBnC,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACH,GAAG;MACjB,CAAC,MAAM;QACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;QACjBG,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACmC,GAAG;MACjB;MACA,OAAOyV,KAAK;IACd;EAAC;IAAA/Y,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAM4X,KAAK,GAAG5X,EAAE,CAAC4X,KAAK;MACtB,IAAI9X,KAAK,GAAGE,EAAE,CAACH,GAAG;MAClB,IAAIuI,GAAG,GAAGpI,EAAE,CAACmC,GAAG;MAChB8X,IAAA,CAAAC,eAAA,CAAAkgD,eAAA,CAAApjD,SAAA,sBAAA/W,IAAA;MACA,IAAID,EAAE,CAACkH,OAAO,CAAC2V,MAAM,IAAIjF,KAAK,CAACvX,MAAM,EAAE;QACrC,IAAMwc,MAAM,GAAG,CAACzU,GAAG,GAAGtI,KAAK,IAAIF,IAAI,CAACuC,GAAG,CAACyV,KAAK,CAACvX,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC;QAChEP,KAAK,IAAI+c,MAAM;QACfzU,GAAG,IAAIyU,MAAM;MACf;MACA7c,EAAE,CAAC24D,WAAW,GAAG74D,KAAK;MACtBE,EAAE,CAACw6D,SAAS,GAAGpyD,GAAG;MAClBpI,EAAE,CAAC44D,WAAW,GAAGxwD,GAAG,GAAGtI,KAAK;IAC9B;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,OAAOnK,YAAY,CAACmK,KAAK,EAAE,IAAI,CAACE,KAAK,CAACkI,OAAO,CAAC4a,MAAM,CAAC;IACvD;EAAC;EAAA,OAAAs4C,eAAA;AAAA,EAjH2Br/B,KAAK;AAAA,IAoH7BogC,WAAW,0BAAAC,gBAAA;EAAA5hD,SAAA,CAAA2hD,WAAA,EAAAC,gBAAA;EAAA,IAAAC,QAAA,GAAA3hD,YAAA,CAAAyhD,WAAA;EAAA,SAAAA,YAAA;IAAA98D,eAAA,OAAA88D,WAAA;IAAA,OAAAE,QAAA,CAAAx5D,KAAA,OAAAzB,SAAA;EAAA;EAAAxB,YAAA,CAAAu8D,WAAA;IAAAt8D,GAAA;IAAAC,KAAA,EACf,SAAAs+B,oBAAA,EAAsB;MACpB,IAAMp9B,EAAE,GAAG,IAAI;MACf,IAAAs7D,cAAA,GAAmBt7D,EAAE,CAAC6S,SAAS,CAAC,IAAI,CAAC;QAA9BhT,GAAG,GAAAy7D,cAAA,CAAHz7D,GAAG;QAAEsC,GAAG,GAAAm5D,cAAA,CAAHn5D,GAAG;MACfnC,EAAE,CAACH,GAAG,GAAGpM,cAAc,CAACoM,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACtCG,EAAE,CAACmC,GAAG,GAAG1O,cAAc,CAAC0O,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACtCnC,EAAE,CAACy6D,sBAAsB,EAAE;IAC7B;EAAC;IAAA57D,GAAA;IAAAC,KAAA,EACD,SAAAm8D,iBAAA,EAAmB;MACjB,IAAMj7D,EAAE,GAAG,IAAI;MACf,IAAMsa,UAAU,GAAGta,EAAE,CAACua,YAAY,EAAE;MACpC,IAAMla,MAAM,GAAGia,UAAU,GAAGta,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAACib,MAAM;MAChD,IAAMwb,WAAW,GAAGtiC,SAAS,CAAC6L,EAAE,CAACkH,OAAO,CAAC0Q,KAAK,CAAC6e,WAAW,CAAC;MAC3D,IAAMte,KAAK,GAAG,CAACmC,UAAU,GAAG1a,IAAI,CAACof,GAAG,CAACyX,WAAW,CAAC,GAAG72B,IAAI,CAACkf,GAAG,CAAC2X,WAAW,CAAC,KAAK,KAAK;MACnF,IAAMsK,QAAQ,GAAG/gC,EAAE,CAACkhC,uBAAuB,CAAC,CAAC,CAAC;MAC9C,OAAOthC,IAAI,CAACo5B,IAAI,CAAC34B,MAAM,GAAGT,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEkhC,QAAQ,CAACvG,UAAU,GAAGriB,KAAK,CAAC,CAAC;IACtE;EAAC;IAAAtZ,GAAA;IAAAC,KAAA,EACD,SAAA6Y,iBAAiB7Y,KAAK,EAAE;MACtB,OAAOA,KAAK,KAAK,IAAI,GAAG8T,GAAG,GAAG,IAAI,CAACgL,kBAAkB,CAAC,CAAC9e,KAAK,GAAG,IAAI,CAAC65D,WAAW,IAAI,IAAI,CAACC,WAAW,CAAC;IACtG;EAAC;IAAA/5D,GAAA;IAAAC,KAAA,EACD,SAAAwiC,iBAAiBC,KAAK,EAAE;MACtB,OAAO,IAAI,CAACo3B,WAAW,GAAG,IAAI,CAACl3B,kBAAkB,CAACF,KAAK,CAAC,GAAG,IAAI,CAACq3B,WAAW;IAC7E;EAAC;EAAA,OAAAuC,WAAA;AAAA,EAtBuBf,eAAe;AAwBzCe,WAAW,CAAC7wD,EAAE,GAAG,QAAQ;AACzB6wD,WAAW,CAACpoE,QAAQ,GAAG;EACrB6kB,KAAK,EAAE;IACLzgB,QAAQ,EAAE2+B,KAAK,CAACZ,UAAU,CAACC;EAC7B;AACF,CAAC;AAED,SAASomC,OAAOA,CAACC,OAAO,EAAE;EACxB,IAAM52D,MAAM,GAAG42D,OAAO,GAAI57D,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAE7qB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAAC2kE,OAAO,CAAC,CAAC,CAAE;EACnE,OAAO52D,MAAM,KAAK,CAAC;AACrB;AACA,SAAS62D,aAAaA,CAACxC,iBAAiB,EAAEC,SAAS,EAAE;EACnD,IAAMwC,MAAM,GAAG97D,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAACqiE,SAAS,CAAC/2D,GAAG,CAAC,CAAC;EAC/C,IAAMw5D,cAAc,GAAG/7D,IAAI,CAACo5B,IAAI,CAACkgC,SAAS,CAAC/2D,GAAG,GAAGvC,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAEixC,MAAM,CAAC,CAAC;EACtE,IAAM9jD,KAAK,GAAG,EAAE;EAChB,IAAI4jD,OAAO,GAAGvkE,eAAe,CAACgiE,iBAAiB,CAACp5D,GAAG,EAAED,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAE7qB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAACqiE,SAAS,CAACr5D,GAAG,CAAC,CAAC,CAAC,CAAC;EACpG,IAAI+7D,GAAG,GAAGh8D,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAAC2kE,OAAO,CAAC,CAAC;EACpC,IAAIK,WAAW,GAAGj8D,IAAI,CAACoE,KAAK,CAACw3D,OAAO,GAAG57D,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAEmxC,GAAG,CAAC,CAAC;EACzD,IAAIxC,SAAS,GAAGwC,GAAG,GAAG,CAAC,GAAGh8D,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAE7qB,IAAI,CAAC8X,GAAG,CAACkkD,GAAG,CAAC,CAAC,GAAG,CAAC;EACzD,GAAG;IACDhkD,KAAK,CAAClW,IAAI,CAAC;MAAC5C,KAAK,EAAE08D,OAAO;MAAEtkC,KAAK,EAAEqkC,OAAO,CAACC,OAAO;IAAC,CAAC,CAAC;IACrD,EAAEK,WAAW;IACb,IAAIA,WAAW,KAAK,EAAE,EAAE;MACtBA,WAAW,GAAG,CAAC;MACf,EAAED,GAAG;MACLxC,SAAS,GAAGwC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAGxC,SAAS;IACtC;IACAoC,OAAO,GAAG57D,IAAI,CAAC24B,KAAK,CAACsjC,WAAW,GAAGj8D,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAEmxC,GAAG,CAAC,GAAGxC,SAAS,CAAC,GAAGA,SAAS;EAC/E,CAAC,QAAQwC,GAAG,GAAGF,MAAM,IAAKE,GAAG,KAAKF,MAAM,IAAIG,WAAW,GAAGF,cAAe;EACzE,IAAMG,QAAQ,GAAG7kE,eAAe,CAACgiE,iBAAiB,CAAC92D,GAAG,EAAEq5D,OAAO,CAAC;EAChE5jD,KAAK,CAAClW,IAAI,CAAC;IAAC5C,KAAK,EAAEg9D,QAAQ;IAAE5kC,KAAK,EAAEqkC,OAAO,CAACC,OAAO;EAAC,CAAC,CAAC;EACtD,OAAO5jD,KAAK;AACd;AAAC,IACKmkD,gBAAgB,0BAAAC,OAAA;EAAAxiD,SAAA,CAAAuiD,gBAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAAviD,YAAA,CAAAqiD,gBAAA;EACpB,SAAAA,iBAAYx4D,GAAG,EAAE;IAAA,IAAA24D,OAAA;IAAA79D,eAAA,OAAA09D,gBAAA;IACfG,OAAA,GAAAD,QAAA,CAAAh8D,IAAA,OAAMsD,GAAG;IACT24D,OAAA,CAAKp8D,KAAK,GAAGnB,SAAS;IACtBu9D,OAAA,CAAK9zD,GAAG,GAAGzJ,SAAS;IACpBu9D,OAAA,CAAKvD,WAAW,GAAGh6D,SAAS;IAC5Bu9D,OAAA,CAAKtD,WAAW,GAAG,CAAC;IAAC,OAAAsD,OAAA;EACvB;EAACt9D,YAAA,CAAAm9D,gBAAA;IAAAl9D,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAMrK,KAAK,GAAGs7D,eAAe,CAACpjD,SAAS,CAAC5F,KAAK,CAACvP,KAAK,CAAC,IAAI,EAAE,CAACsL,GAAG,EAAEhE,KAAK,CAAC,CAAC;MACvE,IAAIrK,KAAK,KAAK,CAAC,EAAE;QACf,IAAI,CAACq9D,KAAK,GAAG,IAAI;QACjB,OAAOx9D,SAAS;MAClB;MACA,OAAOlL,cAAc,CAACqL,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,IAAI;IAC1D;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAAs+B,oBAAA,EAAsB;MACpB,IAAMp9B,EAAE,GAAG,IAAI;MACf,IAAAo8D,cAAA,GAAmBp8D,EAAE,CAAC6S,SAAS,CAAC,IAAI,CAAC;QAA9BhT,GAAG,GAAAu8D,cAAA,CAAHv8D,GAAG;QAAEsC,GAAG,GAAAi6D,cAAA,CAAHj6D,GAAG;MACfnC,EAAE,CAACH,GAAG,GAAGpM,cAAc,CAACoM,GAAG,CAAC,GAAGD,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEtC,GAAG,CAAC,GAAG,IAAI;MACtDG,EAAE,CAACmC,GAAG,GAAG1O,cAAc,CAAC0O,GAAG,CAAC,GAAGvC,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAEA,GAAG,CAAC,GAAG,IAAI;MACtD,IAAInC,EAAE,CAACkH,OAAO,CAAC8V,WAAW,EAAE;QAC1Bhd,EAAE,CAACm8D,KAAK,GAAG,IAAI;MACjB;MACAn8D,EAAE,CAACy6D,sBAAsB,EAAE;IAC7B;EAAC;IAAA57D,GAAA;IAAAC,KAAA,EACD,SAAA27D,uBAAA,EAAyB;MACvB,IAAMz6D,EAAE,GAAG,IAAI;MACf,IAAAq8D,kBAAA,GAAiCr8D,EAAE,CAACuK,aAAa,EAAE;QAA5CE,UAAU,GAAA4xD,kBAAA,CAAV5xD,UAAU;QAAEC,UAAU,GAAA2xD,kBAAA,CAAV3xD,UAAU;MAC7B,IAAI7K,GAAG,GAAGG,EAAE,CAACH,GAAG;MAChB,IAAIsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAChB,IAAMw4D,MAAM,GAAG,SAATA,MAAMA,CAAG3nE,CAAC;QAAA,OAAK6M,GAAG,GAAG4K,UAAU,GAAG5K,GAAG,GAAG7M,CAAC;MAAA,CAAC;MAChD,IAAM4nE,MAAM,GAAG,SAATA,MAAMA,CAAG5nE,CAAC;QAAA,OAAKmP,GAAG,GAAGuI,UAAU,GAAGvI,GAAG,GAAGnP,CAAC;MAAA,CAAC;MAChD,IAAM4oE,GAAG,GAAG,SAANA,GAAGA,CAAI5oE,CAAC,EAAEsB,CAAC;QAAA,OAAKsL,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAE7qB,IAAI,CAACoE,KAAK,CAACnN,KAAK,CAAC7D,CAAC,CAAC,CAAC,GAAGsB,CAAC,CAAC;MAAA;MAC5D,IAAIuL,GAAG,KAAKsC,GAAG,EAAE;QACf,IAAItC,GAAG,IAAI,CAAC,EAAE;UACZ86D,MAAM,CAAC,CAAC,CAAC;UACTC,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC,MAAM;UACLD,MAAM,CAACiB,GAAG,CAAC/7D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;UACpB+6D,MAAM,CAACgB,GAAG,CAACz5D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACtB;MACF;MACA,IAAItC,GAAG,IAAI,CAAC,EAAE;QACZ86D,MAAM,CAACiB,GAAG,CAACz5D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACA,IAAIA,GAAG,IAAI,CAAC,EAAE;QACZy4D,MAAM,CAACgB,GAAG,CAAC/7D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACA,IAAIG,EAAE,CAACm8D,KAAK,IAAIn8D,EAAE,CAACH,GAAG,KAAKG,EAAE,CAACi8B,aAAa,IAAIp8B,GAAG,KAAK+7D,GAAG,CAAC57D,EAAE,CAACH,GAAG,EAAE,CAAC,CAAC,EAAE;QACrE86D,MAAM,CAACiB,GAAG,CAAC/7D,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MACtB;MACAG,EAAE,CAACH,GAAG,GAAGA,GAAG;MACZG,EAAE,CAACmC,GAAG,GAAGA,GAAG;IACd;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAy+B,WAAA,EAAa;MACX,IAAMv9B,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAM+xD,iBAAiB,GAAG;QACxBp5D,GAAG,EAAEG,EAAE,CAAC+7B,QAAQ;QAChB55B,GAAG,EAAEnC,EAAE,CAAC87B;MACV,CAAC;MACD,IAAMlkB,KAAK,GAAG6jD,aAAa,CAACxC,iBAAiB,EAAEj5D,EAAE,CAAC;MAClD,IAAIkI,IAAI,CAAC6tB,MAAM,KAAK,OAAO,EAAE;QAC3B14B,kBAAkB,CAACua,KAAK,EAAE5X,EAAE,EAAE,OAAO,CAAC;MACxC;MACA,IAAIkI,IAAI,CAACC,OAAO,EAAE;QAChByP,KAAK,CAACzP,OAAO,EAAE;QACfnI,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACmC,GAAG;QACjBnC,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACH,GAAG;MACjB,CAAC,MAAM;QACLG,EAAE,CAACF,KAAK,GAAGE,EAAE,CAACH,GAAG;QACjBG,EAAE,CAACoI,GAAG,GAAGpI,EAAE,CAACmC,GAAG;MACjB;MACA,OAAOyV,KAAK;IACd;EAAC;IAAA/Y,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,OAAOA,KAAK,KAAKH,SAAS,GAAG,GAAG,GAAGhK,YAAY,CAACmK,KAAK,EAAE,IAAI,CAACE,KAAK,CAACkI,OAAO,CAAC4a,MAAM,CAAC;IACnF;EAAC;IAAAjjB,GAAA;IAAAC,KAAA,EACD,SAAA2H,UAAA,EAAY;MACV,IAAMzG,EAAE,GAAG,IAAI;MACf,IAAMF,KAAK,GAAGE,EAAE,CAACH,GAAG;MACpBoa,IAAA,CAAAC,eAAA,CAAA6hD,gBAAA,CAAA/kD,SAAA,sBAAA/W,IAAA;MACAD,EAAE,CAAC24D,WAAW,GAAG9hE,KAAK,CAACiJ,KAAK,CAAC;MAC7BE,EAAE,CAAC44D,WAAW,GAAG/hE,KAAK,CAACmJ,EAAE,CAACmC,GAAG,CAAC,GAAGtL,KAAK,CAACiJ,KAAK,CAAC;IAC/C;EAAC;IAAAjB,GAAA;IAAAC,KAAA,EACD,SAAA6Y,iBAAiB7Y,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAIlB,KAAK,KAAKH,SAAS,IAAIG,KAAK,KAAK,CAAC,EAAE;QACtCA,KAAK,GAAGkB,EAAE,CAACH,GAAG;MAChB;MACA,IAAIf,KAAK,KAAK,IAAI,IAAIyc,KAAK,CAACzc,KAAK,CAAC,EAAE;QAClC,OAAO8T,GAAG;MACZ;MACA,OAAO5S,EAAE,CAAC4d,kBAAkB,CAAC9e,KAAK,KAAKkB,EAAE,CAACH,GAAG,GACzC,CAAC,GACD,CAAChJ,KAAK,CAACiI,KAAK,CAAC,GAAGkB,EAAE,CAAC24D,WAAW,IAAI34D,EAAE,CAAC44D,WAAW,CAAC;IACvD;EAAC;IAAA/5D,GAAA;IAAAC,KAAA,EACD,SAAAwiC,iBAAiBC,KAAK,EAAE;MACtB,IAAMvhC,EAAE,GAAG,IAAI;MACf,IAAMwhC,OAAO,GAAGxhC,EAAE,CAACyhC,kBAAkB,CAACF,KAAK,CAAC;MAC5C,OAAO3hC,IAAI,CAAC6qB,GAAG,CAAC,EAAE,EAAEzqB,EAAE,CAAC24D,WAAW,GAAGn3B,OAAO,GAAGxhC,EAAE,CAAC44D,WAAW,CAAC;IAChE;EAAC;EAAA,OAAAmD,gBAAA;AAAA,EAtG4BhhC,KAAK;AAwGpCghC,gBAAgB,CAACzxD,EAAE,GAAG,aAAa;AACnCyxD,gBAAgB,CAAChpE,QAAQ,GAAG;EAC1B6kB,KAAK,EAAE;IACLzgB,QAAQ,EAAE2+B,KAAK,CAACZ,UAAU,CAACW,WAAW;IACtCqB,KAAK,EAAE;MACLa,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAASukC,qBAAqBA,CAACp0D,IAAI,EAAE;EACnC,IAAMwvB,QAAQ,GAAGxvB,IAAI,CAAC0P,KAAK;EAC3B,IAAI8f,QAAQ,CAAC5Q,OAAO,IAAI5e,IAAI,CAAC4e,OAAO,EAAE;IACpC,IAAMmI,OAAO,GAAGl5B,SAAS,CAAC2hC,QAAQ,CAACH,eAAe,CAAC;IACnD,OAAOtkC,cAAc,CAACykC,QAAQ,CAAC4C,IAAI,IAAI5C,QAAQ,CAAC4C,IAAI,CAAC3yB,IAAI,EAAE5U,QAAQ,CAACunC,IAAI,CAAC3yB,IAAI,CAAC,GAAGsnB,OAAO,CAAChU,MAAM;EACjG;EACA,OAAO,CAAC;AACV;AACA,SAASshD,gBAAgBA,CAACzuD,GAAG,EAAEwsB,IAAI,EAAE/mB,KAAK,EAAE;EAC1CA,KAAK,GAAG1gB,OAAO,CAAC0gB,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;EACxC,OAAO;IACLje,CAAC,EAAEyI,YAAY,CAAC+P,GAAG,EAAEwsB,IAAI,CAAC6G,MAAM,EAAE5tB,KAAK,CAAC;IACxC7f,CAAC,EAAE6f,KAAK,CAAClT,MAAM,GAAGi6B,IAAI,CAACE;EACzB,CAAC;AACH;AACA,SAASgiC,eAAeA,CAACp9C,KAAK,EAAEyM,GAAG,EAAElkB,IAAI,EAAE9H,GAAG,EAAEsC,GAAG,EAAE;EACnD,IAAIid,KAAK,KAAKvf,GAAG,IAAIuf,KAAK,KAAKjd,GAAG,EAAE;IAClC,OAAO;MACLrC,KAAK,EAAE+rB,GAAG,GAAIlkB,IAAI,GAAG,CAAE;MACvBS,GAAG,EAAEyjB,GAAG,GAAIlkB,IAAI,GAAG;IACrB,CAAC;EACH,CAAC,MAAM,IAAIyX,KAAK,GAAGvf,GAAG,IAAIuf,KAAK,GAAGjd,GAAG,EAAE;IACrC,OAAO;MACLrC,KAAK,EAAE+rB,GAAG,GAAGlkB,IAAI;MACjBS,GAAG,EAAEyjB;IACP,CAAC;EACH;EACA,OAAO;IACL/rB,KAAK,EAAE+rB,GAAG;IACVzjB,GAAG,EAAEyjB,GAAG,GAAGlkB;EACb,CAAC;AACH;AACA,SAAS80D,kBAAkBA,CAACz0D,KAAK,EAAE;EACjC,IAAM00D,cAAc,GAAG;IACrBtpE,CAAC,EAAE,CAAC;IACJlB,CAAC,EAAE8V,KAAK,CAACkT,KAAK;IACdhnB,CAAC,EAAE,CAAC;IACJtB,CAAC,EAAEoV,KAAK,CAACiT,MAAM,GAAGjT,KAAK,CAACozB;EAC1B,CAAC;EACD,IAAMuhC,cAAc,GAAG,CAAC,CAAC;EACzB,IAAM39B,UAAU,GAAG,EAAE;EACrB,IAAM/P,OAAO,GAAG,EAAE;EAClB,IAAM2tC,UAAU,GAAG50D,KAAK,CAAC8J,SAAS,EAAE,CAACzR,MAAM;EAC3C,KAAK,IAAI3N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkqE,UAAU,EAAElqE,CAAC,EAAE,EAAE;IACnC,IAAMwV,IAAI,GAAGF,KAAK,CAACd,OAAO,CAAC8f,WAAW,CAACsV,UAAU,CAACt0B,KAAK,CAACkJ,UAAU,CAACxe,CAAC,CAAC,CAAC;IACtEu8B,OAAO,CAACv8B,CAAC,CAAC,GAAGwV,IAAI,CAAC+mB,OAAO;IACzB,IAAMzH,aAAa,GAAGxf,KAAK,CAAC60D,gBAAgB,CAACnqE,CAAC,EAAEsV,KAAK,CAAC80D,WAAW,GAAG7tC,OAAO,CAACv8B,CAAC,CAAC,CAAC;IAC/E,IAAMqqE,MAAM,GAAG1kE,MAAM,CAAC6P,IAAI,CAACoyB,IAAI,CAAC;IAChC,IAAMy0B,QAAQ,GAAGwN,gBAAgB,CAACv0D,KAAK,CAAC8F,GAAG,EAAEivD,MAAM,EAAE/0D,KAAK,CAACg1D,YAAY,CAACtqE,CAAC,CAAC,CAAC;IAC3EssC,UAAU,CAACtsC,CAAC,CAAC,GAAGq8D,QAAQ;IACxB,IAAMlvB,YAAY,GAAG73B,KAAK,CAACue,aAAa,CAAC7zB,CAAC,CAAC;IAC3C,IAAM0sB,KAAK,GAAG7nB,SAAS,CAACsoC,YAAY,CAAC;IACrC,IAAMo9B,OAAO,GAAGT,eAAe,CAACp9C,KAAK,EAAEoI,aAAa,CAAChyB,CAAC,EAAEu5D,QAAQ,CAACz5D,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAC3E,IAAM4nE,OAAO,GAAGV,eAAe,CAACp9C,KAAK,EAAEoI,aAAa,CAAC9xB,CAAC,EAAEq5D,QAAQ,CAACr7D,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;IAC5E,IAAIupE,OAAO,CAACn9D,KAAK,GAAG48D,cAAc,CAACtpE,CAAC,EAAE;MACpCspE,cAAc,CAACtpE,CAAC,GAAG6pE,OAAO,CAACn9D,KAAK;MAChC68D,cAAc,CAACvpE,CAAC,GAAGysC,YAAY;IACjC;IACA,IAAIo9B,OAAO,CAAC70D,GAAG,GAAGs0D,cAAc,CAACxqE,CAAC,EAAE;MAClCwqE,cAAc,CAACxqE,CAAC,GAAG+qE,OAAO,CAAC70D,GAAG;MAC9Bu0D,cAAc,CAACzqE,CAAC,GAAG2tC,YAAY;IACjC;IACA,IAAIq9B,OAAO,CAACp9D,KAAK,GAAG48D,cAAc,CAACxoE,CAAC,EAAE;MACpCwoE,cAAc,CAACxoE,CAAC,GAAGgpE,OAAO,CAACp9D,KAAK;MAChC68D,cAAc,CAACzoE,CAAC,GAAG2rC,YAAY;IACjC;IACA,IAAIq9B,OAAO,CAAC90D,GAAG,GAAGs0D,cAAc,CAAC9pE,CAAC,EAAE;MAClC8pE,cAAc,CAAC9pE,CAAC,GAAGsqE,OAAO,CAAC90D,GAAG;MAC9Bu0D,cAAc,CAAC/pE,CAAC,GAAGitC,YAAY;IACjC;EACF;EACA73B,KAAK,CAACm1D,cAAc,CAACn1D,KAAK,CAAC80D,WAAW,EAAEJ,cAAc,EAAEC,cAAc,CAAC;EACvE30D,KAAK,CAACo1D,gBAAgB,GAAGC,oBAAoB,CAACr1D,KAAK,EAAEg3B,UAAU,EAAE/P,OAAO,CAAC;AAC3E;AACA,SAASouC,oBAAoBA,CAACr1D,KAAK,EAAEg3B,UAAU,EAAE/P,OAAO,EAAE;EACxD,IAAMvuB,KAAK,GAAG,EAAE;EAChB,IAAMk8D,UAAU,GAAG50D,KAAK,CAAC8J,SAAS,EAAE,CAACzR,MAAM;EAC3C,IAAM6H,IAAI,GAAGF,KAAK,CAACd,OAAO;EAC1B,IAAMo2D,kBAAkB,GAAGhB,qBAAqB,CAACp0D,IAAI,CAAC;EACtD,IAAMq1D,aAAa,GAAGv1D,KAAK,CAAC2e,6BAA6B,CAACze,IAAI,CAAC0P,KAAK,CAACzP,OAAO,GAAGH,KAAK,CAACnI,GAAG,GAAGmI,KAAK,CAAC7F,GAAG,CAAC;EACrG,KAAK,IAAIzP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkqE,UAAU,EAAElqE,CAAC,EAAE,EAAE;IACnC,IAAM8qE,KAAK,GAAI9qE,CAAC,KAAK,CAAC,GAAG4qE,kBAAkB,GAAG,CAAC,GAAG,CAAE;IACpD,IAAMG,kBAAkB,GAAGz1D,KAAK,CAAC60D,gBAAgB,CAACnqE,CAAC,EAAE6qE,aAAa,GAAGC,KAAK,GAAGvuC,OAAO,CAACv8B,CAAC,CAAC,CAAC;IACxF,IAAM0sB,KAAK,GAAG7nB,SAAS,CAACyQ,KAAK,CAACue,aAAa,CAAC7zB,CAAC,CAAC,CAAC;IAC/C,IAAMiV,IAAI,GAAGq3B,UAAU,CAACtsC,CAAC,CAAC;IAC1B,IAAMgD,CAAC,GAAGgoE,SAAS,CAACD,kBAAkB,CAAC/nE,CAAC,EAAEiS,IAAI,CAACjU,CAAC,EAAE0rB,KAAK,CAAC;IACxD,IAAMokB,SAAS,GAAGm6B,oBAAoB,CAACv+C,KAAK,CAAC;IAC7C,IAAMzW,IAAI,GAAGi1D,gBAAgB,CAACH,kBAAkB,CAACjoE,CAAC,EAAEmS,IAAI,CAACrS,CAAC,EAAEkuC,SAAS,CAAC;IACtE9iC,KAAK,CAACgB,IAAI,CAAC;MACTlM,CAAC,EAAEioE,kBAAkB,CAACjoE,CAAC;MACvBE,CAAC,EAADA,CAAC;MACD8tC,SAAS,EAATA,SAAS;MACT76B,IAAI,EAAJA,IAAI;MACJH,GAAG,EAAE9S,CAAC;MACN+S,KAAK,EAAEE,IAAI,GAAGhB,IAAI,CAACrS,CAAC;MACpBoT,MAAM,EAAEhT,CAAC,GAAGiS,IAAI,CAACjU;IACnB,CAAC,CAAC;EACJ;EACA,OAAOgN,KAAK;AACd;AACA,SAASi9D,oBAAoBA,CAACv+C,KAAK,EAAE;EACnC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,GAAG,EAAE;IAChC,OAAO,QAAQ;EACjB,CAAC,MAAM,IAAIA,KAAK,GAAG,GAAG,EAAE;IACtB,OAAO,MAAM;EACf;EACA,OAAO,OAAO;AAChB;AACA,SAASw+C,gBAAgBA,CAACpoE,CAAC,EAAEF,CAAC,EAAE6hC,KAAK,EAAE;EACrC,IAAIA,KAAK,KAAK,OAAO,EAAE;IACrB3hC,CAAC,IAAIF,CAAC;EACR,CAAC,MAAM,IAAI6hC,KAAK,KAAK,QAAQ,EAAE;IAC7B3hC,CAAC,IAAKF,CAAC,GAAG,CAAE;EACd;EACA,OAAOE,CAAC;AACV;AACA,SAASkoE,SAASA,CAAChoE,CAAC,EAAEhC,CAAC,EAAE0rB,KAAK,EAAE;EAC9B,IAAIA,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,GAAG,EAAE;IACjC1pB,CAAC,IAAKhC,CAAC,GAAG,CAAE;EACd,CAAC,MAAM,IAAI0rB,KAAK,GAAG,GAAG,IAAIA,KAAK,GAAG,EAAE,EAAE;IACpC1pB,CAAC,IAAIhC,CAAC;EACR;EACA,OAAOgC,CAAC;AACV;AACA,SAASmoE,eAAeA,CAAC71D,KAAK,EAAEgwD,UAAU,EAAE;EAC1C,IAAOlqD,GAAG,GAA4B9F,KAAK,CAApC8F,GAAG;IAAYkZ,WAAW,GAAKhf,KAAK,CAA/Bd,OAAO,CAAG8f,WAAW;EACjC,KAAK,IAAIt0B,CAAC,GAAGslE,UAAU,GAAG,CAAC,EAAEtlE,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxC,IAAMuwC,WAAW,GAAGjc,WAAW,CAACsV,UAAU,CAACt0B,KAAK,CAACkJ,UAAU,CAACxe,CAAC,CAAC,CAAC;IAC/D,IAAMqqE,MAAM,GAAG1kE,MAAM,CAAC4qC,WAAW,CAAC3I,IAAI,CAAC;IACvC,IAAAwjC,qBAAA,GAAoD91D,KAAK,CAACo1D,gBAAgB,CAAC1qE,CAAC,CAAC;MAAtE8C,CAAC,GAAAsoE,qBAAA,CAADtoE,CAAC;MAAEE,CAAC,GAAAooE,qBAAA,CAADpoE,CAAC;MAAE8tC,SAAS,GAAAs6B,qBAAA,CAATt6B,SAAS;MAAE76B,IAAI,GAAAm1D,qBAAA,CAAJn1D,IAAI;MAAEH,GAAG,GAAAs1D,qBAAA,CAAHt1D,GAAG;MAAEC,KAAK,GAAAq1D,qBAAA,CAALr1D,KAAK;MAAEC,MAAM,GAAAo1D,qBAAA,CAANp1D,MAAM;IAChD,IAAO4uB,aAAa,GAAI2L,WAAW,CAA5B3L,aAAa;IACpB,IAAI,CAACvjC,aAAa,CAACujC,aAAa,CAAC,EAAE;MACjC,IAAMrI,OAAO,GAAGl5B,SAAS,CAACktC,WAAW,CAAC1L,eAAe,CAAC;MACtDzpB,GAAG,CAAC8U,SAAS,GAAG0U,aAAa;MAC7BxpB,GAAG,CAAC42B,QAAQ,CAAC/7B,IAAI,GAAGsmB,OAAO,CAACtmB,IAAI,EAAEH,GAAG,GAAGymB,OAAO,CAACzmB,GAAG,EAAEC,KAAK,GAAGE,IAAI,GAAGsmB,OAAO,CAAC/T,KAAK,EAAExS,MAAM,GAAGF,GAAG,GAAGymB,OAAO,CAAChU,MAAM,CAAC;IACnH;IACAhjB,UAAU,CACR6V,GAAG,EACH9F,KAAK,CAACg1D,YAAY,CAACtqE,CAAC,CAAC,EACrB8C,CAAC,EACDE,CAAC,GAAIqnE,MAAM,CAACviC,UAAU,GAAG,CAAE,EAC3BuiC,MAAM,EACN;MACEtqE,KAAK,EAAEwwC,WAAW,CAACxwC,KAAK;MACxB+wC,SAAS,EAAEA,SAAS;MACpBG,YAAY,EAAE;IAChB,CAAC,CACF;EACH;AACF;AACA,SAASo6B,cAAcA,CAAC/1D,KAAK,EAAE+V,MAAM,EAAEgJ,QAAQ,EAAEixC,UAAU,EAAE;EAC3D,IAAOlqD,GAAG,GAAI9F,KAAK,CAAZ8F,GAAG;EACV,IAAIiZ,QAAQ,EAAE;IACZjZ,GAAG,CAAC8T,GAAG,CAAC5Z,KAAK,CAACoe,OAAO,EAAEpe,KAAK,CAACqe,OAAO,EAAEtI,MAAM,EAAE,CAAC,EAAEtpB,GAAG,CAAC;EACvD,CAAC,MAAM;IACL,IAAI+yB,aAAa,GAAGxf,KAAK,CAAC60D,gBAAgB,CAAC,CAAC,EAAE9+C,MAAM,CAAC;IACrDjQ,GAAG,CAACs3B,MAAM,CAAC5d,aAAa,CAAChyB,CAAC,EAAEgyB,aAAa,CAAC9xB,CAAC,CAAC;IAC5C,KAAK,IAAIhD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGslE,UAAU,EAAEtlE,CAAC,EAAE,EAAE;MACnC80B,aAAa,GAAGxf,KAAK,CAAC60D,gBAAgB,CAACnqE,CAAC,EAAEqrB,MAAM,CAAC;MACjDjQ,GAAG,CAACu3B,MAAM,CAAC7d,aAAa,CAAChyB,CAAC,EAAEgyB,aAAa,CAAC9xB,CAAC,CAAC;IAC9C;EACF;AACF;AACA,SAASsoE,cAAcA,CAACh2D,KAAK,EAAEi2D,YAAY,EAAElgD,MAAM,EAAEi6C,UAAU,EAAE;EAC/D,IAAMlqD,GAAG,GAAG9F,KAAK,CAAC8F,GAAG;EACrB,IAAMiZ,QAAQ,GAAGk3C,YAAY,CAACl3C,QAAQ;EACtC,IAAOt0B,KAAK,GAAewrE,YAAY,CAAhCxrE,KAAK;IAAEuwB,SAAS,GAAIi7C,YAAY,CAAzBj7C,SAAS;EACvB,IAAK,CAAC+D,QAAQ,IAAI,CAACixC,UAAU,IAAK,CAACvlE,KAAK,IAAI,CAACuwB,SAAS,IAAIjF,MAAM,GAAG,CAAC,EAAE;IACpE;EACF;EACAjQ,GAAG,CAAC22B,IAAI,EAAE;EACV32B,GAAG,CAACgV,WAAW,GAAGrwB,KAAK;EACvBqb,GAAG,CAACkV,SAAS,GAAGA,SAAS;EACzBlV,GAAG,CAACm3B,WAAW,CAACg5B,YAAY,CAAC1nC,UAAU,CAAC;EACxCzoB,GAAG,CAACo3B,cAAc,GAAG+4B,YAAY,CAACznC,gBAAgB;EAClD1oB,GAAG,CAACq3B,SAAS,EAAE;EACf44B,cAAc,CAAC/1D,KAAK,EAAE+V,MAAM,EAAEgJ,QAAQ,EAAEixC,UAAU,CAAC;EACnDlqD,GAAG,CAACipC,SAAS,EAAE;EACfjpC,GAAG,CAACw3B,MAAM,EAAE;EACZx3B,GAAG,CAAC62B,OAAO,EAAE;AACf;AACA,SAASu5B,YAAYA,CAACC,KAAK,EAAE;EAC3B,OAAOhpE,QAAQ,CAACgpE,KAAK,CAAC,GAAGA,KAAK,GAAG,CAAC;AACpC;AAAC,IACKC,iBAAiB,0BAAAC,iBAAA;EAAA7kD,SAAA,CAAA4kD,iBAAA,EAAAC,iBAAA;EAAA,IAAAC,QAAA,GAAA5kD,YAAA,CAAA0kD,iBAAA;EACrB,SAAAA,kBAAY76D,GAAG,EAAE;IAAA,IAAAg7D,OAAA;IAAAlgE,eAAA,OAAA+/D,iBAAA;IACfG,OAAA,GAAAD,QAAA,CAAAr+D,IAAA,OAAMsD,GAAG;IACTg7D,OAAA,CAAKn4C,OAAO,GAAGznB,SAAS;IACxB4/D,OAAA,CAAKl4C,OAAO,GAAG1nB,SAAS;IACxB4/D,OAAA,CAAKzB,WAAW,GAAGn+D,SAAS;IAC5B4/D,OAAA,CAAKvB,YAAY,GAAG,EAAE;IACtBuB,OAAA,CAAKnB,gBAAgB,GAAG,EAAE;IAAC,OAAAmB,OAAA;EAC7B;EAAC3/D,YAAA,CAAAw/D,iBAAA;IAAAv/D,GAAA;IAAAC,KAAA,EACD,SAAAm+B,cAAA,EAAgB;MACd,IAAMj9B,EAAE,GAAG,IAAI;MACfA,EAAE,CAACkb,KAAK,GAAGlb,EAAE,CAAC6gB,QAAQ;MACtB7gB,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAAC8gB,SAAS;MACxB9gB,EAAE,CAACo7B,UAAU,GAAGkhC,qBAAqB,CAACt8D,EAAE,CAACkH,OAAO,CAAC,GAAG,CAAC;MACrDlH,EAAE,CAAComB,OAAO,GAAGxmB,IAAI,CAACoE,KAAK,CAAChE,EAAE,CAACkb,KAAK,GAAG,CAAC,CAAC;MACrClb,EAAE,CAACqmB,OAAO,GAAGzmB,IAAI,CAACoE,KAAK,CAAC,CAAChE,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAACo7B,UAAU,IAAI,CAAC,CAAC;MACxDp7B,EAAE,CAAC88D,WAAW,GAAGl9D,IAAI,CAACC,GAAG,CAACG,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAACo7B,UAAU,EAAEp7B,EAAE,CAACkb,KAAK,CAAC,GAAG,CAAC;IACpE;EAAC;IAAArc,GAAA;IAAAC,KAAA,EACD,SAAAs+B,oBAAA,EAAsB;MACpB,IAAMp9B,EAAE,GAAG,IAAI;MACf,IAAAw+D,cAAA,GAAmBx+D,EAAE,CAAC6S,SAAS,CAAC,KAAK,CAAC;QAA/BhT,GAAG,GAAA2+D,cAAA,CAAH3+D,GAAG;QAAEsC,GAAG,GAAAq8D,cAAA,CAAHr8D,GAAG;MACfnC,EAAE,CAACH,GAAG,GAAGpM,cAAc,CAACoM,GAAG,CAAC,IAAI,CAAC0b,KAAK,CAAC1b,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACrDG,EAAE,CAACmC,GAAG,GAAG1O,cAAc,CAAC0O,GAAG,CAAC,IAAI,CAACoZ,KAAK,CAACpZ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC;MACrDnC,EAAE,CAACy6D,sBAAsB,EAAE;IAC7B;EAAC;IAAA57D,GAAA;IAAAC,KAAA,EACD,SAAAm8D,iBAAA,EAAmB;MACjB,OAAOr7D,IAAI,CAACo5B,IAAI,CAAC,IAAI,CAAC8jC,WAAW,GAAGR,qBAAqB,CAAC,IAAI,CAACp1D,OAAO,CAAC,CAAC;IAC1E;EAAC;IAAArI,GAAA;IAAAC,KAAA,EACD,SAAA6/B,mBAAmB/mB,KAAK,EAAE;MACxB,IAAM5X,EAAE,GAAG,IAAI;MACfo6D,eAAe,CAACpjD,SAAS,CAAC2nB,kBAAkB,CAAC1+B,IAAI,CAACD,EAAE,EAAE4X,KAAK,CAAC;MAC5D5X,EAAE,CAACg9D,YAAY,GAAGh9D,EAAE,CAAC8R,SAAS,EAAE,CAAC2Q,GAAG,CAAC,UAAC3jB,KAAK,EAAEqK,KAAK,EAAK;QACrD,IAAMoK,KAAK,GAAGpc,QAAQ,CAAC6I,EAAE,CAACkH,OAAO,CAAC8f,WAAW,CAAC7vB,QAAQ,EAAE,CAAC2H,KAAK,EAAEqK,KAAK,CAAC,EAAEnJ,EAAE,CAAC;QAC3E,OAAOuT,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE;MAC1C,CAAC,CAAC;IACJ;EAAC;IAAA1U,GAAA;IAAAC,KAAA,EACD,SAAAk/B,IAAA,EAAM;MACJ,IAAMh+B,EAAE,GAAG,IAAI;MACf,IAAMkI,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAIgB,IAAI,CAAC4e,OAAO,IAAI5e,IAAI,CAAC8e,WAAW,CAACF,OAAO,EAAE;QAC5C21C,kBAAkB,CAACz8D,EAAE,CAAC;MACxB,CAAC,MAAM;QACLA,EAAE,CAACy+D,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC/B;IACF;EAAC;IAAA5/D,GAAA;IAAAC,KAAA,EACD,SAAAq+D,eAAeuB,qBAAqB,EAAEhC,cAAc,EAAEC,cAAc,EAAE;MACpE,IAAM38D,EAAE,GAAG,IAAI;MACf,IAAI2+D,mBAAmB,GAAGjC,cAAc,CAACtpE,CAAC,GAAGwM,IAAI,CAACof,GAAG,CAAC29C,cAAc,CAACvpE,CAAC,CAAC;MACvE,IAAIwrE,oBAAoB,GAAGh/D,IAAI,CAACuC,GAAG,CAACu6D,cAAc,CAACxqE,CAAC,GAAG8N,EAAE,CAACkb,KAAK,EAAE,CAAC,CAAC,GAAGtb,IAAI,CAACof,GAAG,CAAC29C,cAAc,CAACzqE,CAAC,CAAC;MAChG,IAAI2sE,kBAAkB,GAAG,CAACnC,cAAc,CAACxoE,CAAC,GAAG0L,IAAI,CAACkf,GAAG,CAAC69C,cAAc,CAACzoE,CAAC,CAAC;MACvE,IAAI4qE,qBAAqB,GAAG,CAACl/D,IAAI,CAACuC,GAAG,CAACu6D,cAAc,CAAC9pE,CAAC,IAAIoN,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAACo7B,UAAU,CAAC,EAAE,CAAC,CAAC,GAAGx7B,IAAI,CAACkf,GAAG,CAAC69C,cAAc,CAAC/pE,CAAC,CAAC;MACrH+rE,mBAAmB,GAAGT,YAAY,CAACS,mBAAmB,CAAC;MACvDC,oBAAoB,GAAGV,YAAY,CAACU,oBAAoB,CAAC;MACzDC,kBAAkB,GAAGX,YAAY,CAACW,kBAAkB,CAAC;MACrDC,qBAAqB,GAAGZ,YAAY,CAACY,qBAAqB,CAAC;MAC3D9+D,EAAE,CAAC88D,WAAW,GAAGl9D,IAAI,CAACuC,GAAG,CAACu8D,qBAAqB,GAAG,CAAC,EAAE9+D,IAAI,CAACC,GAAG,CAC3DD,IAAI,CAACoE,KAAK,CAAC06D,qBAAqB,GAAG,CAACC,mBAAmB,GAAGC,oBAAoB,IAAI,CAAC,CAAC,EACpFh/D,IAAI,CAACoE,KAAK,CAAC06D,qBAAqB,GAAG,CAACG,kBAAkB,GAAGC,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC;MACxF9+D,EAAE,CAACy+D,cAAc,CAACE,mBAAmB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,qBAAqB,CAAC;IACzG;EAAC;IAAAjgE,GAAA;IAAAC,KAAA,EACD,SAAA2/D,eAAeM,YAAY,EAAEC,aAAa,EAAEC,WAAW,EAAEC,cAAc,EAAE;MACvE,IAAMl/D,EAAE,GAAG,IAAI;MACf,IAAMm/D,QAAQ,GAAGn/D,EAAE,CAACkb,KAAK,GAAG8jD,aAAa,GAAGh/D,EAAE,CAAC88D,WAAW;MAC1D,IAAMsC,OAAO,GAAGL,YAAY,GAAG/+D,EAAE,CAAC88D,WAAW;MAC7C,IAAMuC,MAAM,GAAGJ,WAAW,GAAGj/D,EAAE,CAAC88D,WAAW;MAC3C,IAAMwC,SAAS,GAAIt/D,EAAE,CAACib,MAAM,GAAGjb,EAAE,CAACo7B,UAAU,GAAI8jC,cAAc,GAAGl/D,EAAE,CAAC88D,WAAW;MAC/E98D,EAAE,CAAComB,OAAO,GAAGxmB,IAAI,CAACoE,KAAK,CAAE,CAACo7D,OAAO,GAAGD,QAAQ,IAAI,CAAC,GAAIn/D,EAAE,CAAC2I,IAAI,CAAC;MAC7D3I,EAAE,CAACqmB,OAAO,GAAGzmB,IAAI,CAACoE,KAAK,CAAE,CAACq7D,MAAM,GAAGC,SAAS,IAAI,CAAC,GAAIt/D,EAAE,CAACwI,GAAG,GAAGxI,EAAE,CAACo7B,UAAU,CAAC;IAC9E;EAAC;IAAAv8B,GAAA;IAAAC,KAAA,EACD,SAAAynB,cAAcpd,KAAK,EAAE;MACnB,IAAMo2D,eAAe,GAAG9qE,GAAG,GAAG,IAAI,CAACqd,SAAS,EAAE,CAACzR,MAAM;MACrD,IAAMse,UAAU,GAAG,IAAI,CAACzX,OAAO,CAACyX,UAAU,IAAI,CAAC;MAC/C,OAAOpiB,eAAe,CAAC4M,KAAK,GAAGo2D,eAAe,GAAGprE,SAAS,CAACwqB,UAAU,CAAC,CAAC;IACzE;EAAC;IAAA9f,GAAA;IAAAC,KAAA,EACD,SAAA6nB,8BAA8B7nB,KAAK,EAAE;MACnC,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAIjM,aAAa,CAAC+K,KAAK,CAAC,EAAE;QACxB,OAAO8T,GAAG;MACZ;MACA,IAAM4sD,aAAa,GAAGx/D,EAAE,CAAC88D,WAAW,IAAI98D,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC;MACxD,IAAIG,EAAE,CAACkH,OAAO,CAACiB,OAAO,EAAE;QACtB,OAAO,CAACnI,EAAE,CAACmC,GAAG,GAAGrD,KAAK,IAAI0gE,aAAa;MACzC;MACA,OAAO,CAAC1gE,KAAK,GAAGkB,EAAE,CAACH,GAAG,IAAI2/D,aAAa;IACzC;EAAC;IAAA3gE,GAAA;IAAAC,KAAA,EACD,SAAA2gE,8BAA8Bt0C,QAAQ,EAAE;MACtC,IAAIp3B,aAAa,CAACo3B,QAAQ,CAAC,EAAE;QAC3B,OAAOvY,GAAG;MACZ;MACA,IAAM5S,EAAE,GAAG,IAAI;MACf,IAAM0/D,cAAc,GAAGv0C,QAAQ,IAAInrB,EAAE,CAAC88D,WAAW,IAAI98D,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC,CAAC;MACtE,OAAOG,EAAE,CAACkH,OAAO,CAACiB,OAAO,GAAGnI,EAAE,CAACmC,GAAG,GAAGu9D,cAAc,GAAG1/D,EAAE,CAACH,GAAG,GAAG6/D,cAAc;IAC/E;EAAC;IAAA7gE,GAAA;IAAAC,KAAA,EACD,SAAA+9D,iBAAiB1zD,KAAK,EAAEw2D,kBAAkB,EAAE;MAC1C,IAAM3/D,EAAE,GAAG,IAAI;MACf,IAAMof,KAAK,GAAGpf,EAAE,CAACumB,aAAa,CAACpd,KAAK,CAAC,GAAGpU,OAAO;MAC/C,OAAO;QACLS,CAAC,EAAEoK,IAAI,CAACkf,GAAG,CAACM,KAAK,CAAC,GAAGugD,kBAAkB,GAAG3/D,EAAE,CAAComB,OAAO;QACpD1wB,CAAC,EAAEkK,IAAI,CAACof,GAAG,CAACI,KAAK,CAAC,GAAGugD,kBAAkB,GAAG3/D,EAAE,CAACqmB,OAAO;QACpDjH,KAAK,EAALA;MACF,CAAC;IACH;EAAC;IAAAvgB,GAAA;IAAAC,KAAA,EACD,SAAA2oB,yBAAyBte,KAAK,EAAErK,KAAK,EAAE;MACrC,OAAO,IAAI,CAAC+9D,gBAAgB,CAAC1zD,KAAK,EAAE,IAAI,CAACwd,6BAA6B,CAAC7nB,KAAK,CAAC,CAAC;IAChF;EAAC;IAAAD,GAAA;IAAAC,KAAA,EACD,SAAA8gE,gBAAgBz2D,KAAK,EAAE;MACrB,OAAO,IAAI,CAACse,wBAAwB,CAACte,KAAK,IAAI,CAAC,EAAE,IAAI,CAACu4B,YAAY,EAAE,CAAC;IACvE;EAAC;IAAA7iC,GAAA;IAAAC,KAAA,EACD,SAAA+gE,sBAAsB12D,KAAK,EAAE;MAC3B,IAAA22D,qBAAA,GAAmC,IAAI,CAAC1C,gBAAgB,CAACj0D,KAAK,CAAC;QAAxDR,IAAI,GAAAm3D,qBAAA,CAAJn3D,IAAI;QAAEH,GAAG,GAAAs3D,qBAAA,CAAHt3D,GAAG;QAAEC,KAAK,GAAAq3D,qBAAA,CAALr3D,KAAK;QAAEC,MAAM,GAAAo3D,qBAAA,CAANp3D,MAAM;MAC/B,OAAO;QACLC,IAAI,EAAJA,IAAI;QACJH,GAAG,EAAHA,GAAG;QACHC,KAAK,EAALA,KAAK;QACLC,MAAM,EAANA;MACF,CAAC;IACH;EAAC;IAAA7J,GAAA;IAAAC,KAAA,EACD,SAAA0lC,eAAA,EAAiB;MACf,IAAMxkC,EAAE,GAAG,IAAI;MACf,IAAA+/D,YAAA,GAA4C//D,EAAE,CAACkH,OAAO;QAA/C2b,eAAe,GAAAk9C,YAAA,CAAfl9C,eAAe;QAASkE,QAAQ,GAAAg5C,YAAA,CAAfjjD,IAAI,CAAGiK,QAAQ;MACvC,IAAIlE,eAAe,EAAE;QACnB,IAAM/U,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;QAClBA,GAAG,CAAC22B,IAAI,EAAE;QACV32B,GAAG,CAACq3B,SAAS,EAAE;QACf44B,cAAc,CAAC/9D,EAAE,EAAEA,EAAE,CAAC2mB,6BAA6B,CAAC3mB,EAAE,CAACw6D,SAAS,CAAC,EAAEzzC,QAAQ,EAAE/mB,EAAE,CAAC8R,SAAS,EAAE,CAACzR,MAAM,CAAC;QACnGyN,GAAG,CAACipC,SAAS,EAAE;QACfjpC,GAAG,CAAC8U,SAAS,GAAGC,eAAe;QAC/B/U,GAAG,CAAC4Z,IAAI,EAAE;QACV5Z,GAAG,CAAC62B,OAAO,EAAE;MACf;IACF;EAAC;IAAA9lC,GAAA;IAAAC,KAAA,EACD,SAAA+lC,SAAA,EAAW;MACT,IAAM7kC,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM5F,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAO2f,UAAU,GAAU3e,IAAI,CAAxB2e,UAAU;QAAE/J,IAAI,GAAI5U,IAAI,CAAZ4U,IAAI;MACvB,IAAMk7C,UAAU,GAAGh4D,EAAE,CAAC8R,SAAS,EAAE,CAACzR,MAAM;MACxC,IAAI3N,CAAC,EAAEmqB,MAAM,EAAEiN,QAAQ;MACvB,IAAI5hB,IAAI,CAAC8e,WAAW,CAACF,OAAO,EAAE;QAC5B+2C,eAAe,CAAC79D,EAAE,EAAEg4D,UAAU,CAAC;MACjC;MACA,IAAIl7C,IAAI,CAACgK,OAAO,EAAE;QAChB9mB,EAAE,CAAC4X,KAAK,CAACpY,OAAO,CAAC,UAACuB,IAAI,EAAEoI,KAAK,EAAK;UAChC,IAAIA,KAAK,KAAK,CAAC,EAAE;YACf0T,MAAM,GAAG7c,EAAE,CAAC2mB,6BAA6B,CAAC5lB,IAAI,CAACjC,KAAK,CAAC;YACrD,IAAMmkC,WAAW,GAAGnmB,IAAI,CAACwf,UAAU,CAACt8B,EAAE,CAACkR,UAAU,CAAC/H,KAAK,GAAG,CAAC,CAAC,CAAC;YAC7D60D,cAAc,CAACh+D,EAAE,EAAEijC,WAAW,EAAEpmB,MAAM,EAAEm7C,UAAU,CAAC;UACrD;QACF,CAAC,CAAC;MACJ;MACA,IAAInxC,UAAU,CAACC,OAAO,EAAE;QACtBhZ,GAAG,CAAC22B,IAAI,EAAE;QACV,KAAK/xC,CAAC,GAAGsN,EAAE,CAAC8R,SAAS,EAAE,CAACzR,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC/C,IAAMuwC,WAAW,GAAGpc,UAAU,CAACyV,UAAU,CAACt8B,EAAE,CAACkR,UAAU,CAACxe,CAAC,CAAC,CAAC;UAC3D,IAAOD,KAAK,GAAewwC,WAAW,CAA/BxwC,KAAK;YAAEuwB,SAAS,GAAIigB,WAAW,CAAxBjgB,SAAS;UACvB,IAAI,CAACA,SAAS,IAAI,CAACvwB,KAAK,EAAE;YACxB;UACF;UACAqb,GAAG,CAACkV,SAAS,GAAGA,SAAS;UACzBlV,GAAG,CAACgV,WAAW,GAAGrwB,KAAK;UACvBqb,GAAG,CAACm3B,WAAW,CAAChC,WAAW,CAAC1M,UAAU,CAAC;UACvCzoB,GAAG,CAACo3B,cAAc,GAAGjC,WAAW,CAACzM,gBAAgB;UACjD3Z,MAAM,GAAG7c,EAAE,CAAC2mB,6BAA6B,CAACze,IAAI,CAAC0P,KAAK,CAACzP,OAAO,GAAGnI,EAAE,CAACH,GAAG,GAAGG,EAAE,CAACmC,GAAG,CAAC;UAC/E2nB,QAAQ,GAAG9pB,EAAE,CAAC68D,gBAAgB,CAACnqE,CAAC,EAAEmqB,MAAM,CAAC;UACzC/O,GAAG,CAACq3B,SAAS,EAAE;UACfr3B,GAAG,CAACs3B,MAAM,CAACplC,EAAE,CAAComB,OAAO,EAAEpmB,EAAE,CAACqmB,OAAO,CAAC;UAClCvY,GAAG,CAACu3B,MAAM,CAACvb,QAAQ,CAACt0B,CAAC,EAAEs0B,QAAQ,CAACp0B,CAAC,CAAC;UAClCoY,GAAG,CAACw3B,MAAM,EAAE;QACd;QACAx3B,GAAG,CAAC62B,OAAO,EAAE;MACf;IACF;EAAC;IAAA9lC,GAAA;IAAAC,KAAA,EACD,SAAAm3B,WAAA,EAAa,CAAC;EAAC;IAAAp3B,GAAA;IAAAC,KAAA,EACf,SAAA0mC,WAAA,EAAa;MACX,IAAMxlC,EAAE,GAAG,IAAI;MACf,IAAM8N,GAAG,GAAG9N,EAAE,CAAC8N,GAAG;MAClB,IAAM5F,IAAI,GAAGlI,EAAE,CAACkH,OAAO;MACvB,IAAMwwB,QAAQ,GAAGxvB,IAAI,CAAC0P,KAAK;MAC3B,IAAI,CAAC8f,QAAQ,CAAC5Q,OAAO,EAAE;QACrB;MACF;MACA,IAAMnI,UAAU,GAAG3e,EAAE,CAACumB,aAAa,CAAC,CAAC,CAAC;MACtC,IAAI1J,MAAM,EAAE3B,KAAK;MACjBpN,GAAG,CAAC22B,IAAI,EAAE;MACV32B,GAAG,CAAC4sC,SAAS,CAAC16C,EAAE,CAAComB,OAAO,EAAEpmB,EAAE,CAACqmB,OAAO,CAAC;MACrCvY,GAAG,CAACkyD,MAAM,CAACrhD,UAAU,CAAC;MACtB7Q,GAAG,CAAC01B,SAAS,GAAG,QAAQ;MACxB11B,GAAG,CAAC61B,YAAY,GAAG,QAAQ;MAC3B3jC,EAAE,CAAC4X,KAAK,CAACpY,OAAO,CAAC,UAACuB,IAAI,EAAEoI,KAAK,EAAK;QAChC,IAAIA,KAAK,KAAK,CAAC,IAAI,CAACjB,IAAI,CAACC,OAAO,EAAE;UAChC;QACF;QACA,IAAM86B,WAAW,GAAGvL,QAAQ,CAAC4E,UAAU,CAACt8B,EAAE,CAACkR,UAAU,CAAC/H,KAAK,CAAC,CAAC;QAC7D,IAAM43B,QAAQ,GAAG1oC,MAAM,CAAC4qC,WAAW,CAAC3I,IAAI,CAAC;QACzCzd,MAAM,GAAG7c,EAAE,CAAC2mB,6BAA6B,CAAC3mB,EAAE,CAAC4X,KAAK,CAACzO,KAAK,CAAC,CAACrK,KAAK,CAAC;QAChE,IAAImkC,WAAW,CAAC5L,iBAAiB,EAAE;UACjCvpB,GAAG,CAACwsB,IAAI,GAAGyG,QAAQ,CAACI,MAAM;UAC1BjmB,KAAK,GAAGpN,GAAG,CAACu9C,WAAW,CAACtqD,IAAI,CAACwS,KAAK,CAAC,CAAC2H,KAAK;UACzCpN,GAAG,CAAC8U,SAAS,GAAGqgB,WAAW,CAAC3L,aAAa;UACzC,IAAMrI,OAAO,GAAGl5B,SAAS,CAACktC,WAAW,CAAC1L,eAAe,CAAC;UACtDzpB,GAAG,CAAC42B,QAAQ,CACV,CAACxpB,KAAK,GAAG,CAAC,GAAG+T,OAAO,CAACtmB,IAAI,EACzB,CAACkU,MAAM,GAAGkkB,QAAQ,CAACp5B,IAAI,GAAG,CAAC,GAAGsnB,OAAO,CAACzmB,GAAG,EACzC0S,KAAK,GAAG+T,OAAO,CAAC/T,KAAK,EACrB6lB,QAAQ,CAACp5B,IAAI,GAAGsnB,OAAO,CAAChU,MAAM,CAC/B;QACH;QACAhjB,UAAU,CAAC6V,GAAG,EAAE/M,IAAI,CAACwS,KAAK,EAAE,CAAC,EAAE,CAACsJ,MAAM,EAAEkkB,QAAQ,EAAE;UAChDtuC,KAAK,EAAEwwC,WAAW,CAACxwC;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC;MACFqb,GAAG,CAAC62B,OAAO,EAAE;IACf;EAAC;IAAA9lC,GAAA;IAAAC,KAAA,EACD,SAAA2mC,UAAA,EAAY,CAAC;EAAC;EAAA,OAAA24B,iBAAA;AAAA,EArNgBhE,eAAe;AAuN/CgE,iBAAiB,CAAC9zD,EAAE,GAAG,cAAc;AACrC8zD,iBAAiB,CAACrrE,QAAQ,GAAG;EAC3B+zB,OAAO,EAAE,IAAI;EACbm5C,OAAO,EAAE,IAAI;EACbn2C,QAAQ,EAAE,WAAW;EACrBjD,UAAU,EAAE;IACVC,OAAO,EAAE,IAAI;IACb9D,SAAS,EAAE,CAAC;IACZuT,UAAU,EAAE,EAAE;IACdC,gBAAgB,EAAE;EACpB,CAAC;EACD1Z,IAAI,EAAE;IACJiK,QAAQ,EAAE;EACZ,CAAC;EACDpI,UAAU,EAAE,CAAC;EACb/G,KAAK,EAAE;IACLyf,iBAAiB,EAAE,IAAI;IACvBlgC,QAAQ,EAAE2+B,KAAK,CAACZ,UAAU,CAACC;EAC7B,CAAC;EACDnO,WAAW,EAAE;IACXsQ,aAAa,EAAE34B,SAAS;IACxB44B,eAAe,EAAE,CAAC;IAClBzQ,OAAO,EAAE,IAAI;IACbwT,IAAI,EAAE;MACJ3yB,IAAI,EAAE;IACR,CAAC;IACDxQ,QAAQ,WAAAA,SAACoc,KAAK,EAAE;MACd,OAAOA,KAAK;IACd,CAAC;IACD0b,OAAO,EAAE;EACX;AACF,CAAC;AACDmvC,iBAAiB,CAACnpC,aAAa,GAAG;EAChC,kBAAkB,EAAE,aAAa;EACjC,mBAAmB,EAAE,OAAO;EAC5B,aAAa,EAAE;AACjB,CAAC;AACDmpC,iBAAiB,CAACnlE,WAAW,GAAG;EAC9B4tB,UAAU,EAAE;IACVlhB,SAAS,EAAE;EACb;AACF,CAAC;AAED,IAAMu6D,SAAS,GAAG;EAChBC,WAAW,EAAE;IAACC,MAAM,EAAE,IAAI;IAAEz4D,IAAI,EAAE,CAAC;IAAE04D,KAAK,EAAE;EAAI,CAAC;EACjDC,MAAM,EAAE;IAACF,MAAM,EAAE,IAAI;IAAEz4D,IAAI,EAAE,IAAI;IAAE04D,KAAK,EAAE;EAAE,CAAC;EAC7CE,MAAM,EAAE;IAACH,MAAM,EAAE,IAAI;IAAEz4D,IAAI,EAAE,KAAK;IAAE04D,KAAK,EAAE;EAAE,CAAC;EAC9CG,IAAI,EAAE;IAACJ,MAAM,EAAE,IAAI;IAAEz4D,IAAI,EAAE,OAAO;IAAE04D,KAAK,EAAE;EAAE,CAAC;EAC9CI,GAAG,EAAE;IAACL,MAAM,EAAE,IAAI;IAAEz4D,IAAI,EAAE,QAAQ;IAAE04D,KAAK,EAAE;EAAE,CAAC;EAC9CK,IAAI,EAAE;IAACN,MAAM,EAAE,KAAK;IAAEz4D,IAAI,EAAE,SAAS;IAAE04D,KAAK,EAAE;EAAC,CAAC;EAChDM,KAAK,EAAE;IAACP,MAAM,EAAE,IAAI;IAAEz4D,IAAI,EAAE,OAAO;IAAE04D,KAAK,EAAE;EAAE,CAAC;EAC/CO,OAAO,EAAE;IAACR,MAAM,EAAE,KAAK;IAAEz4D,IAAI,EAAE,OAAO;IAAE04D,KAAK,EAAE;EAAC,CAAC;EACjDQ,IAAI,EAAE;IAACT,MAAM,EAAE,IAAI;IAAEz4D,IAAI,EAAE;EAAQ;AACrC,CAAC;AACD,IAAMm5D,KAAK,GAAIv7D,MAAM,CAACC,IAAI,CAAC06D,SAAS,CAAE;AACtC,SAASa,MAAMA,CAAC3uE,CAAC,EAAEQ,CAAC,EAAE;EACpB,OAAOR,CAAC,GAAGQ,CAAC;AACd;AACA,SAASwe,MAAKA,CAACpJ,KAAK,EAAEg5D,KAAK,EAAE;EAC3B,IAAIjtE,aAAa,CAACitE,KAAK,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EACA,IAAMC,OAAO,GAAGj5D,KAAK,CAACk5D,QAAQ;EAC9B,IAAAC,iBAAA,GAAoCn5D,KAAK,CAACo5D,UAAU;IAA7CC,MAAM,GAAAF,iBAAA,CAANE,MAAM;IAAE9oC,KAAK,GAAA4oC,iBAAA,CAAL5oC,KAAK;IAAE+oC,UAAU,GAAAH,iBAAA,CAAVG,UAAU;EAChC,IAAIxiE,KAAK,GAAGkiE,KAAK;EACjB,IAAI,OAAOK,MAAM,KAAK,UAAU,EAAE;IAChCviE,KAAK,GAAGuiE,MAAM,CAACviE,KAAK,CAAC;EACvB;EACA,IAAI,CAACrL,cAAc,CAACqL,KAAK,CAAC,EAAE;IAC1BA,KAAK,GAAG,OAAOuiE,MAAM,KAAK,QAAQ,GAC9BJ,OAAO,CAAC7vD,KAAK,CAACtS,KAAK,EAAEuiE,MAAM,CAAC,GAC5BJ,OAAO,CAAC7vD,KAAK,CAACtS,KAAK,CAAC;EAC1B;EACA,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAIy5B,KAAK,EAAE;IACTz5B,KAAK,GAAGy5B,KAAK,KAAK,MAAM,KAAKpjC,QAAQ,CAACmsE,UAAU,CAAC,IAAIA,UAAU,KAAK,IAAI,CAAC,GACrEL,OAAO,CAACx4C,OAAO,CAAC3pB,KAAK,EAAE,SAAS,EAAEwiE,UAAU,CAAC,GAC7CL,OAAO,CAACx4C,OAAO,CAAC3pB,KAAK,EAAEy5B,KAAK,CAAC;EACnC;EACA,OAAO,CAACz5B,KAAK;AACf;AACA,SAASyiE,yBAAyBA,CAACC,OAAO,EAAE3hE,GAAG,EAAEsC,GAAG,EAAEs/D,QAAQ,EAAE;EAC9D,IAAMv4D,IAAI,GAAG43D,KAAK,CAACzgE,MAAM;EACzB,KAAK,IAAI3N,CAAC,GAAGouE,KAAK,CAACtlD,OAAO,CAACgmD,OAAO,CAAC,EAAE9uE,CAAC,GAAGwW,IAAI,GAAG,CAAC,EAAE,EAAExW,CAAC,EAAE;IACtD,IAAMgvE,QAAQ,GAAGxB,SAAS,CAACY,KAAK,CAACpuE,CAAC,CAAC,CAAC;IACpC,IAAMqQ,MAAM,GAAG2+D,QAAQ,CAACrB,KAAK,GAAGqB,QAAQ,CAACrB,KAAK,GAAG11D,MAAM,CAACg3D,gBAAgB;IACxE,IAAID,QAAQ,CAACtB,MAAM,IAAIxgE,IAAI,CAACo5B,IAAI,CAAC,CAAC72B,GAAG,GAAGtC,GAAG,KAAKkD,MAAM,GAAG2+D,QAAQ,CAAC/5D,IAAI,CAAC,CAAC,IAAI85D,QAAQ,EAAE;MACpF,OAAOX,KAAK,CAACpuE,CAAC,CAAC;IACjB;EACF;EACA,OAAOouE,KAAK,CAAC53D,IAAI,GAAG,CAAC,CAAC;AACxB;AACA,SAAS04D,0BAA0BA,CAAC55D,KAAK,EAAE62B,QAAQ,EAAE2iC,OAAO,EAAE3hE,GAAG,EAAEsC,GAAG,EAAE;EACtE,KAAK,IAAIzP,CAAC,GAAGouE,KAAK,CAACzgE,MAAM,GAAG,CAAC,EAAE3N,CAAC,IAAIouE,KAAK,CAACtlD,OAAO,CAACgmD,OAAO,CAAC,EAAE9uE,CAAC,EAAE,EAAE;IAC/D,IAAM61B,IAAI,GAAGu4C,KAAK,CAACpuE,CAAC,CAAC;IACrB,IAAIwtE,SAAS,CAAC33C,IAAI,CAAC,CAAC63C,MAAM,IAAIp4D,KAAK,CAACk5D,QAAQ,CAAC14C,IAAI,CAACrmB,GAAG,EAAEtC,GAAG,EAAE0oB,IAAI,CAAC,IAAIsW,QAAQ,GAAG,CAAC,EAAE;MACjF,OAAOtW,IAAI;IACb;EACF;EACA,OAAOu4C,KAAK,CAACU,OAAO,GAAGV,KAAK,CAACtlD,OAAO,CAACgmD,OAAO,CAAC,GAAG,CAAC,CAAC;AACpD;AACA,SAASK,kBAAkBA,CAACt5C,IAAI,EAAE;EAChC,KAAK,IAAI71B,CAAC,GAAGouE,KAAK,CAACtlD,OAAO,CAAC+M,IAAI,CAAC,GAAG,CAAC,EAAErf,IAAI,GAAG43D,KAAK,CAACzgE,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACxE,IAAIwtE,SAAS,CAACY,KAAK,CAACpuE,CAAC,CAAC,CAAC,CAAC0tE,MAAM,EAAE;MAC9B,OAAOU,KAAK,CAACpuE,CAAC,CAAC;IACjB;EACF;AACF;AACA,SAASovE,OAAOA,CAAClqD,KAAK,EAAEmqD,IAAI,EAAEC,UAAU,EAAE;EACxC,IAAI,CAACA,UAAU,EAAE;IACfpqD,KAAK,CAACmqD,IAAI,CAAC,GAAG,IAAI;EACpB,CAAC,MAAM,IAAIC,UAAU,CAAC3hE,MAAM,EAAE;IAC5B,IAAA4hE,QAAA,GAAiB9jE,OAAO,CAAC6jE,UAAU,EAAED,IAAI,CAAC;MAAnC58C,EAAE,GAAA88C,QAAA,CAAF98C,EAAE;MAAEC,EAAE,GAAA68C,QAAA,CAAF78C,EAAE;IACb,IAAMiD,SAAS,GAAG25C,UAAU,CAAC78C,EAAE,CAAC,IAAI48C,IAAI,GAAGC,UAAU,CAAC78C,EAAE,CAAC,GAAG68C,UAAU,CAAC58C,EAAE,CAAC;IAC1ExN,KAAK,CAACyQ,SAAS,CAAC,GAAG,IAAI;EACzB;AACF;AACA,SAAS65C,aAAaA,CAACl6D,KAAK,EAAE4P,KAAK,EAAE6K,GAAG,EAAE0/C,SAAS,EAAE;EACnD,IAAMlB,OAAO,GAAGj5D,KAAK,CAACk5D,QAAQ;EAC9B,IAAMhpC,KAAK,GAAG,CAAC+oC,OAAO,CAACx4C,OAAO,CAAC7Q,KAAK,CAAC,CAAC,CAAC,CAAC9Y,KAAK,EAAEqjE,SAAS,CAAC;EACzD,IAAM/mD,IAAI,GAAGxD,KAAK,CAACA,KAAK,CAACvX,MAAM,GAAG,CAAC,CAAC,CAACvB,KAAK;EAC1C,IAAIo4B,KAAK,EAAE/tB,KAAK;EAChB,KAAK+tB,KAAK,GAAGgB,KAAK,EAAEhB,KAAK,IAAI9b,IAAI,EAAE8b,KAAK,GAAG,CAAC+pC,OAAO,CAACt/D,GAAG,CAACu1B,KAAK,EAAE,CAAC,EAAEirC,SAAS,CAAC,EAAE;IAC5Eh5D,KAAK,GAAGsZ,GAAG,CAACyU,KAAK,CAAC;IAClB,IAAI/tB,KAAK,IAAI,CAAC,EAAE;MACdyO,KAAK,CAACzO,KAAK,CAAC,CAAC+tB,KAAK,GAAG,IAAI;IAC3B;EACF;EACA,OAAOtf,KAAK;AACd;AACA,SAASwqD,mBAAmBA,CAACp6D,KAAK,EAAEhB,MAAM,EAAEm7D,SAAS,EAAE;EACrD,IAAMvqD,KAAK,GAAG,EAAE;EAChB,IAAM6K,GAAG,GAAG,CAAC,CAAC;EACd,IAAMvZ,IAAI,GAAGlC,MAAM,CAAC3G,MAAM;EAC1B,IAAI3N,CAAC,EAAEoM,KAAK;EACZ,KAAKpM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;IACzBoM,KAAK,GAAGkI,MAAM,CAACtU,CAAC,CAAC;IACjB+vB,GAAG,CAAC3jB,KAAK,CAAC,GAAGpM,CAAC;IACdklB,KAAK,CAAClW,IAAI,CAAC;MACT5C,KAAK,EAALA,KAAK;MACLo4B,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EACA,OAAQhuB,IAAI,KAAK,CAAC,IAAI,CAACi5D,SAAS,GAAIvqD,KAAK,GAAGsqD,aAAa,CAACl6D,KAAK,EAAE4P,KAAK,EAAE6K,GAAG,EAAE0/C,SAAS,CAAC;AACzF;AAAC,IACKE,SAAS,0BAAAC,OAAA;EAAA9oD,SAAA,CAAA6oD,SAAA,EAAAC,OAAA;EAAA,IAAAC,QAAA,GAAA7oD,YAAA,CAAA2oD,SAAA;EACb,SAAAA,UAAY56D,KAAK,EAAE;IAAA,IAAA+6D,OAAA;IAAAnkE,eAAA,OAAAgkE,SAAA;IACjBG,OAAA,GAAAD,QAAA,CAAAtiE,IAAA,OAAMwH,KAAK;IACX+6D,OAAA,CAAKtrD,MAAM,GAAG;MACZtN,IAAI,EAAE,EAAE;MACRiI,MAAM,EAAE,EAAE;MACV/J,GAAG,EAAE;IACP,CAAC;IACD06D,OAAA,CAAKC,KAAK,GAAG,KAAK;IAClBD,OAAA,CAAKE,UAAU,GAAG/jE,SAAS;IAC3B6jE,OAAA,CAAKG,QAAQ,GAAG,CAAC,CAAC;IAClBH,OAAA,CAAKI,WAAW,GAAG,KAAK;IACxBJ,OAAA,CAAKpB,UAAU,GAAGziE,SAAS;IAAC,OAAA6jE,OAAA;EAC9B;EAAC5jE,YAAA,CAAAyjE,SAAA;IAAAxjE,GAAA;IAAAC,KAAA,EACD,SAAAu9B,KAAKkW,SAAS,EAAErqC,IAAI,EAAE;MACpB,IAAM65D,IAAI,GAAGxvB,SAAS,CAACwvB,IAAI,KAAKxvB,SAAS,CAACwvB,IAAI,GAAG,CAAC,CAAC,CAAC;MACpD,IAAMd,OAAO,GAAG,IAAI,CAACC,QAAQ,GAAG,IAAIp4C,QAAQ,CAACC,KAAK,CAACwpB,SAAS,CAACzpB,QAAQ,CAAC5pB,IAAI,CAAC;MAC3EvF,OAAO,CAACooE,IAAI,CAACc,cAAc,EAAE5B,OAAO,CAAC94C,OAAO,EAAE,CAAC;MAC/C,IAAI,CAACi5C,UAAU,GAAG;QAChBC,MAAM,EAAEU,IAAI,CAACV,MAAM;QACnB9oC,KAAK,EAAEwpC,IAAI,CAACxpC,KAAK;QACjB+oC,UAAU,EAAES,IAAI,CAACT;MACnB,CAAC;MACDrnD,IAAA,CAAAC,eAAA,CAAAmoD,SAAA,CAAArrD,SAAA,iBAAA/W,IAAA,OAAWsyC,SAAS;MACpB,IAAI,CAACqwB,WAAW,GAAG16D,IAAI,CAAC46D,UAAU;IACpC;EAAC;IAAAjkE,GAAA;IAAAC,KAAA,EACD,SAAAsS,MAAMjE,GAAG,EAAEhE,KAAK,EAAE;MAChB,IAAIgE,GAAG,KAAKxO,SAAS,EAAE;QACrB,OAAO,IAAI;MACb;MACA,OAAOyS,MAAK,CAAC,IAAI,EAAEjE,GAAG,CAAC;IACzB;EAAC;IAAAtO,GAAA;IAAAC,KAAA,EACD,SAAA2wB,aAAA,EAAe;MACbxV,IAAA,CAAAC,eAAA,CAAAmoD,SAAA,CAAArrD,SAAA,yBAAA/W,IAAA;MACA,IAAI,CAACiX,MAAM,GAAG;QACZtN,IAAI,EAAE,EAAE;QACRiI,MAAM,EAAE,EAAE;QACV/J,GAAG,EAAE;MACP,CAAC;IACH;EAAC;IAAAjJ,GAAA;IAAAC,KAAA,EACD,SAAAs+B,oBAAA,EAAsB;MACpB,IAAMp9B,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAM+5D,OAAO,GAAGjhE,EAAE,CAACkhE,QAAQ;MAC3B,IAAM34C,IAAI,GAAGrhB,OAAO,CAAC66D,IAAI,CAACx5C,IAAI,IAAI,KAAK;MACvC,IAAAw6C,kBAAA,GAAyC/iE,EAAE,CAACuK,aAAa,EAAE;QAAtD1K,GAAG,GAAAkjE,kBAAA,CAAHljE,GAAG;QAAEsC,GAAG,GAAA4gE,kBAAA,CAAH5gE,GAAG;QAAEsI,UAAU,GAAAs4D,kBAAA,CAAVt4D,UAAU;QAAEC,UAAU,GAAAq4D,kBAAA,CAAVr4D,UAAU;MACrC,SAASs4D,YAAYA,CAACjtC,MAAM,EAAE;QAC5B,IAAI,CAACtrB,UAAU,IAAI,CAAC8Q,KAAK,CAACwa,MAAM,CAACl2B,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEk2B,MAAM,CAACl2B,GAAG,CAAC;QACjC;QACA,IAAI,CAAC6K,UAAU,IAAI,CAAC6Q,KAAK,CAACwa,MAAM,CAAC5zB,GAAG,CAAC,EAAE;UACrCA,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACA,GAAG,EAAE4zB,MAAM,CAAC5zB,GAAG,CAAC;QACjC;MACF;MACA,IAAI,CAACsI,UAAU,IAAI,CAACC,UAAU,EAAE;QAC9Bs4D,YAAY,CAAChjE,EAAE,CAACijE,eAAe,EAAE,CAAC;QAClC,IAAI/7D,OAAO,CAAC6uB,MAAM,KAAK,OAAO,IAAI7uB,OAAO,CAAC0Q,KAAK,CAACkmB,MAAM,KAAK,QAAQ,EAAE;UACnEklC,YAAY,CAAChjE,EAAE,CAAC6S,SAAS,CAAC,KAAK,CAAC,CAAC;QACnC;MACF;MACAhT,GAAG,GAAGpM,cAAc,CAACoM,GAAG,CAAC,IAAI,CAAC0b,KAAK,CAAC1b,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACohE,OAAO,CAACx4C,OAAO,CAACnoB,IAAI,CAACC,GAAG,EAAE,EAAEgoB,IAAI,CAAC;MACnFpmB,GAAG,GAAG1O,cAAc,CAAC0O,GAAG,CAAC,IAAI,CAACoZ,KAAK,CAACpZ,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC8+D,OAAO,CAACt4C,KAAK,CAACroB,IAAI,CAACC,GAAG,EAAE,EAAEgoB,IAAI,CAAC,GAAG,CAAC;MACrFvoB,EAAE,CAACH,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEsC,GAAG,GAAG,CAAC,CAAC;MAC/BnC,EAAE,CAACmC,GAAG,GAAGvC,IAAI,CAACuC,GAAG,CAACtC,GAAG,GAAG,CAAC,EAAEsC,GAAG,CAAC;IACjC;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAmkE,gBAAA,EAAkB;MAChB,IAAM1sD,GAAG,GAAG,IAAI,CAAC2sD,kBAAkB,EAAE;MACrC,IAAIrjE,GAAG,GAAG8K,MAAM,CAACE,iBAAiB;MAClC,IAAI1I,GAAG,GAAGwI,MAAM,CAACC,iBAAiB;MAClC,IAAI2L,GAAG,CAAClW,MAAM,EAAE;QACdR,GAAG,GAAG0W,GAAG,CAAC,CAAC,CAAC;QACZpU,GAAG,GAAGoU,GAAG,CAACA,GAAG,CAAClW,MAAM,GAAG,CAAC,CAAC;MAC3B;MACA,OAAO;QAACR,GAAG,EAAHA,GAAG;QAAEsC,GAAG,EAAHA;MAAG,CAAC;IACnB;EAAC;IAAAtD,GAAA;IAAAC,KAAA,EACD,SAAAy+B,WAAA,EAAa;MACX,IAAMv9B,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMi8D,QAAQ,GAAGj8D,OAAO,CAAC66D,IAAI;MAC7B,IAAMrqC,QAAQ,GAAGxwB,OAAO,CAAC0Q,KAAK;MAC9B,IAAMoqD,UAAU,GAAGtqC,QAAQ,CAACoG,MAAM,KAAK,QAAQ,GAAG99B,EAAE,CAACkjE,kBAAkB,EAAE,GAAGljE,EAAE,CAACojE,SAAS,EAAE;MAC1F,IAAIl8D,OAAO,CAAC6uB,MAAM,KAAK,OAAO,IAAIisC,UAAU,CAAC3hE,MAAM,EAAE;QACnDL,EAAE,CAACH,GAAG,GAAGG,EAAE,CAAC+7B,QAAQ,IAAIimC,UAAU,CAAC,CAAC,CAAC;QACrChiE,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAAC87B,QAAQ,IAAIkmC,UAAU,CAACA,UAAU,CAAC3hE,MAAM,GAAG,CAAC,CAAC;MAC3D;MACA,IAAMR,GAAG,GAAGG,EAAE,CAACH,GAAG;MAClB,IAAMsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAClB,IAAMyV,KAAK,GAAG3Z,cAAc,CAAC+jE,UAAU,EAAEniE,GAAG,EAAEsC,GAAG,CAAC;MAClDnC,EAAE,CAACyiE,KAAK,GAAGU,QAAQ,CAAC56C,IAAI,KAAKmP,QAAQ,CAACZ,QAAQ,GAC1CyqC,yBAAyB,CAAC4B,QAAQ,CAAC3B,OAAO,EAAExhE,EAAE,CAACH,GAAG,EAAEG,EAAE,CAACmC,GAAG,EAAEnC,EAAE,CAACqjE,iBAAiB,CAACxjE,GAAG,CAAC,CAAC,GACtF+hE,0BAA0B,CAAC5hE,EAAE,EAAE4X,KAAK,CAACvX,MAAM,EAAE8iE,QAAQ,CAAC3B,OAAO,EAAExhE,EAAE,CAACH,GAAG,EAAEG,EAAE,CAACmC,GAAG,CAAC,CAAC;MACnFnC,EAAE,CAAC0iE,UAAU,GAAG,CAAChrC,QAAQ,CAACR,KAAK,CAACa,OAAO,IAAI/3B,EAAE,CAACyiE,KAAK,KAAK,MAAM,GAAG9jE,SAAS,GACtEkjE,kBAAkB,CAAC7hE,EAAE,CAACyiE,KAAK,CAAC;MAChCziE,EAAE,CAACsjE,WAAW,CAACtB,UAAU,CAAC;MAC1B,IAAI96D,OAAO,CAACiB,OAAO,EAAE;QACnByP,KAAK,CAACzP,OAAO,EAAE;MACjB;MACA,OAAOi6D,mBAAmB,CAACpiE,EAAE,EAAE4X,KAAK,EAAE5X,EAAE,CAAC0iE,UAAU,CAAC;IACtD;EAAC;IAAA7jE,GAAA;IAAAC,KAAA,EACD,SAAAwkE,YAAYtB,UAAU,EAAE;MACtB,IAAMhiE,EAAE,GAAG,IAAI;MACf,IAAIF,KAAK,GAAG,CAAC;MACb,IAAIsI,GAAG,GAAG,CAAC;MACX,IAAI8vB,KAAK,EAAE9c,IAAI;MACf,IAAIpb,EAAE,CAACkH,OAAO,CAAC2V,MAAM,IAAImlD,UAAU,CAAC3hE,MAAM,EAAE;QAC1C63B,KAAK,GAAGl4B,EAAE,CAACujE,kBAAkB,CAACvB,UAAU,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAIA,UAAU,CAAC3hE,MAAM,KAAK,CAAC,EAAE;UAC3BP,KAAK,GAAG,CAAC,GAAGo4B,KAAK;QACnB,CAAC,MAAM;UACLp4B,KAAK,GAAG,CAACE,EAAE,CAACujE,kBAAkB,CAACvB,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG9pC,KAAK,IAAI,CAAC;QAC5D;QACA9c,IAAI,GAAGpb,EAAE,CAACujE,kBAAkB,CAACvB,UAAU,CAACA,UAAU,CAAC3hE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/D,IAAI2hE,UAAU,CAAC3hE,MAAM,KAAK,CAAC,EAAE;UAC3B+H,GAAG,GAAGgT,IAAI;QACZ,CAAC,MAAM;UACLhT,GAAG,GAAG,CAACgT,IAAI,GAAGpb,EAAE,CAACujE,kBAAkB,CAACvB,UAAU,CAACA,UAAU,CAAC3hE,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7E;MACF;MACA,IAAM0iC,KAAK,GAAGi/B,UAAU,CAAC3hE,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI;MAChDP,KAAK,GAAGzK,WAAW,CAACyK,KAAK,EAAE,CAAC,EAAEijC,KAAK,CAAC;MACpC36B,GAAG,GAAG/S,WAAW,CAAC+S,GAAG,EAAE,CAAC,EAAE26B,KAAK,CAAC;MAChC/iC,EAAE,CAAC2iE,QAAQ,GAAG;QAAC7iE,KAAK,EAALA,KAAK;QAAEsI,GAAG,EAAHA,GAAG;QAAErF,MAAM,EAAE,CAAC,IAAIjD,KAAK,GAAG,CAAC,GAAGsI,GAAG;MAAC,CAAC;IAC3D;EAAC;IAAAvJ,GAAA;IAAAC,KAAA,EACD,SAAAskE,UAAA,EAAY;MACV,IAAMpjE,EAAE,GAAG,IAAI;MACf,IAAMihE,OAAO,GAAGjhE,EAAE,CAACkhE,QAAQ;MAC3B,IAAMrhE,GAAG,GAAGG,EAAE,CAACH,GAAG;MAClB,IAAMsC,GAAG,GAAGnC,EAAE,CAACmC,GAAG;MAClB,IAAM+E,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMi8D,QAAQ,GAAGj8D,OAAO,CAAC66D,IAAI;MAC7B,IAAM9qC,KAAK,GAAGksC,QAAQ,CAAC56C,IAAI,IAAIg5C,yBAAyB,CAAC4B,QAAQ,CAAC3B,OAAO,EAAE3hE,GAAG,EAAEsC,GAAG,EAAEnC,EAAE,CAACqjE,iBAAiB,CAACxjE,GAAG,CAAC,CAAC;MAC/G,IAAMm7D,QAAQ,GAAG/nE,cAAc,CAACkwE,QAAQ,CAACnI,QAAQ,EAAE,CAAC,CAAC;MACrD,IAAMtyC,OAAO,GAAGuO,KAAK,KAAK,MAAM,GAAGksC,QAAQ,CAAC7B,UAAU,GAAG,KAAK;MAC9D,IAAMkC,UAAU,GAAGruE,QAAQ,CAACuzB,OAAO,CAAC,IAAIA,OAAO,KAAK,IAAI;MACxD,IAAM9Q,KAAK,GAAG,CAAC,CAAC;MAChB,IAAIsgB,KAAK,GAAGr4B,GAAG;MACf,IAAIkiE,IAAI,EAAE1wD,KAAK;MACf,IAAImyD,UAAU,EAAE;QACdtrC,KAAK,GAAG,CAAC+oC,OAAO,CAACx4C,OAAO,CAACyP,KAAK,EAAE,SAAS,EAAExP,OAAO,CAAC;MACrD;MACAwP,KAAK,GAAG,CAAC+oC,OAAO,CAACx4C,OAAO,CAACyP,KAAK,EAAEsrC,UAAU,GAAG,KAAK,GAAGvsC,KAAK,CAAC;MAC3D,IAAIgqC,OAAO,CAACz4C,IAAI,CAACrmB,GAAG,EAAEtC,GAAG,EAAEo3B,KAAK,CAAC,GAAG,MAAM,GAAG+jC,QAAQ,EAAE;QACrD,MAAM,IAAI/yC,KAAK,CAACpoB,GAAG,GAAG,OAAO,GAAGsC,GAAG,GAAG,sCAAsC,GAAG64D,QAAQ,GAAG,GAAG,GAAG/jC,KAAK,CAAC;MACxG;MACA,IAAM+qC,UAAU,GAAG96D,OAAO,CAAC0Q,KAAK,CAACkmB,MAAM,KAAK,MAAM,IAAI99B,EAAE,CAACyjE,iBAAiB,EAAE;MAC5E,KAAK1B,IAAI,GAAG7pC,KAAK,EAAE7mB,KAAK,GAAG,CAAC,EAAE0wD,IAAI,GAAG5/D,GAAG,EAAE4/D,IAAI,GAAG,CAACd,OAAO,CAACt/D,GAAG,CAACogE,IAAI,EAAE/G,QAAQ,EAAE/jC,KAAK,CAAC,EAAE5lB,KAAK,EAAE,EAAE;QAC7FywD,OAAO,CAAClqD,KAAK,EAAEmqD,IAAI,EAAEC,UAAU,CAAC;MAClC;MACA,IAAID,IAAI,KAAK5/D,GAAG,IAAI+E,OAAO,CAAC6uB,MAAM,KAAK,OAAO,IAAI1kB,KAAK,KAAK,CAAC,EAAE;QAC7DywD,OAAO,CAAClqD,KAAK,EAAEmqD,IAAI,EAAEC,UAAU,CAAC;MAClC;MACA,OAAOz8D,MAAM,CAACC,IAAI,CAACoS,KAAK,CAAC,CAACP,IAAI,CAAC,UAACjlB,CAAC,EAAEQ,CAAC;QAAA,OAAKR,CAAC,GAAGQ,CAAC;MAAA,EAAC,CAAC6vB,GAAG,CAAC,UAAAjtB,CAAC;QAAA,OAAI,CAACA,CAAC;MAAA,EAAC;IAC9D;EAAC;IAAAqJ,GAAA;IAAAC,KAAA,EACD,SAAA0U,iBAAiB1U,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAMihE,OAAO,GAAGjhE,EAAE,CAACkhE,QAAQ;MAC3B,IAAMiC,QAAQ,GAAGnjE,EAAE,CAACkH,OAAO,CAAC66D,IAAI;MAChC,IAAIoB,QAAQ,CAACO,aAAa,EAAE;QAC1B,OAAOzC,OAAO,CAAC74C,MAAM,CAACtpB,KAAK,EAAEqkE,QAAQ,CAACO,aAAa,CAAC;MACtD;MACA,OAAOzC,OAAO,CAAC74C,MAAM,CAACtpB,KAAK,EAAEqkE,QAAQ,CAACN,cAAc,CAACc,QAAQ,CAAC;IAChE;EAAC;IAAA9kE,GAAA;IAAAC,KAAA,EACD,SAAA8kE,oBAAoB7B,IAAI,EAAE54D,KAAK,EAAEyO,KAAK,EAAEwQ,MAAM,EAAE;MAC9C,IAAMpoB,EAAE,GAAG,IAAI;MACf,IAAMkH,OAAO,GAAGlH,EAAE,CAACkH,OAAO;MAC1B,IAAMihB,OAAO,GAAGjhB,OAAO,CAAC66D,IAAI,CAACc,cAAc;MAC3C,IAAMt6C,IAAI,GAAGvoB,EAAE,CAACyiE,KAAK;MACrB,IAAMN,SAAS,GAAGniE,EAAE,CAAC0iE,UAAU;MAC/B,IAAMmB,WAAW,GAAGt7C,IAAI,IAAIJ,OAAO,CAACI,IAAI,CAAC;MACzC,IAAMu7C,WAAW,GAAG3B,SAAS,IAAIh6C,OAAO,CAACg6C,SAAS,CAAC;MACnD,IAAMphE,IAAI,GAAG6W,KAAK,CAACzO,KAAK,CAAC;MACzB,IAAM+tB,KAAK,GAAGirC,SAAS,IAAI2B,WAAW,IAAI/iE,IAAI,IAAIA,IAAI,CAACm2B,KAAK;MAC5D,IAAM3jB,KAAK,GAAGvT,EAAE,CAACkhE,QAAQ,CAAC94C,MAAM,CAAC25C,IAAI,EAAE35C,MAAM,KAAK8O,KAAK,GAAG4sC,WAAW,GAAGD,WAAW,CAAC,CAAC;MACrF,IAAME,SAAS,GAAG78D,OAAO,CAAC0Q,KAAK,CAACzgB,QAAQ;MACxC,OAAO4sE,SAAS,GAAG5sE,QAAQ,CAAC4sE,SAAS,EAAE,CAACxwD,KAAK,EAAEpK,KAAK,EAAEyO,KAAK,CAAC,EAAE5X,EAAE,CAAC,GAAGuT,KAAK;IAC3E;EAAC;IAAA1U,GAAA;IAAAC,KAAA,EACD,SAAA6/B,mBAAmB/mB,KAAK,EAAE;MACxB,IAAIllB,CAAC,EAAEwW,IAAI,EAAEnI,IAAI;MACjB,KAAKrO,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG0O,KAAK,CAACvX,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CqO,IAAI,GAAG6W,KAAK,CAACllB,CAAC,CAAC;QACfqO,IAAI,CAACwS,KAAK,GAAG,IAAI,CAACqwD,mBAAmB,CAAC7iE,IAAI,CAACjC,KAAK,EAAEpM,CAAC,EAAEklB,KAAK,CAAC;MAC7D;IACF;EAAC;IAAA/Y,GAAA;IAAAC,KAAA,EACD,SAAAykE,mBAAmBzkE,KAAK,EAAE;MACxB,IAAMkB,EAAE,GAAG,IAAI;MACf,OAAOlB,KAAK,KAAK,IAAI,GAAG8T,GAAG,GAAG,CAAC9T,KAAK,GAAGkB,EAAE,CAACH,GAAG,KAAKG,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC;IACpE;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAA6Y,iBAAiB7Y,KAAK,EAAE;MACtB,IAAMkB,EAAE,GAAG,IAAI;MACf,IAAMgkE,OAAO,GAAGhkE,EAAE,CAAC2iE,QAAQ;MAC3B,IAAM92C,GAAG,GAAG7rB,EAAE,CAACujE,kBAAkB,CAACzkE,KAAK,CAAC;MACxC,OAAOkB,EAAE,CAAC4d,kBAAkB,CAAC,CAAComD,OAAO,CAAClkE,KAAK,GAAG+rB,GAAG,IAAIm4C,OAAO,CAACjhE,MAAM,CAAC;IACtE;EAAC;IAAAlE,GAAA;IAAAC,KAAA,EACD,SAAAwiC,iBAAiBC,KAAK,EAAE;MACtB,IAAMvhC,EAAE,GAAG,IAAI;MACf,IAAMgkE,OAAO,GAAGhkE,EAAE,CAAC2iE,QAAQ;MAC3B,IAAM92C,GAAG,GAAG7rB,EAAE,CAACyhC,kBAAkB,CAACF,KAAK,CAAC,GAAGyiC,OAAO,CAACjhE,MAAM,GAAGihE,OAAO,CAAC57D,GAAG;MACvE,OAAOpI,EAAE,CAACH,GAAG,GAAGgsB,GAAG,IAAI7rB,EAAE,CAACmC,GAAG,GAAGnC,EAAE,CAACH,GAAG,CAAC;IACzC;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAAmlE,cAAc1wD,KAAK,EAAE;MACnB,IAAMvT,EAAE,GAAG,IAAI;MACf,IAAMkkE,SAAS,GAAGlkE,EAAE,CAACkH,OAAO,CAAC0Q,KAAK;MAClC,IAAMusD,cAAc,GAAGnkE,EAAE,CAAC8N,GAAG,CAACu9C,WAAW,CAAC93C,KAAK,CAAC,CAAC2H,KAAK;MACtD,IAAMkE,KAAK,GAAGjrB,SAAS,CAAC6L,EAAE,CAACua,YAAY,EAAE,GAAG2pD,SAAS,CAACxtC,WAAW,GAAGwtC,SAAS,CAACztC,WAAW,CAAC;MAC1F,IAAM2tC,WAAW,GAAGxkE,IAAI,CAACkf,GAAG,CAACM,KAAK,CAAC;MACnC,IAAMilD,WAAW,GAAGzkE,IAAI,CAACof,GAAG,CAACI,KAAK,CAAC;MACnC,IAAMklD,YAAY,GAAGtkE,EAAE,CAACkhC,uBAAuB,CAAC,CAAC,CAAC,CAACv5B,IAAI;MACvD,OAAO;QACLrS,CAAC,EAAG6uE,cAAc,GAAGC,WAAW,GAAKE,YAAY,GAAGD,WAAY;QAChE3wE,CAAC,EAAGywE,cAAc,GAAGE,WAAW,GAAKC,YAAY,GAAGF;MACtD,CAAC;IACH;EAAC;IAAAvlE,GAAA;IAAAC,KAAA,EACD,SAAAukE,kBAAkBkB,WAAW,EAAE;MAC7B,IAAMvkE,EAAE,GAAG,IAAI;MACf,IAAMmjE,QAAQ,GAAGnjE,EAAE,CAACkH,OAAO,CAAC66D,IAAI;MAChC,IAAMc,cAAc,GAAGM,QAAQ,CAACN,cAAc;MAC9C,IAAMz6C,MAAM,GAAGy6C,cAAc,CAACM,QAAQ,CAAC56C,IAAI,CAAC,IAAIs6C,cAAc,CAAC1C,WAAW;MAC1E,IAAMqE,YAAY,GAAGxkE,EAAE,CAAC4jE,mBAAmB,CAACW,WAAW,EAAE,CAAC,EAAEnC,mBAAmB,CAACpiE,EAAE,EAAE,CAACukE,WAAW,CAAC,EAAEvkE,EAAE,CAAC0iE,UAAU,CAAC,EAAEt6C,MAAM,CAAC;MAC1H,IAAMzgB,IAAI,GAAG3H,EAAE,CAACikE,aAAa,CAACO,YAAY,CAAC;MAC3C,IAAM/C,QAAQ,GAAG7hE,IAAI,CAACoE,KAAK,CAAChE,EAAE,CAACua,YAAY,EAAE,GAAGva,EAAE,CAACkb,KAAK,GAAGvT,IAAI,CAACrS,CAAC,GAAG0K,EAAE,CAACib,MAAM,GAAGtT,IAAI,CAACjU,CAAC,CAAC,GAAG,CAAC;MAC3F,OAAO+tE,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC;IACpC;EAAC;IAAA5iE,GAAA;IAAAC,KAAA,EACD,SAAA2kE,kBAAA,EAAoB;MAClB,IAAMzjE,EAAE,GAAG,IAAI;MACf,IAAIgiE,UAAU,GAAGhiE,EAAE,CAACkX,MAAM,CAACtN,IAAI,IAAI,EAAE;MACrC,IAAIlX,CAAC,EAAEwW,IAAI;MACX,IAAI84D,UAAU,CAAC3hE,MAAM,EAAE;QACrB,OAAO2hE,UAAU;MACnB;MACA,IAAM5qD,KAAK,GAAGpX,EAAE,CAACwL,uBAAuB,EAAE;MAC1C,IAAIxL,EAAE,CAAC4iE,WAAW,IAAIxrD,KAAK,CAAC/W,MAAM,EAAE;QAClC,OAAQL,EAAE,CAACkX,MAAM,CAACtN,IAAI,GAAGwN,KAAK,CAAC,CAAC,CAAC,CAACvL,UAAU,CAACuH,kBAAkB,CAACpT,EAAE,CAAC;MACrE;MACA,KAAKtN,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGkO,KAAK,CAAC/W,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9CsvE,UAAU,GAAGA,UAAU,CAAC33D,MAAM,CAAC+M,KAAK,CAAC1kB,CAAC,CAAC,CAACmZ,UAAU,CAACuH,kBAAkB,CAACpT,EAAE,CAAC,CAAC;MAC5E;MACA,OAAQA,EAAE,CAACkX,MAAM,CAACtN,IAAI,GAAG5J,EAAE,CAACykE,SAAS,CAACzC,UAAU,CAAC;IACnD;EAAC;IAAAnjE,GAAA;IAAAC,KAAA,EACD,SAAAokE,mBAAA,EAAqB;MACnB,IAAMljE,EAAE,GAAG,IAAI;MACf,IAAMgiE,UAAU,GAAGhiE,EAAE,CAACkX,MAAM,CAACrF,MAAM,IAAI,EAAE;MACzC,IAAInf,CAAC,EAAEwW,IAAI;MACX,IAAI84D,UAAU,CAAC3hE,MAAM,EAAE;QACrB,OAAO2hE,UAAU;MACnB;MACA,IAAMnwD,MAAM,GAAG7R,EAAE,CAAC8R,SAAS,EAAE;MAC7B,KAAKpf,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG2I,MAAM,CAACxR,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC/CsvE,UAAU,CAACtgE,IAAI,CAAC0P,MAAK,CAACpR,EAAE,EAAE6R,MAAM,CAACnf,CAAC,CAAC,CAAC,CAAC;MACvC;MACA,OAAQsN,EAAE,CAACkX,MAAM,CAACrF,MAAM,GAAG7R,EAAE,CAAC4iE,WAAW,GAAGZ,UAAU,GAAGhiE,EAAE,CAACykE,SAAS,CAACzC,UAAU,CAAC;IACnF;EAAC;IAAAnjE,GAAA;IAAAC,KAAA,EACD,SAAA2lE,UAAUz9D,MAAM,EAAE;MAChB,OAAO/S,YAAY,CAAC+S,MAAM,CAACqQ,IAAI,CAAC0pD,MAAM,CAAC,CAAC;IAC1C;EAAC;EAAA,OAAAsB,SAAA;AAAA,EA7PqBtnC,KAAK;AA+P7BsnC,SAAS,CAAC/3D,EAAE,GAAG,MAAM;AACrB+3D,SAAS,CAACtvE,QAAQ,GAAG;EACnBgjC,MAAM,EAAE,MAAM;EACdjN,QAAQ,EAAE,CAAC,CAAC;EACZi5C,IAAI,EAAE;IACJV,MAAM,EAAE,KAAK;IACb94C,IAAI,EAAE,KAAK;IACXgQ,KAAK,EAAE,KAAK;IACZ+oC,UAAU,EAAE,KAAK;IACjBE,OAAO,EAAE,aAAa;IACtBqB,cAAc,EAAE,CAAC;EACnB,CAAC;EACDjrD,KAAK,EAAE;IACLkmB,MAAM,EAAE,MAAM;IACd5G,KAAK,EAAE;MACLa,OAAO,EAAE;IACX;EACF;AACF,CAAC;AAED,SAASimB,WAAWA,CAAC0mB,KAAK,EAAEppD,GAAG,EAAEnT,OAAO,EAAE;EACxC,IAAIgd,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAGs/C,KAAK,CAACrkE,MAAM,GAAG,CAAC;EACzB,IAAIskE,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU;EAClD,IAAI38D,OAAO,EAAE;IACX,IAAImT,GAAG,IAAIopD,KAAK,CAACv/C,EAAE,CAAC,CAAC0G,GAAG,IAAIvQ,GAAG,IAAIopD,KAAK,CAACt/C,EAAE,CAAC,CAACyG,GAAG,EAAE;MAAA,IAAAk5C,aAAA,GACpCxvE,YAAY,CAACmvE,KAAK,EAAE,KAAK,EAAEppD,GAAG,CAAC;MAAzC6J,EAAE,GAAA4/C,aAAA,CAAF5/C,EAAE;MAAEC,EAAE,GAAA2/C,aAAA,CAAF3/C,EAAE;IACV;IAAC,IAAA4/C,SAAA,GACsCN,KAAK,CAACv/C,EAAE,CAAC;IAAzCw/C,UAAU,GAAAK,SAAA,CAAfn5C,GAAG;IAAoBg5C,UAAU,GAAAG,SAAA,CAAhBjD,IAAI;IAAA,IAAAkD,SAAA,GACgBP,KAAK,CAACt/C,EAAE,CAAC;IAAzCw/C,UAAU,GAAAK,SAAA,CAAfp5C,GAAG;IAAoBi5C,UAAU,GAAAG,SAAA,CAAhBlD,IAAI;EACzB,CAAC,MAAM;IACL,IAAIzmD,GAAG,IAAIopD,KAAK,CAACv/C,EAAE,CAAC,CAAC48C,IAAI,IAAIzmD,GAAG,IAAIopD,KAAK,CAACt/C,EAAE,CAAC,CAAC28C,IAAI,EAAE;MAAA,IAAAmD,aAAA,GACtC3vE,YAAY,CAACmvE,KAAK,EAAE,MAAM,EAAEppD,GAAG,CAAC;MAA1C6J,EAAE,GAAA+/C,aAAA,CAAF//C,EAAE;MAAEC,EAAE,GAAA8/C,aAAA,CAAF9/C,EAAE;IACV;IAAC,IAAA+/C,UAAA,GACsCT,KAAK,CAACv/C,EAAE,CAAC;IAAxCw/C,UAAU,GAAAQ,UAAA,CAAhBpD,IAAI;IAAmB8C,UAAU,GAAAM,UAAA,CAAft5C,GAAG;IAAA,IAAAu5C,UAAA,GACgBV,KAAK,CAACt/C,EAAE,CAAC;IAAxCw/C,UAAU,GAAAQ,UAAA,CAAhBrD,IAAI;IAAmB+C,UAAU,GAAAM,UAAA,CAAfv5C,GAAG;EACzB;EACA,IAAMw5C,IAAI,GAAGT,UAAU,GAAGD,UAAU;EACpC,OAAOU,IAAI,GAAGR,UAAU,GAAG,CAACC,UAAU,GAAGD,UAAU,KAAKvpD,GAAG,GAAGqpD,UAAU,CAAC,GAAGU,IAAI,GAAGR,UAAU;AAC/F;AAAC,IACKS,eAAe,0BAAAC,UAAA;EAAA/rD,SAAA,CAAA8rD,eAAA,EAAAC,UAAA;EAAA,IAAAC,QAAA,GAAA9rD,YAAA,CAAA4rD,eAAA;EACnB,SAAAA,gBAAY79D,KAAK,EAAE;IAAA,IAAAg+D,OAAA;IAAApnE,eAAA,OAAAinE,eAAA;IACjBG,OAAA,GAAAD,QAAA,CAAAvlE,IAAA,OAAMwH,KAAK;IACXg+D,OAAA,CAAKC,MAAM,GAAG,EAAE;IAChBD,OAAA,CAAKE,OAAO,GAAGhnE,SAAS;IACxB8mE,OAAA,CAAKG,WAAW,GAAGjnE,SAAS;IAAC,OAAA8mE,OAAA;EAC/B;EAAC7mE,YAAA,CAAA0mE,eAAA;IAAAzmE,GAAA;IAAAC,KAAA,EACD,SAAAwkE,YAAA,EAAc;MACZ,IAAMtjE,EAAE,GAAG,IAAI;MACf,IAAMgiE,UAAU,GAAGhiE,EAAE,CAAC6lE,sBAAsB,EAAE;MAC9C,IAAMnB,KAAK,GAAG1kE,EAAE,CAAC0lE,MAAM,GAAG1lE,EAAE,CAAC8lE,gBAAgB,CAAC9D,UAAU,CAAC;MACzDhiE,EAAE,CAAC2lE,OAAO,GAAG3nB,WAAW,CAAC0mB,KAAK,EAAE1kE,EAAE,CAACH,GAAG,CAAC;MACvCG,EAAE,CAAC4lE,WAAW,GAAG5nB,WAAW,CAAC0mB,KAAK,EAAE1kE,EAAE,CAACmC,GAAG,CAAC,GAAGnC,EAAE,CAAC2lE,OAAO;MACxD1rD,IAAA,CAAAC,eAAA,CAAAorD,eAAA,CAAAtuD,SAAA,wBAAA/W,IAAA,OAAkB+hE,UAAU;IAC9B;EAAC;IAAAnjE,GAAA;IAAAC,KAAA,EACD,SAAAgnE,iBAAiB9D,UAAU,EAAE;MAC3B,IAAOniE,GAAG,GAAS,IAAI,CAAhBA,GAAG;QAAEsC,GAAG,GAAI,IAAI,CAAXA,GAAG;MACf,IAAMzB,KAAK,GAAG,EAAE;MAChB,IAAMgkE,KAAK,GAAG,EAAE;MAChB,IAAIhyE,CAAC,EAAEwW,IAAI,EAAEsI,IAAI,EAAEgG,IAAI,EAAEiB,IAAI;MAC7B,KAAK/lB,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAG84D,UAAU,CAAC3hE,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QACnD8kB,IAAI,GAAGwqD,UAAU,CAACtvE,CAAC,CAAC;QACpB,IAAI8kB,IAAI,IAAI3X,GAAG,IAAI2X,IAAI,IAAIrV,GAAG,EAAE;UAC9BzB,KAAK,CAACgB,IAAI,CAAC8V,IAAI,CAAC;QAClB;MACF;MACA,IAAI9W,KAAK,CAACL,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO,CACL;UAAC0hE,IAAI,EAAEliE,GAAG;UAAEgsB,GAAG,EAAE;QAAC,CAAC,EACnB;UAACk2C,IAAI,EAAE5/D,GAAG;UAAE0pB,GAAG,EAAE;QAAC,CAAC,CACpB;MACH;MACA,KAAKn5B,CAAC,GAAG,CAAC,EAAEwW,IAAI,GAAGxI,KAAK,CAACL,MAAM,EAAE3N,CAAC,GAAGwW,IAAI,EAAE,EAAExW,CAAC,EAAE;QAC9C+lB,IAAI,GAAG/X,KAAK,CAAChO,CAAC,GAAG,CAAC,CAAC;QACnB8e,IAAI,GAAG9Q,KAAK,CAAChO,CAAC,GAAG,CAAC,CAAC;QACnB8kB,IAAI,GAAG9W,KAAK,CAAChO,CAAC,CAAC;QACf,IAAIkN,IAAI,CAAC24B,KAAK,CAAC,CAAC9f,IAAI,GAAGjH,IAAI,IAAI,CAAC,CAAC,KAAKgG,IAAI,EAAE;UAC1CktD,KAAK,CAAChjE,IAAI,CAAC;YAACqgE,IAAI,EAAEvqD,IAAI;YAAEqU,GAAG,EAAEn5B,CAAC,IAAIwW,IAAI,GAAG,CAAC;UAAC,CAAC,CAAC;QAC/C;MACF;MACA,OAAOw7D,KAAK;IACd;EAAC;IAAA7lE,GAAA;IAAAC,KAAA,EACD,SAAA+mE,uBAAA,EAAyB;MACvB,IAAM7lE,EAAE,GAAG,IAAI;MACf,IAAIgiE,UAAU,GAAGhiE,EAAE,CAACkX,MAAM,CAACpP,GAAG,IAAI,EAAE;MACpC,IAAIk6D,UAAU,CAAC3hE,MAAM,EAAE;QACrB,OAAO2hE,UAAU;MACnB;MACA,IAAMp4D,IAAI,GAAG5J,EAAE,CAACyjE,iBAAiB,EAAE;MACnC,IAAMlwD,KAAK,GAAGvT,EAAE,CAACkjE,kBAAkB,EAAE;MACrC,IAAIt5D,IAAI,CAACvJ,MAAM,IAAIkT,KAAK,CAAClT,MAAM,EAAE;QAC/B2hE,UAAU,GAAGhiE,EAAE,CAACykE,SAAS,CAAC76D,IAAI,CAACS,MAAM,CAACkJ,KAAK,CAAC,CAAC;MAC/C,CAAC,MAAM;QACLyuD,UAAU,GAAGp4D,IAAI,CAACvJ,MAAM,GAAGuJ,IAAI,GAAG2J,KAAK;MACzC;MACAyuD,UAAU,GAAGhiE,EAAE,CAACkX,MAAM,CAACpP,GAAG,GAAGk6D,UAAU;MACvC,OAAOA,UAAU;IACnB;EAAC;IAAAnjE,GAAA;IAAAC,KAAA,EACD,SAAAykE,mBAAmBzkE,KAAK,EAAE;MACxB,OAAO,CAACk/C,WAAW,CAAC,IAAI,CAAC0nB,MAAM,EAAE5mE,KAAK,CAAC,GAAG,IAAI,CAAC6mE,OAAO,IAAI,IAAI,CAACC,WAAW;IAC5E;EAAC;IAAA/mE,GAAA;IAAAC,KAAA,EACD,SAAAwiC,iBAAiBC,KAAK,EAAE;MACtB,IAAMvhC,EAAE,GAAG,IAAI;MACf,IAAMgkE,OAAO,GAAGhkE,EAAE,CAAC2iE,QAAQ;MAC3B,IAAMnhC,OAAO,GAAGxhC,EAAE,CAACyhC,kBAAkB,CAACF,KAAK,CAAC,GAAGyiC,OAAO,CAACjhE,MAAM,GAAGihE,OAAO,CAAC57D,GAAG;MAC3E,OAAO41C,WAAW,CAACh+C,EAAE,CAAC0lE,MAAM,EAAElkC,OAAO,GAAGxhC,EAAE,CAAC4lE,WAAW,GAAG5lE,EAAE,CAAC2lE,OAAO,EAAE,IAAI,CAAC;IAC5E;EAAC;EAAA,OAAAL,eAAA;AAAA,EAlE2BjD,SAAS;AAoEvCiD,eAAe,CAACh7D,EAAE,GAAG,YAAY;AACjCg7D,eAAe,CAACvyE,QAAQ,GAAGsvE,SAAS,CAACtvE,QAAQ;AAE7C,IAAI0Z,MAAM,GAAG,aAAalH,MAAM,CAACqP,MAAM,CAAC;EACxCmT,SAAS,EAAE,IAAI;EACfwwC,aAAa,EAAEA,aAAa;EAC5B4C,WAAW,EAAEA,WAAW;EACxBY,gBAAgB,EAAEA,gBAAgB;EAClCqC,iBAAiB,EAAEA,iBAAiB;EACpCiE,SAAS,EAAEA,SAAS;EACpBiD,eAAe,EAAEA;AACjB,CAAC,CAAC;AAEF,IAAMS,aAAa,GAAG,CACpBj+C,WAAW,EACXnU,QAAQ,EACRqK,OAAO,EACPvR,MAAM,CACP;AAED,SAASnJ,SAAS,EAAE+C,UAAU,EAAEozC,UAAU,EAAEngC,aAAa,EAAE8nC,UAAU,EAAEzxB,YAAY,EAAES,aAAa,EAAEnT,gBAAgB,EAAEs7C,aAAa,EAAEpoB,KAAK,EAAEviC,iBAAiB,EAAEi2C,iBAAiB,IAAIoU,UAAU,EAAEjkC,WAAW,EAAEtU,kBAAkB,EAAEgV,OAAO,EAAEq0B,aAAa,IAAImP,MAAM,EAAE3sC,WAAW,EAAE8iC,aAAa,IAAIrE,MAAM,EAAEvmC,cAAc,EAAEg6B,WAAW,EAAE0d,WAAW,EAAEY,gBAAgB,EAAE90C,aAAa,EAAEy3B,YAAY,EAAE94B,mBAAmB,EAAEwB,eAAe,EAAEg3C,iBAAiB,EAAErjC,KAAK,EAAEpT,iBAAiB,EAAE4nC,eAAe,IAAI4I,QAAQ,EAAEriC,KAAK,EAAEusC,SAAS,EAAEiD,eAAe,EAAEjW,YAAY,IAAIX,KAAK,EAAEmJ,cAAc,IAAI3E,OAAO,EAAEpqC,QAAQ,IAAIk9C,SAAS,EAAEvjE,QAAQ,EAAEqlB,WAAW,EAAEnU,QAAQ,EAAE4Y,OAAO,EAAEvO,OAAO,EAAE+nD,aAAa,EAAE/7B,QAAQ,EAAEv9B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}